<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"	
	xmlns:view="view.*" creationComplete="init()"
	 height="100%" width="100%"
	 xmlns:vo="vo.*" fontSize="12" xmlns:component="component.*" horizontalAlign="center">
<mx:Script>
	<![CDATA[
		import vo.Player;
		import mx.events.CloseEvent;
		import mx.managers.PopUpManager;
		import popup.AddSysNotice;
		import popup.UpdateSysNotice;
		import mx.controls.TextInput;
		import vo.PayLog;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.utils.StringUtil;
		import mx.validators.NumberValidator;
		import mx.validators.StringValidator;
		import mx.validators.Validator;
		import utils.ColumnFactory;
		[Bindable]
		private var payLogList:ArrayCollection=new ArrayCollection();
		[Bindable]
		private var currentPayLog:PayLog = null;
		[Bindable]
		private var selectedPayType:int = -1;
		[Bindable]
		private var selectedUseType:int = -1;
		[Bindable]
		public var playerList:ArrayCollection=new ArrayCollection();
		//[Bindable]
		//public var searchList:ArrayCollection=new ArrayCollection();
		private var player:Player = new Player();
		private function init():void{
			playerDataGrid.columns=ColumnFactory.getPlayerColumns(false);
			//getRo.getPlayerList();
		}
		private function selectHandler():void{
			this.player=playerDataGrid.selectedItem as Player;
			playerLogView.playerName=player.name
			playerLogView.playerId = player.id;
		 	playerLogView.init();
		}
		
		private function getPayLogListHandler(evt:ResultEvent):void{
			payLogList = evt.result as ArrayCollection;
			payLogList.filterFunction=typeFilter;
			payLogList.refresh();
		}
		private function defaultFaultHandler(evt:FaultEvent):void{
			Alert.show(evt.fault.faultString);
		}
		private function queryBtnClick():void{
			if(StringUtil.trim(playerId.text)){
				var numValidte:NumberValidator=new NumberValidator();
				numValidte.property="text";
				numValidte.domain = "int";
				if(numValidte.validate(StringUtil.trim(playerId.text)).type=="invalid"){
					Alert.show("PlayerId not correct");
				} else if(numValidte.validate(StringUtil.trim(playerId.text)).type=="valid"){
					getRo.getpayloListByPlayerId(StringUtil.trim(playerId.text));
				}
				
			} else {
				Alert.show("PlayerId not empty");
			}
		}
		private function clearBtnClick():void{
			playerId.text = "";
		}
		private function typeFilter(item:Object):Boolean{
			var log:PayLog = item as PayLog;
			if(this.selectedPayType == -1 && this.selectedUseType==-1 )
				return true;
			if((log.payType==this.selectedPayType||this.selectedPayType==-1) && (log.itemType==this.selectedUseType||this.selectedUseType==-1))			
				return true;
			else 
				return false;
		}
		private function doPayTypeFilter(evt:Event):void{
			this.selectedPayType  = evt.target.selectedItem.data;
        	payLogList.filterFunction=typeFilter;
        	payLogList.refresh();
		}
		private function doUseTypeFilter(evt:Event):void{
			this.selectedUseType  = evt.target.selectedItem.data;
        	payLogList.filterFunction=typeFilter;
        	payLogList.refresh();
		}
		[Bindable]
		public var payTypes:ArrayCollection = new ArrayCollection(
            [ {label:"------所有------", data:-1}, 
              {label:"登陆频道", data:0}, 
              {label:"进入房间", data:1},
              {label:"被杀数", data:2},
              {label:"杀敌数", data:3},
              {label:"获得经验", data:4},
              {label:"获得G币", data:5},
              {label:"获得赠点", data:6},
              {label:"消耗G币", data:7},
              {label:"消耗点券", data:8},
              {label:"购买道具", data:9},
              {label:"消耗赠点", data:10}
        ]);
        private function onShowplayerLogView(e:Event):void{
			var btn:Button = e.currentTarget as Button;
			if(playerLogView.visible){
				playerLogView.visible = false;
				playerLogView.height  = 0;
				btn.label 		= "查看玩家日志";
			}else{
				playerLogView.visible = true;
				playerLogView.height = 400;
				btn.label 		= "隐藏玩家日志";
			}
		}
		import utils.*;
		private function onSearchBtnClick():void{
			this.player = new Player();
			//this.searchList= new ArrayCollection();
			if(StringUtil.trim(playerId.text)){
				var result:int = ValidateUtils.validateInt(StringUtil.trim(playerId.text));
				if(result == 2){
					Alert.show("Player Id应为整数");
					return;
				} else if(result == 0){
					getRo.getPlayerById(StringUtil.trim(playerId.text));
				}
				playerName.text="";
			} else if(StringUtil.trim(playerName.text) == "*"){
				//searchList = playerList;
				//getRo.getPlayerList();
				getRo.fuzzySelectByName(StringUtil.trim(""));
			}else{
				getRo.fuzzySelectByName(StringUtil.trim(playerName.text));
			}
		}
		private function getPlayerListHandler(evt:ResultEvent):void{
			playerList=evt.result as ArrayCollection;
		}
		private function defaultFaultHandle(evt:FaultEvent):void{
			Alert.show(evt.fault.faultString);
		}
		private function getPlayerByIdHandler(evt:ResultEvent):void{
		 	this.playerList=evt.result as ArrayCollection;
		}
		private function fuzzySelectByNameHandler(evt:ResultEvent):void{
		 	this.playerList=evt.result as ArrayCollection;
		}
	]]>
</mx:Script>
	<mx:RemoteObject id="getRo" destination="ro.get">
		<mx:method name="fuzzySelectByName" result="fuzzySelectByNameHandler(event)" fault="defaultFaultHandle(event)"/>
		<mx:method name="getPlayerById" result="getPlayerByIdHandler(event)" fault=""/>
		<mx:method name="getPlayerList" result="getPlayerListHandler(event)" fault="defaultFaultHandle(event)"/>
	</mx:RemoteObject>
	<mx:HBox  height="100%" width="100%">
	<mx:VBox  height="100%" width="100%">
		<mx:HBox>
		<mx:ApplicationControlBar width="100%" >	
			<mx:Button id="showplayerLogView" click="onShowplayerLogView(event)" label="{resourceManager.getString('Language','button.HidePlayerLog')}"/>
			<mx:HBox>
			<mx:Label text="Player ID"/>
			<mx:TextInput id="playerId" />
			<mx:Label text="{resourceManager.getString('Language','label.CharacterName')}"/>
			<mx:TextInput id="playerName" />
		</mx:HBox>
		<mx:Button id="searchBtn"  label="{resourceManager.getString('Language','button.Search')}"  click="onSearchBtnClick()"/>
		</mx:ApplicationControlBar>
	</mx:HBox>
			<mx:VDividedBox width="100%" height="100%">
				<component:MyDataGrid id="playerDataGrid" dataProvider="{playerList}" itemClick="selectHandler()" lockedColumnCount="3" 
				width="100%" height="50%" editable="false">
				</component:MyDataGrid>
				<view:PlayerLogView id="playerLogView" width="100%" height="400" visible="true"/>
			</mx:VDividedBox>
	</mx:VBox>
	</mx:HBox>
</mx:VBox>
