// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

package com.pearl.fcw.proto.model;

/**
 * <pre>
 *过关结算信息
 * </pre>
 *
 * Protobuf type {@code fcw.proto.model.ProtoStageClear}
 */
public  final class ProtoStageClear extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:fcw.proto.model.ProtoStageClear)
    ProtoStageClearOrBuilder {
  // Use ProtoStageClear.newBuilder() to construct.
  private ProtoStageClear(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ProtoStageClear() {
    serverId_ = 0;
    channelId_ = 0;
    isClear_ = 0;
    roomId_ = 0;
    hostPlayerId_ = 0;
    startTime_ = 0;
    endTime_ = 0;
    sysLevelId_ = 0;
    isTeam_ = 0;
    winTeamId_ = 0;
    team0Id_ = 0;
    team1Id_ = 0;
    team0Score_ = 0;
    team1Score_ = 0;
    damagePercent_ = 0F;
    totalRes_ = 0F;
    mvpPlayerId_ = 0;
    mvpSysCharacterId_ = 0;
    firstKill_ = 0;
    firstDead_ = 0;
    onlineActivityOffset_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ProtoStageClear(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            serverId_ = input.readSInt32();
            break;
          }
          case 16: {

            channelId_ = input.readSInt32();
            break;
          }
          case 24: {

            isClear_ = input.readInt32();
            break;
          }
          case 80: {

            roomId_ = input.readSInt32();
            break;
          }
          case 88: {

            hostPlayerId_ = input.readSInt32();
            break;
          }
          case 240: {

            startTime_ = input.readSInt32();
            break;
          }
          case 248: {

            endTime_ = input.readSInt32();
            break;
          }
          case 320: {

            sysLevelId_ = input.readSInt32();
            break;
          }
          case 328: {

            isTeam_ = input.readSInt32();
            break;
          }
          case 400: {

            winTeamId_ = input.readSInt32();
            break;
          }
          case 408: {

            team0Id_ = input.readSInt32();
            break;
          }
          case 416: {

            team1Id_ = input.readSInt32();
            break;
          }
          case 640: {

            team0Score_ = input.readInt32();
            break;
          }
          case 648: {

            team1Score_ = input.readInt32();
            break;
          }
          case 725: {

            damagePercent_ = input.readFloat();
            break;
          }
          case 805: {

            totalRes_ = input.readFloat();
            break;
          }
          case 880: {

            mvpPlayerId_ = input.readInt32();
            break;
          }
          case 888: {

            mvpSysCharacterId_ = input.readInt32();
            break;
          }
          case 960: {

            firstKill_ = input.readInt32();
            break;
          }
          case 968: {

            firstDead_ = input.readInt32();
            break;
          }
          case 1040: {

            onlineActivityOffset_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClear_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClear_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.pearl.fcw.proto.model.ProtoStageClear.class, com.pearl.fcw.proto.model.ProtoStageClear.Builder.class);
  }

  public static final int SERVERID_FIELD_NUMBER = 1;
  private int serverId_;
  /**
   * <code>optional sint32 serverId = 1;</code>
   */
  public int getServerId() {
    return serverId_;
  }

  public static final int CHANNELID_FIELD_NUMBER = 2;
  private int channelId_;
  /**
   * <code>optional sint32 channelId = 2;</code>
   */
  public int getChannelId() {
    return channelId_;
  }

  public static final int ISCLEAR_FIELD_NUMBER = 3;
  private int isClear_;
  /**
   * <pre>
   *是否正常结束
   * </pre>
   *
   * <code>optional int32 isClear = 3;</code>
   */
  public int getIsClear() {
    return isClear_;
  }

  public static final int ROOMID_FIELD_NUMBER = 10;
  private int roomId_;
  /**
   * <pre>
   *房间
   * </pre>
   *
   * <code>optional sint32 roomId = 10;</code>
   */
  public int getRoomId() {
    return roomId_;
  }

  public static final int HOSTPLAYERID_FIELD_NUMBER = 11;
  private int hostPlayerId_;
  /**
   * <pre>
   *房主玩家ID?
   * </pre>
   *
   * <code>optional sint32 hostPlayerId = 11;</code>
   */
  public int getHostPlayerId() {
    return hostPlayerId_;
  }

  public static final int STARTTIME_FIELD_NUMBER = 30;
  private int startTime_;
  /**
   * <pre>
   *fcw.proto.enums.type.EGameType gameType = 20;//地图类型,其实不需要
   * </pre>
   *
   * <code>optional sint32 startTime = 30;</code>
   */
  public int getStartTime() {
    return startTime_;
  }

  public static final int ENDTIME_FIELD_NUMBER = 31;
  private int endTime_;
  /**
   * <pre>
   *结束时间，秒
   * </pre>
   *
   * <code>optional sint32 endTime = 31;</code>
   */
  public int getEndTime() {
    return endTime_;
  }

  public static final int SYSLEVELID_FIELD_NUMBER = 40;
  private int sysLevelId_;
  /**
   * <pre>
   *地图ID
   * </pre>
   *
   * <code>optional sint32 sysLevelId = 40;</code>
   */
  public int getSysLevelId() {
    return sysLevelId_;
  }

  public static final int ISTEAM_FIELD_NUMBER = 41;
  private int isTeam_;
  /**
   * <pre>
   *是否战队战。如果不是，teamId会分别为0和1
   * </pre>
   *
   * <code>optional sint32 isTeam = 41;</code>
   */
  public int getIsTeam() {
    return isTeam_;
  }

  public static final int WINTEAMID_FIELD_NUMBER = 50;
  private int winTeamId_;
  /**
   * <pre>
   *胜利方，0和1。端游有第三方2？
   * </pre>
   *
   * <code>optional sint32 winTeamId = 50;</code>
   */
  public int getWinTeamId() {
    return winTeamId_;
  }

  public static final int TEAM0ID_FIELD_NUMBER = 51;
  private int team0Id_;
  /**
   * <code>optional sint32 team0Id = 51;</code>
   */
  public int getTeam0Id() {
    return team0Id_;
  }

  public static final int TEAM1ID_FIELD_NUMBER = 52;
  private int team1Id_;
  /**
   * <code>optional sint32 team1Id = 52;</code>
   */
  public int getTeam1Id() {
    return team1Id_;
  }

  public static final int TEAM0SCORE_FIELD_NUMBER = 80;
  private int team0Score_;
  /**
   * <code>optional int32 team0Score = 80;</code>
   */
  public int getTeam0Score() {
    return team0Score_;
  }

  public static final int TEAM1SCORE_FIELD_NUMBER = 81;
  private int team1Score_;
  /**
   * <code>optional int32 team1Score = 81;</code>
   */
  public int getTeam1Score() {
    return team1Score_;
  }

  public static final int DAMAGEPERCENT_FIELD_NUMBER = 90;
  private float damagePercent_;
  /**
   * <pre>
   * 资源争夺战中防守方 大本营损坏度
   * </pre>
   *
   * <code>optional float damagePercent = 90;</code>
   */
  public float getDamagePercent() {
    return damagePercent_;
  }

  public static final int TOTALRES_FIELD_NUMBER = 100;
  private float totalRes_;
  /**
   * <pre>
   *资源争夺战中 本场比赛能抢夺的最大资源数
   * </pre>
   *
   * <code>optional float totalRes = 100;</code>
   */
  public float getTotalRes() {
    return totalRes_;
  }

  public static final int MVPPLAYERID_FIELD_NUMBER = 110;
  private int mvpPlayerId_;
  /**
   * <code>optional int32 mvpPlayerId = 110;</code>
   */
  public int getMvpPlayerId() {
    return mvpPlayerId_;
  }

  public static final int MVPSYSCHARACTERID_FIELD_NUMBER = 111;
  private int mvpSysCharacterId_;
  /**
   * <code>optional int32 mvpSysCharacterId = 111;</code>
   */
  public int getMvpSysCharacterId() {
    return mvpSysCharacterId_;
  }

  public static final int FIRSTKILL_FIELD_NUMBER = 120;
  private int firstKill_;
  /**
   * <pre>
   *最多击杀？
   * </pre>
   *
   * <code>optional int32 firstKill = 120;</code>
   */
  public int getFirstKill() {
    return firstKill_;
  }

  public static final int FIRSTDEAD_FIELD_NUMBER = 121;
  private int firstDead_;
  /**
   * <pre>
   *最多被击杀？
   * </pre>
   *
   * <code>optional int32 firstDead = 121;</code>
   */
  public int getFirstDead() {
    return firstDead_;
  }

  public static final int ONLINEACTIVITYOFFSET_FIELD_NUMBER = 130;
  private int onlineActivityOffset_;
  /**
   * <pre>
   *?????
   * </pre>
   *
   * <code>optional int32 onlineActivityOffset = 130;</code>
   */
  public int getOnlineActivityOffset() {
    return onlineActivityOffset_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (serverId_ != 0) {
      output.writeSInt32(1, serverId_);
    }
    if (channelId_ != 0) {
      output.writeSInt32(2, channelId_);
    }
    if (isClear_ != 0) {
      output.writeInt32(3, isClear_);
    }
    if (roomId_ != 0) {
      output.writeSInt32(10, roomId_);
    }
    if (hostPlayerId_ != 0) {
      output.writeSInt32(11, hostPlayerId_);
    }
    if (startTime_ != 0) {
      output.writeSInt32(30, startTime_);
    }
    if (endTime_ != 0) {
      output.writeSInt32(31, endTime_);
    }
    if (sysLevelId_ != 0) {
      output.writeSInt32(40, sysLevelId_);
    }
    if (isTeam_ != 0) {
      output.writeSInt32(41, isTeam_);
    }
    if (winTeamId_ != 0) {
      output.writeSInt32(50, winTeamId_);
    }
    if (team0Id_ != 0) {
      output.writeSInt32(51, team0Id_);
    }
    if (team1Id_ != 0) {
      output.writeSInt32(52, team1Id_);
    }
    if (team0Score_ != 0) {
      output.writeInt32(80, team0Score_);
    }
    if (team1Score_ != 0) {
      output.writeInt32(81, team1Score_);
    }
    if (damagePercent_ != 0F) {
      output.writeFloat(90, damagePercent_);
    }
    if (totalRes_ != 0F) {
      output.writeFloat(100, totalRes_);
    }
    if (mvpPlayerId_ != 0) {
      output.writeInt32(110, mvpPlayerId_);
    }
    if (mvpSysCharacterId_ != 0) {
      output.writeInt32(111, mvpSysCharacterId_);
    }
    if (firstKill_ != 0) {
      output.writeInt32(120, firstKill_);
    }
    if (firstDead_ != 0) {
      output.writeInt32(121, firstDead_);
    }
    if (onlineActivityOffset_ != 0) {
      output.writeInt32(130, onlineActivityOffset_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (serverId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(1, serverId_);
    }
    if (channelId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(2, channelId_);
    }
    if (isClear_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, isClear_);
    }
    if (roomId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(10, roomId_);
    }
    if (hostPlayerId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(11, hostPlayerId_);
    }
    if (startTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(30, startTime_);
    }
    if (endTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(31, endTime_);
    }
    if (sysLevelId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(40, sysLevelId_);
    }
    if (isTeam_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(41, isTeam_);
    }
    if (winTeamId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(50, winTeamId_);
    }
    if (team0Id_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(51, team0Id_);
    }
    if (team1Id_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(52, team1Id_);
    }
    if (team0Score_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(80, team0Score_);
    }
    if (team1Score_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(81, team1Score_);
    }
    if (damagePercent_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(90, damagePercent_);
    }
    if (totalRes_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(100, totalRes_);
    }
    if (mvpPlayerId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(110, mvpPlayerId_);
    }
    if (mvpSysCharacterId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(111, mvpSysCharacterId_);
    }
    if (firstKill_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(120, firstKill_);
    }
    if (firstDead_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(121, firstDead_);
    }
    if (onlineActivityOffset_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(130, onlineActivityOffset_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.pearl.fcw.proto.model.ProtoStageClear)) {
      return super.equals(obj);
    }
    com.pearl.fcw.proto.model.ProtoStageClear other = (com.pearl.fcw.proto.model.ProtoStageClear) obj;

    boolean result = true;
    result = result && (getServerId()
        == other.getServerId());
    result = result && (getChannelId()
        == other.getChannelId());
    result = result && (getIsClear()
        == other.getIsClear());
    result = result && (getRoomId()
        == other.getRoomId());
    result = result && (getHostPlayerId()
        == other.getHostPlayerId());
    result = result && (getStartTime()
        == other.getStartTime());
    result = result && (getEndTime()
        == other.getEndTime());
    result = result && (getSysLevelId()
        == other.getSysLevelId());
    result = result && (getIsTeam()
        == other.getIsTeam());
    result = result && (getWinTeamId()
        == other.getWinTeamId());
    result = result && (getTeam0Id()
        == other.getTeam0Id());
    result = result && (getTeam1Id()
        == other.getTeam1Id());
    result = result && (getTeam0Score()
        == other.getTeam0Score());
    result = result && (getTeam1Score()
        == other.getTeam1Score());
    result = result && (
        java.lang.Float.floatToIntBits(getDamagePercent())
        == java.lang.Float.floatToIntBits(
            other.getDamagePercent()));
    result = result && (
        java.lang.Float.floatToIntBits(getTotalRes())
        == java.lang.Float.floatToIntBits(
            other.getTotalRes()));
    result = result && (getMvpPlayerId()
        == other.getMvpPlayerId());
    result = result && (getMvpSysCharacterId()
        == other.getMvpSysCharacterId());
    result = result && (getFirstKill()
        == other.getFirstKill());
    result = result && (getFirstDead()
        == other.getFirstDead());
    result = result && (getOnlineActivityOffset()
        == other.getOnlineActivityOffset());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + SERVERID_FIELD_NUMBER;
    hash = (53 * hash) + getServerId();
    hash = (37 * hash) + CHANNELID_FIELD_NUMBER;
    hash = (53 * hash) + getChannelId();
    hash = (37 * hash) + ISCLEAR_FIELD_NUMBER;
    hash = (53 * hash) + getIsClear();
    hash = (37 * hash) + ROOMID_FIELD_NUMBER;
    hash = (53 * hash) + getRoomId();
    hash = (37 * hash) + HOSTPLAYERID_FIELD_NUMBER;
    hash = (53 * hash) + getHostPlayerId();
    hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
    hash = (53 * hash) + getStartTime();
    hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
    hash = (53 * hash) + getEndTime();
    hash = (37 * hash) + SYSLEVELID_FIELD_NUMBER;
    hash = (53 * hash) + getSysLevelId();
    hash = (37 * hash) + ISTEAM_FIELD_NUMBER;
    hash = (53 * hash) + getIsTeam();
    hash = (37 * hash) + WINTEAMID_FIELD_NUMBER;
    hash = (53 * hash) + getWinTeamId();
    hash = (37 * hash) + TEAM0ID_FIELD_NUMBER;
    hash = (53 * hash) + getTeam0Id();
    hash = (37 * hash) + TEAM1ID_FIELD_NUMBER;
    hash = (53 * hash) + getTeam1Id();
    hash = (37 * hash) + TEAM0SCORE_FIELD_NUMBER;
    hash = (53 * hash) + getTeam0Score();
    hash = (37 * hash) + TEAM1SCORE_FIELD_NUMBER;
    hash = (53 * hash) + getTeam1Score();
    hash = (37 * hash) + DAMAGEPERCENT_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDamagePercent());
    hash = (37 * hash) + TOTALRES_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalRes());
    hash = (37 * hash) + MVPPLAYERID_FIELD_NUMBER;
    hash = (53 * hash) + getMvpPlayerId();
    hash = (37 * hash) + MVPSYSCHARACTERID_FIELD_NUMBER;
    hash = (53 * hash) + getMvpSysCharacterId();
    hash = (37 * hash) + FIRSTKILL_FIELD_NUMBER;
    hash = (53 * hash) + getFirstKill();
    hash = (37 * hash) + FIRSTDEAD_FIELD_NUMBER;
    hash = (53 * hash) + getFirstDead();
    hash = (37 * hash) + ONLINEACTIVITYOFFSET_FIELD_NUMBER;
    hash = (53 * hash) + getOnlineActivityOffset();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.pearl.fcw.proto.model.ProtoStageClear parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClear parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.pearl.fcw.proto.model.ProtoStageClear prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *过关结算信息
   * </pre>
   *
   * Protobuf type {@code fcw.proto.model.ProtoStageClear}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fcw.proto.model.ProtoStageClear)
      com.pearl.fcw.proto.model.ProtoStageClearOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClear_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClear_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pearl.fcw.proto.model.ProtoStageClear.class, com.pearl.fcw.proto.model.ProtoStageClear.Builder.class);
    }

    // Construct using com.pearl.fcw.proto.model.ProtoStageClear.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      serverId_ = 0;

      channelId_ = 0;

      isClear_ = 0;

      roomId_ = 0;

      hostPlayerId_ = 0;

      startTime_ = 0;

      endTime_ = 0;

      sysLevelId_ = 0;

      isTeam_ = 0;

      winTeamId_ = 0;

      team0Id_ = 0;

      team1Id_ = 0;

      team0Score_ = 0;

      team1Score_ = 0;

      damagePercent_ = 0F;

      totalRes_ = 0F;

      mvpPlayerId_ = 0;

      mvpSysCharacterId_ = 0;

      firstKill_ = 0;

      firstDead_ = 0;

      onlineActivityOffset_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClear_descriptor;
    }

    public com.pearl.fcw.proto.model.ProtoStageClear getDefaultInstanceForType() {
      return com.pearl.fcw.proto.model.ProtoStageClear.getDefaultInstance();
    }

    public com.pearl.fcw.proto.model.ProtoStageClear build() {
      com.pearl.fcw.proto.model.ProtoStageClear result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.pearl.fcw.proto.model.ProtoStageClear buildPartial() {
      com.pearl.fcw.proto.model.ProtoStageClear result = new com.pearl.fcw.proto.model.ProtoStageClear(this);
      result.serverId_ = serverId_;
      result.channelId_ = channelId_;
      result.isClear_ = isClear_;
      result.roomId_ = roomId_;
      result.hostPlayerId_ = hostPlayerId_;
      result.startTime_ = startTime_;
      result.endTime_ = endTime_;
      result.sysLevelId_ = sysLevelId_;
      result.isTeam_ = isTeam_;
      result.winTeamId_ = winTeamId_;
      result.team0Id_ = team0Id_;
      result.team1Id_ = team1Id_;
      result.team0Score_ = team0Score_;
      result.team1Score_ = team1Score_;
      result.damagePercent_ = damagePercent_;
      result.totalRes_ = totalRes_;
      result.mvpPlayerId_ = mvpPlayerId_;
      result.mvpSysCharacterId_ = mvpSysCharacterId_;
      result.firstKill_ = firstKill_;
      result.firstDead_ = firstDead_;
      result.onlineActivityOffset_ = onlineActivityOffset_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.pearl.fcw.proto.model.ProtoStageClear) {
        return mergeFrom((com.pearl.fcw.proto.model.ProtoStageClear)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.pearl.fcw.proto.model.ProtoStageClear other) {
      if (other == com.pearl.fcw.proto.model.ProtoStageClear.getDefaultInstance()) return this;
      if (other.getServerId() != 0) {
        setServerId(other.getServerId());
      }
      if (other.getChannelId() != 0) {
        setChannelId(other.getChannelId());
      }
      if (other.getIsClear() != 0) {
        setIsClear(other.getIsClear());
      }
      if (other.getRoomId() != 0) {
        setRoomId(other.getRoomId());
      }
      if (other.getHostPlayerId() != 0) {
        setHostPlayerId(other.getHostPlayerId());
      }
      if (other.getStartTime() != 0) {
        setStartTime(other.getStartTime());
      }
      if (other.getEndTime() != 0) {
        setEndTime(other.getEndTime());
      }
      if (other.getSysLevelId() != 0) {
        setSysLevelId(other.getSysLevelId());
      }
      if (other.getIsTeam() != 0) {
        setIsTeam(other.getIsTeam());
      }
      if (other.getWinTeamId() != 0) {
        setWinTeamId(other.getWinTeamId());
      }
      if (other.getTeam0Id() != 0) {
        setTeam0Id(other.getTeam0Id());
      }
      if (other.getTeam1Id() != 0) {
        setTeam1Id(other.getTeam1Id());
      }
      if (other.getTeam0Score() != 0) {
        setTeam0Score(other.getTeam0Score());
      }
      if (other.getTeam1Score() != 0) {
        setTeam1Score(other.getTeam1Score());
      }
      if (other.getDamagePercent() != 0F) {
        setDamagePercent(other.getDamagePercent());
      }
      if (other.getTotalRes() != 0F) {
        setTotalRes(other.getTotalRes());
      }
      if (other.getMvpPlayerId() != 0) {
        setMvpPlayerId(other.getMvpPlayerId());
      }
      if (other.getMvpSysCharacterId() != 0) {
        setMvpSysCharacterId(other.getMvpSysCharacterId());
      }
      if (other.getFirstKill() != 0) {
        setFirstKill(other.getFirstKill());
      }
      if (other.getFirstDead() != 0) {
        setFirstDead(other.getFirstDead());
      }
      if (other.getOnlineActivityOffset() != 0) {
        setOnlineActivityOffset(other.getOnlineActivityOffset());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.pearl.fcw.proto.model.ProtoStageClear parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.pearl.fcw.proto.model.ProtoStageClear) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int serverId_ ;
    /**
     * <code>optional sint32 serverId = 1;</code>
     */
    public int getServerId() {
      return serverId_;
    }
    /**
     * <code>optional sint32 serverId = 1;</code>
     */
    public Builder setServerId(int value) {
      
      serverId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 serverId = 1;</code>
     */
    public Builder clearServerId() {
      
      serverId_ = 0;
      onChanged();
      return this;
    }

    private int channelId_ ;
    /**
     * <code>optional sint32 channelId = 2;</code>
     */
    public int getChannelId() {
      return channelId_;
    }
    /**
     * <code>optional sint32 channelId = 2;</code>
     */
    public Builder setChannelId(int value) {
      
      channelId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 channelId = 2;</code>
     */
    public Builder clearChannelId() {
      
      channelId_ = 0;
      onChanged();
      return this;
    }

    private int isClear_ ;
    /**
     * <pre>
     *是否正常结束
     * </pre>
     *
     * <code>optional int32 isClear = 3;</code>
     */
    public int getIsClear() {
      return isClear_;
    }
    /**
     * <pre>
     *是否正常结束
     * </pre>
     *
     * <code>optional int32 isClear = 3;</code>
     */
    public Builder setIsClear(int value) {
      
      isClear_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否正常结束
     * </pre>
     *
     * <code>optional int32 isClear = 3;</code>
     */
    public Builder clearIsClear() {
      
      isClear_ = 0;
      onChanged();
      return this;
    }

    private int roomId_ ;
    /**
     * <pre>
     *房间
     * </pre>
     *
     * <code>optional sint32 roomId = 10;</code>
     */
    public int getRoomId() {
      return roomId_;
    }
    /**
     * <pre>
     *房间
     * </pre>
     *
     * <code>optional sint32 roomId = 10;</code>
     */
    public Builder setRoomId(int value) {
      
      roomId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *房间
     * </pre>
     *
     * <code>optional sint32 roomId = 10;</code>
     */
    public Builder clearRoomId() {
      
      roomId_ = 0;
      onChanged();
      return this;
    }

    private int hostPlayerId_ ;
    /**
     * <pre>
     *房主玩家ID?
     * </pre>
     *
     * <code>optional sint32 hostPlayerId = 11;</code>
     */
    public int getHostPlayerId() {
      return hostPlayerId_;
    }
    /**
     * <pre>
     *房主玩家ID?
     * </pre>
     *
     * <code>optional sint32 hostPlayerId = 11;</code>
     */
    public Builder setHostPlayerId(int value) {
      
      hostPlayerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *房主玩家ID?
     * </pre>
     *
     * <code>optional sint32 hostPlayerId = 11;</code>
     */
    public Builder clearHostPlayerId() {
      
      hostPlayerId_ = 0;
      onChanged();
      return this;
    }

    private int startTime_ ;
    /**
     * <pre>
     *fcw.proto.enums.type.EGameType gameType = 20;//地图类型,其实不需要
     * </pre>
     *
     * <code>optional sint32 startTime = 30;</code>
     */
    public int getStartTime() {
      return startTime_;
    }
    /**
     * <pre>
     *fcw.proto.enums.type.EGameType gameType = 20;//地图类型,其实不需要
     * </pre>
     *
     * <code>optional sint32 startTime = 30;</code>
     */
    public Builder setStartTime(int value) {
      
      startTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *fcw.proto.enums.type.EGameType gameType = 20;//地图类型,其实不需要
     * </pre>
     *
     * <code>optional sint32 startTime = 30;</code>
     */
    public Builder clearStartTime() {
      
      startTime_ = 0;
      onChanged();
      return this;
    }

    private int endTime_ ;
    /**
     * <pre>
     *结束时间，秒
     * </pre>
     *
     * <code>optional sint32 endTime = 31;</code>
     */
    public int getEndTime() {
      return endTime_;
    }
    /**
     * <pre>
     *结束时间，秒
     * </pre>
     *
     * <code>optional sint32 endTime = 31;</code>
     */
    public Builder setEndTime(int value) {
      
      endTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *结束时间，秒
     * </pre>
     *
     * <code>optional sint32 endTime = 31;</code>
     */
    public Builder clearEndTime() {
      
      endTime_ = 0;
      onChanged();
      return this;
    }

    private int sysLevelId_ ;
    /**
     * <pre>
     *地图ID
     * </pre>
     *
     * <code>optional sint32 sysLevelId = 40;</code>
     */
    public int getSysLevelId() {
      return sysLevelId_;
    }
    /**
     * <pre>
     *地图ID
     * </pre>
     *
     * <code>optional sint32 sysLevelId = 40;</code>
     */
    public Builder setSysLevelId(int value) {
      
      sysLevelId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *地图ID
     * </pre>
     *
     * <code>optional sint32 sysLevelId = 40;</code>
     */
    public Builder clearSysLevelId() {
      
      sysLevelId_ = 0;
      onChanged();
      return this;
    }

    private int isTeam_ ;
    /**
     * <pre>
     *是否战队战。如果不是，teamId会分别为0和1
     * </pre>
     *
     * <code>optional sint32 isTeam = 41;</code>
     */
    public int getIsTeam() {
      return isTeam_;
    }
    /**
     * <pre>
     *是否战队战。如果不是，teamId会分别为0和1
     * </pre>
     *
     * <code>optional sint32 isTeam = 41;</code>
     */
    public Builder setIsTeam(int value) {
      
      isTeam_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否战队战。如果不是，teamId会分别为0和1
     * </pre>
     *
     * <code>optional sint32 isTeam = 41;</code>
     */
    public Builder clearIsTeam() {
      
      isTeam_ = 0;
      onChanged();
      return this;
    }

    private int winTeamId_ ;
    /**
     * <pre>
     *胜利方，0和1。端游有第三方2？
     * </pre>
     *
     * <code>optional sint32 winTeamId = 50;</code>
     */
    public int getWinTeamId() {
      return winTeamId_;
    }
    /**
     * <pre>
     *胜利方，0和1。端游有第三方2？
     * </pre>
     *
     * <code>optional sint32 winTeamId = 50;</code>
     */
    public Builder setWinTeamId(int value) {
      
      winTeamId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *胜利方，0和1。端游有第三方2？
     * </pre>
     *
     * <code>optional sint32 winTeamId = 50;</code>
     */
    public Builder clearWinTeamId() {
      
      winTeamId_ = 0;
      onChanged();
      return this;
    }

    private int team0Id_ ;
    /**
     * <code>optional sint32 team0Id = 51;</code>
     */
    public int getTeam0Id() {
      return team0Id_;
    }
    /**
     * <code>optional sint32 team0Id = 51;</code>
     */
    public Builder setTeam0Id(int value) {
      
      team0Id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 team0Id = 51;</code>
     */
    public Builder clearTeam0Id() {
      
      team0Id_ = 0;
      onChanged();
      return this;
    }

    private int team1Id_ ;
    /**
     * <code>optional sint32 team1Id = 52;</code>
     */
    public int getTeam1Id() {
      return team1Id_;
    }
    /**
     * <code>optional sint32 team1Id = 52;</code>
     */
    public Builder setTeam1Id(int value) {
      
      team1Id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 team1Id = 52;</code>
     */
    public Builder clearTeam1Id() {
      
      team1Id_ = 0;
      onChanged();
      return this;
    }

    private int team0Score_ ;
    /**
     * <code>optional int32 team0Score = 80;</code>
     */
    public int getTeam0Score() {
      return team0Score_;
    }
    /**
     * <code>optional int32 team0Score = 80;</code>
     */
    public Builder setTeam0Score(int value) {
      
      team0Score_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 team0Score = 80;</code>
     */
    public Builder clearTeam0Score() {
      
      team0Score_ = 0;
      onChanged();
      return this;
    }

    private int team1Score_ ;
    /**
     * <code>optional int32 team1Score = 81;</code>
     */
    public int getTeam1Score() {
      return team1Score_;
    }
    /**
     * <code>optional int32 team1Score = 81;</code>
     */
    public Builder setTeam1Score(int value) {
      
      team1Score_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 team1Score = 81;</code>
     */
    public Builder clearTeam1Score() {
      
      team1Score_ = 0;
      onChanged();
      return this;
    }

    private float damagePercent_ ;
    /**
     * <pre>
     * 资源争夺战中防守方 大本营损坏度
     * </pre>
     *
     * <code>optional float damagePercent = 90;</code>
     */
    public float getDamagePercent() {
      return damagePercent_;
    }
    /**
     * <pre>
     * 资源争夺战中防守方 大本营损坏度
     * </pre>
     *
     * <code>optional float damagePercent = 90;</code>
     */
    public Builder setDamagePercent(float value) {
      
      damagePercent_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 资源争夺战中防守方 大本营损坏度
     * </pre>
     *
     * <code>optional float damagePercent = 90;</code>
     */
    public Builder clearDamagePercent() {
      
      damagePercent_ = 0F;
      onChanged();
      return this;
    }

    private float totalRes_ ;
    /**
     * <pre>
     *资源争夺战中 本场比赛能抢夺的最大资源数
     * </pre>
     *
     * <code>optional float totalRes = 100;</code>
     */
    public float getTotalRes() {
      return totalRes_;
    }
    /**
     * <pre>
     *资源争夺战中 本场比赛能抢夺的最大资源数
     * </pre>
     *
     * <code>optional float totalRes = 100;</code>
     */
    public Builder setTotalRes(float value) {
      
      totalRes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *资源争夺战中 本场比赛能抢夺的最大资源数
     * </pre>
     *
     * <code>optional float totalRes = 100;</code>
     */
    public Builder clearTotalRes() {
      
      totalRes_ = 0F;
      onChanged();
      return this;
    }

    private int mvpPlayerId_ ;
    /**
     * <code>optional int32 mvpPlayerId = 110;</code>
     */
    public int getMvpPlayerId() {
      return mvpPlayerId_;
    }
    /**
     * <code>optional int32 mvpPlayerId = 110;</code>
     */
    public Builder setMvpPlayerId(int value) {
      
      mvpPlayerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 mvpPlayerId = 110;</code>
     */
    public Builder clearMvpPlayerId() {
      
      mvpPlayerId_ = 0;
      onChanged();
      return this;
    }

    private int mvpSysCharacterId_ ;
    /**
     * <code>optional int32 mvpSysCharacterId = 111;</code>
     */
    public int getMvpSysCharacterId() {
      return mvpSysCharacterId_;
    }
    /**
     * <code>optional int32 mvpSysCharacterId = 111;</code>
     */
    public Builder setMvpSysCharacterId(int value) {
      
      mvpSysCharacterId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 mvpSysCharacterId = 111;</code>
     */
    public Builder clearMvpSysCharacterId() {
      
      mvpSysCharacterId_ = 0;
      onChanged();
      return this;
    }

    private int firstKill_ ;
    /**
     * <pre>
     *最多击杀？
     * </pre>
     *
     * <code>optional int32 firstKill = 120;</code>
     */
    public int getFirstKill() {
      return firstKill_;
    }
    /**
     * <pre>
     *最多击杀？
     * </pre>
     *
     * <code>optional int32 firstKill = 120;</code>
     */
    public Builder setFirstKill(int value) {
      
      firstKill_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *最多击杀？
     * </pre>
     *
     * <code>optional int32 firstKill = 120;</code>
     */
    public Builder clearFirstKill() {
      
      firstKill_ = 0;
      onChanged();
      return this;
    }

    private int firstDead_ ;
    /**
     * <pre>
     *最多被击杀？
     * </pre>
     *
     * <code>optional int32 firstDead = 121;</code>
     */
    public int getFirstDead() {
      return firstDead_;
    }
    /**
     * <pre>
     *最多被击杀？
     * </pre>
     *
     * <code>optional int32 firstDead = 121;</code>
     */
    public Builder setFirstDead(int value) {
      
      firstDead_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *最多被击杀？
     * </pre>
     *
     * <code>optional int32 firstDead = 121;</code>
     */
    public Builder clearFirstDead() {
      
      firstDead_ = 0;
      onChanged();
      return this;
    }

    private int onlineActivityOffset_ ;
    /**
     * <pre>
     *?????
     * </pre>
     *
     * <code>optional int32 onlineActivityOffset = 130;</code>
     */
    public int getOnlineActivityOffset() {
      return onlineActivityOffset_;
    }
    /**
     * <pre>
     *?????
     * </pre>
     *
     * <code>optional int32 onlineActivityOffset = 130;</code>
     */
    public Builder setOnlineActivityOffset(int value) {
      
      onlineActivityOffset_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *?????
     * </pre>
     *
     * <code>optional int32 onlineActivityOffset = 130;</code>
     */
    public Builder clearOnlineActivityOffset() {
      
      onlineActivityOffset_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:fcw.proto.model.ProtoStageClear)
  }

  // @@protoc_insertion_point(class_scope:fcw.proto.model.ProtoStageClear)
  private static final com.pearl.fcw.proto.model.ProtoStageClear DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.pearl.fcw.proto.model.ProtoStageClear();
  }

  public static com.pearl.fcw.proto.model.ProtoStageClear getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProtoStageClear>
      PARSER = new com.google.protobuf.AbstractParser<ProtoStageClear>() {
    public ProtoStageClear parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtoStageClear(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ProtoStageClear> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProtoStageClear> getParserForType() {
    return PARSER;
  }

  public com.pearl.fcw.proto.model.ProtoStageClear getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

