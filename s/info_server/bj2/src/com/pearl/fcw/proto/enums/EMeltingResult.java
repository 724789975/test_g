// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums/status.proto

package com.pearl.fcw.proto.enums;

/**
 * Protobuf enum {@code fcw.proto.enums.status.EMeltingResult}
 */
public enum EMeltingResult
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *成功
   * </pre>
   *
   * <code>MELTING_SUCCESS = 0;</code>
   */
  MELTING_SUCCESS(0),
  /**
   * <pre>
   *熔炼部件数量不足
   * </pre>
   *
   * <code>MELTING_PART_NOT_ENOUGH = 1;</code>
   */
  MELTING_PART_NOT_ENOUGH(1),
  /**
   * <pre>
   *熔炼部件不存在
   * </pre>
   *
   * <code>MELTING_PART_NOT_EXIST = 2;</code>
   */
  MELTING_PART_NOT_EXIST(2),
  /**
   * <pre>
   *熔炼对象不存在
   * </pre>
   *
   * <code>MELTING_TARGET_NOT_EXIST = 3;</code>
   */
  MELTING_TARGET_NOT_EXIST(3),
  /**
   * <pre>
   *熔炼对象数量不足
   * </pre>
   *
   * <code>MELTING_TARGET_NOT_ENOUGH = 4;</code>
   */
  MELTING_TARGET_NOT_ENOUGH(4),
  /**
   * <pre>
   *熔炼对象错误
   * </pre>
   *
   * <code>MELTING_TARGET_ERROR = 5;</code>
   */
  MELTING_TARGET_ERROR(5),
  /**
   * <pre>
   *熔炼对象数量超出熔能格数
   * </pre>
   *
   * <code>MELTING_NUM_NOT_ENOUGH = 6;</code>
   */
  MELTING_NUM_NOT_ENOUGH(6),
  /**
   * <pre>
   *熔炼部件错误
   * </pre>
   *
   * <code>MELTING_PART_ERROR = 7;</code>
   */
  MELTING_PART_ERROR(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   *成功
   * </pre>
   *
   * <code>MELTING_SUCCESS = 0;</code>
   */
  public static final int MELTING_SUCCESS_VALUE = 0;
  /**
   * <pre>
   *熔炼部件数量不足
   * </pre>
   *
   * <code>MELTING_PART_NOT_ENOUGH = 1;</code>
   */
  public static final int MELTING_PART_NOT_ENOUGH_VALUE = 1;
  /**
   * <pre>
   *熔炼部件不存在
   * </pre>
   *
   * <code>MELTING_PART_NOT_EXIST = 2;</code>
   */
  public static final int MELTING_PART_NOT_EXIST_VALUE = 2;
  /**
   * <pre>
   *熔炼对象不存在
   * </pre>
   *
   * <code>MELTING_TARGET_NOT_EXIST = 3;</code>
   */
  public static final int MELTING_TARGET_NOT_EXIST_VALUE = 3;
  /**
   * <pre>
   *熔炼对象数量不足
   * </pre>
   *
   * <code>MELTING_TARGET_NOT_ENOUGH = 4;</code>
   */
  public static final int MELTING_TARGET_NOT_ENOUGH_VALUE = 4;
  /**
   * <pre>
   *熔炼对象错误
   * </pre>
   *
   * <code>MELTING_TARGET_ERROR = 5;</code>
   */
  public static final int MELTING_TARGET_ERROR_VALUE = 5;
  /**
   * <pre>
   *熔炼对象数量超出熔能格数
   * </pre>
   *
   * <code>MELTING_NUM_NOT_ENOUGH = 6;</code>
   */
  public static final int MELTING_NUM_NOT_ENOUGH_VALUE = 6;
  /**
   * <pre>
   *熔炼部件错误
   * </pre>
   *
   * <code>MELTING_PART_ERROR = 7;</code>
   */
  public static final int MELTING_PART_ERROR_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EMeltingResult valueOf(int value) {
    return forNumber(value);
  }

  public static EMeltingResult forNumber(int value) {
    switch (value) {
      case 0: return MELTING_SUCCESS;
      case 1: return MELTING_PART_NOT_ENOUGH;
      case 2: return MELTING_PART_NOT_EXIST;
      case 3: return MELTING_TARGET_NOT_EXIST;
      case 4: return MELTING_TARGET_NOT_ENOUGH;
      case 5: return MELTING_TARGET_ERROR;
      case 6: return MELTING_NUM_NOT_ENOUGH;
      case 7: return MELTING_PART_ERROR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EMeltingResult>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EMeltingResult> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EMeltingResult>() {
          public EMeltingResult findValueByNumber(int number) {
            return EMeltingResult.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.pearl.fcw.proto.enums.ApiProto.getDescriptor()
        .getEnumTypes().get(7);
  }

  private static final EMeltingResult[] VALUES = values();

  public static EMeltingResult valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EMeltingResult(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:fcw.proto.enums.status.EMeltingResult)
}

