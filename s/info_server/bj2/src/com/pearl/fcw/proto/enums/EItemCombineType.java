// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums/type.proto

package com.pearl.fcw.proto.enums;

/**
 * <pre>
 *道具合成的种类(对应客户端UI)
 * </pre>
 *
 * Protobuf enum {@code fcw.proto.enums.type.EItemCombineType}
 */
public enum EItemCombineType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>COMBINE_NONE = 0;</code>
   */
  COMBINE_NONE(0),
  /**
   * <pre>
   *强化
   * </pre>
   *
   * <code>ENHANCE = 1;</code>
   */
  ENHANCE(1),
  /**
   * <pre>
   *改装（开槽镶嵌）
   * </pre>
   *
   * <code>SLOT = 2;</code>
   */
  SLOT(2),
  /**
   * <pre>
   *转换
   * </pre>
   *
   * <code>TRANSFORM = 3;</code>
   */
  TRANSFORM(3),
  /**
   * <pre>
   *熔炼
   * </pre>
   *
   * <code>MELTING = 4;</code>
   */
  MELTING(4),
  /**
   * <pre>
   *升星
   * </pre>
   *
   * <code>GST = 5;</code>
   */
  GST(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>COMBINE_NONE = 0;</code>
   */
  public static final int COMBINE_NONE_VALUE = 0;
  /**
   * <pre>
   *强化
   * </pre>
   *
   * <code>ENHANCE = 1;</code>
   */
  public static final int ENHANCE_VALUE = 1;
  /**
   * <pre>
   *改装（开槽镶嵌）
   * </pre>
   *
   * <code>SLOT = 2;</code>
   */
  public static final int SLOT_VALUE = 2;
  /**
   * <pre>
   *转换
   * </pre>
   *
   * <code>TRANSFORM = 3;</code>
   */
  public static final int TRANSFORM_VALUE = 3;
  /**
   * <pre>
   *熔炼
   * </pre>
   *
   * <code>MELTING = 4;</code>
   */
  public static final int MELTING_VALUE = 4;
  /**
   * <pre>
   *升星
   * </pre>
   *
   * <code>GST = 5;</code>
   */
  public static final int GST_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EItemCombineType valueOf(int value) {
    return forNumber(value);
  }

  public static EItemCombineType forNumber(int value) {
    switch (value) {
      case 0: return COMBINE_NONE;
      case 1: return ENHANCE;
      case 2: return SLOT;
      case 3: return TRANSFORM;
      case 4: return MELTING;
      case 5: return GST;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EItemCombineType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EItemCombineType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EItemCombineType>() {
          public EItemCombineType findValueByNumber(int number) {
            return EItemCombineType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.pearl.fcw.proto.enums.ApiProto.getDescriptor()
        .getEnumTypes().get(21);
  }

  private static final EItemCombineType[] VALUES = values();

  public static EItemCombineType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EItemCombineType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:fcw.proto.enums.type.EItemCombineType)
}

