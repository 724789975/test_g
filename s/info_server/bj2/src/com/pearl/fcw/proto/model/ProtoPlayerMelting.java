// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

package com.pearl.fcw.proto.model;

/**
 * <pre>
 *玩家熔炼
 * </pre>
 *
 * Protobuf type {@code fcw.proto.model.ProtoPlayerMelting}
 */
public  final class ProtoPlayerMelting extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:fcw.proto.model.ProtoPlayerMelting)
    ProtoPlayerMeltingOrBuilder {
  // Use ProtoPlayerMelting.newBuilder() to construct.
  private ProtoPlayerMelting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ProtoPlayerMelting() {
    meltingLevel_ = 0;
    slotNum_ = 0;
    exp_ = 0;
    totalExp_ = 0;
    meltingEnergy_ = 0;
    remaind_ = 0L;
    recycleRatio_ = 0;
    rate_ = 0;
    price_ = 0;
    residual_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ProtoPlayerMelting(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 16: {

            meltingLevel_ = input.readInt32();
            break;
          }
          case 24: {

            slotNum_ = input.readInt32();
            break;
          }
          case 32: {

            exp_ = input.readInt32();
            break;
          }
          case 40: {

            totalExp_ = input.readInt32();
            break;
          }
          case 48: {

            meltingEnergy_ = input.readInt32();
            break;
          }
          case 56: {

            remaind_ = input.readInt64();
            break;
          }
          case 80: {

            recycleRatio_ = input.readInt32();
            break;
          }
          case 88: {

            rate_ = input.readInt32();
            break;
          }
          case 96: {

            price_ = input.readInt32();
            break;
          }
          case 104: {

            residual_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerMelting_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerMelting_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.pearl.fcw.proto.model.ProtoPlayerMelting.class, com.pearl.fcw.proto.model.ProtoPlayerMelting.Builder.class);
  }

  public static final int MELTINGLEVEL_FIELD_NUMBER = 2;
  private int meltingLevel_;
  /**
   * <code>optional int32 meltingLevel = 2;</code>
   */
  public int getMeltingLevel() {
    return meltingLevel_;
  }

  public static final int SLOTNUM_FIELD_NUMBER = 3;
  private int slotNum_;
  /**
   * <code>optional int32 slotNum = 3;</code>
   */
  public int getSlotNum() {
    return slotNum_;
  }

  public static final int EXP_FIELD_NUMBER = 4;
  private int exp_;
  /**
   * <pre>
   *玩家当前熔炼经验
   * </pre>
   *
   * <code>optional int32 exp = 4;</code>
   */
  public int getExp() {
    return exp_;
  }

  public static final int TOTALEXP_FIELD_NUMBER = 5;
  private int totalExp_;
  /**
   * <pre>
   *当前级和下一级的经验差值
   * </pre>
   *
   * <code>optional int32 totalExp = 5;</code>
   */
  public int getTotalExp() {
    return totalExp_;
  }

  public static final int MELTINGENERGY_FIELD_NUMBER = 6;
  private int meltingEnergy_;
  /**
   * <pre>
   *当前熔能格数
   * </pre>
   *
   * <code>optional int32 meltingEnergy = 6;</code>
   */
  public int getMeltingEnergy() {
    return meltingEnergy_;
  }

  public static final int REMAIND_FIELD_NUMBER = 7;
  private long remaind_;
  /**
   * <pre>
   *秒
   * </pre>
   *
   * <code>optional int64 remaind = 7;</code>
   */
  public long getRemaind() {
    return remaind_;
  }

  public static final int RECYCLERATIO_FIELD_NUMBER = 10;
  private int recycleRatio_;
  /**
   * <code>optional int32 recycleRatio = 10;</code>
   */
  public int getRecycleRatio() {
    return recycleRatio_;
  }

  public static final int RATE_FIELD_NUMBER = 11;
  private int rate_;
  /**
   * <code>optional int32 rate = 11;</code>
   */
  public int getRate() {
    return rate_;
  }

  public static final int PRICE_FIELD_NUMBER = 12;
  private int price_;
  /**
   * <code>optional int32 price = 12;</code>
   */
  public int getPrice() {
    return price_;
  }

  public static final int RESIDUAL_FIELD_NUMBER = 13;
  private int residual_;
  /**
   * <code>optional int32 residual = 13;</code>
   */
  public int getResidual() {
    return residual_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (meltingLevel_ != 0) {
      output.writeInt32(2, meltingLevel_);
    }
    if (slotNum_ != 0) {
      output.writeInt32(3, slotNum_);
    }
    if (exp_ != 0) {
      output.writeInt32(4, exp_);
    }
    if (totalExp_ != 0) {
      output.writeInt32(5, totalExp_);
    }
    if (meltingEnergy_ != 0) {
      output.writeInt32(6, meltingEnergy_);
    }
    if (remaind_ != 0L) {
      output.writeInt64(7, remaind_);
    }
    if (recycleRatio_ != 0) {
      output.writeInt32(10, recycleRatio_);
    }
    if (rate_ != 0) {
      output.writeInt32(11, rate_);
    }
    if (price_ != 0) {
      output.writeInt32(12, price_);
    }
    if (residual_ != 0) {
      output.writeInt32(13, residual_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (meltingLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, meltingLevel_);
    }
    if (slotNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, slotNum_);
    }
    if (exp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, exp_);
    }
    if (totalExp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, totalExp_);
    }
    if (meltingEnergy_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, meltingEnergy_);
    }
    if (remaind_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, remaind_);
    }
    if (recycleRatio_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, recycleRatio_);
    }
    if (rate_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, rate_);
    }
    if (price_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, price_);
    }
    if (residual_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, residual_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.pearl.fcw.proto.model.ProtoPlayerMelting)) {
      return super.equals(obj);
    }
    com.pearl.fcw.proto.model.ProtoPlayerMelting other = (com.pearl.fcw.proto.model.ProtoPlayerMelting) obj;

    boolean result = true;
    result = result && (getMeltingLevel()
        == other.getMeltingLevel());
    result = result && (getSlotNum()
        == other.getSlotNum());
    result = result && (getExp()
        == other.getExp());
    result = result && (getTotalExp()
        == other.getTotalExp());
    result = result && (getMeltingEnergy()
        == other.getMeltingEnergy());
    result = result && (getRemaind()
        == other.getRemaind());
    result = result && (getRecycleRatio()
        == other.getRecycleRatio());
    result = result && (getRate()
        == other.getRate());
    result = result && (getPrice()
        == other.getPrice());
    result = result && (getResidual()
        == other.getResidual());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + MELTINGLEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMeltingLevel();
    hash = (37 * hash) + SLOTNUM_FIELD_NUMBER;
    hash = (53 * hash) + getSlotNum();
    hash = (37 * hash) + EXP_FIELD_NUMBER;
    hash = (53 * hash) + getExp();
    hash = (37 * hash) + TOTALEXP_FIELD_NUMBER;
    hash = (53 * hash) + getTotalExp();
    hash = (37 * hash) + MELTINGENERGY_FIELD_NUMBER;
    hash = (53 * hash) + getMeltingEnergy();
    hash = (37 * hash) + REMAIND_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRemaind());
    hash = (37 * hash) + RECYCLERATIO_FIELD_NUMBER;
    hash = (53 * hash) + getRecycleRatio();
    hash = (37 * hash) + RATE_FIELD_NUMBER;
    hash = (53 * hash) + getRate();
    hash = (37 * hash) + PRICE_FIELD_NUMBER;
    hash = (53 * hash) + getPrice();
    hash = (37 * hash) + RESIDUAL_FIELD_NUMBER;
    hash = (53 * hash) + getResidual();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerMelting parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.pearl.fcw.proto.model.ProtoPlayerMelting prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *玩家熔炼
   * </pre>
   *
   * Protobuf type {@code fcw.proto.model.ProtoPlayerMelting}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fcw.proto.model.ProtoPlayerMelting)
      com.pearl.fcw.proto.model.ProtoPlayerMeltingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerMelting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerMelting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pearl.fcw.proto.model.ProtoPlayerMelting.class, com.pearl.fcw.proto.model.ProtoPlayerMelting.Builder.class);
    }

    // Construct using com.pearl.fcw.proto.model.ProtoPlayerMelting.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      meltingLevel_ = 0;

      slotNum_ = 0;

      exp_ = 0;

      totalExp_ = 0;

      meltingEnergy_ = 0;

      remaind_ = 0L;

      recycleRatio_ = 0;

      rate_ = 0;

      price_ = 0;

      residual_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerMelting_descriptor;
    }

    public com.pearl.fcw.proto.model.ProtoPlayerMelting getDefaultInstanceForType() {
      return com.pearl.fcw.proto.model.ProtoPlayerMelting.getDefaultInstance();
    }

    public com.pearl.fcw.proto.model.ProtoPlayerMelting build() {
      com.pearl.fcw.proto.model.ProtoPlayerMelting result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.pearl.fcw.proto.model.ProtoPlayerMelting buildPartial() {
      com.pearl.fcw.proto.model.ProtoPlayerMelting result = new com.pearl.fcw.proto.model.ProtoPlayerMelting(this);
      result.meltingLevel_ = meltingLevel_;
      result.slotNum_ = slotNum_;
      result.exp_ = exp_;
      result.totalExp_ = totalExp_;
      result.meltingEnergy_ = meltingEnergy_;
      result.remaind_ = remaind_;
      result.recycleRatio_ = recycleRatio_;
      result.rate_ = rate_;
      result.price_ = price_;
      result.residual_ = residual_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.pearl.fcw.proto.model.ProtoPlayerMelting) {
        return mergeFrom((com.pearl.fcw.proto.model.ProtoPlayerMelting)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.pearl.fcw.proto.model.ProtoPlayerMelting other) {
      if (other == com.pearl.fcw.proto.model.ProtoPlayerMelting.getDefaultInstance()) return this;
      if (other.getMeltingLevel() != 0) {
        setMeltingLevel(other.getMeltingLevel());
      }
      if (other.getSlotNum() != 0) {
        setSlotNum(other.getSlotNum());
      }
      if (other.getExp() != 0) {
        setExp(other.getExp());
      }
      if (other.getTotalExp() != 0) {
        setTotalExp(other.getTotalExp());
      }
      if (other.getMeltingEnergy() != 0) {
        setMeltingEnergy(other.getMeltingEnergy());
      }
      if (other.getRemaind() != 0L) {
        setRemaind(other.getRemaind());
      }
      if (other.getRecycleRatio() != 0) {
        setRecycleRatio(other.getRecycleRatio());
      }
      if (other.getRate() != 0) {
        setRate(other.getRate());
      }
      if (other.getPrice() != 0) {
        setPrice(other.getPrice());
      }
      if (other.getResidual() != 0) {
        setResidual(other.getResidual());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.pearl.fcw.proto.model.ProtoPlayerMelting parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.pearl.fcw.proto.model.ProtoPlayerMelting) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int meltingLevel_ ;
    /**
     * <code>optional int32 meltingLevel = 2;</code>
     */
    public int getMeltingLevel() {
      return meltingLevel_;
    }
    /**
     * <code>optional int32 meltingLevel = 2;</code>
     */
    public Builder setMeltingLevel(int value) {
      
      meltingLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 meltingLevel = 2;</code>
     */
    public Builder clearMeltingLevel() {
      
      meltingLevel_ = 0;
      onChanged();
      return this;
    }

    private int slotNum_ ;
    /**
     * <code>optional int32 slotNum = 3;</code>
     */
    public int getSlotNum() {
      return slotNum_;
    }
    /**
     * <code>optional int32 slotNum = 3;</code>
     */
    public Builder setSlotNum(int value) {
      
      slotNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 slotNum = 3;</code>
     */
    public Builder clearSlotNum() {
      
      slotNum_ = 0;
      onChanged();
      return this;
    }

    private int exp_ ;
    /**
     * <pre>
     *玩家当前熔炼经验
     * </pre>
     *
     * <code>optional int32 exp = 4;</code>
     */
    public int getExp() {
      return exp_;
    }
    /**
     * <pre>
     *玩家当前熔炼经验
     * </pre>
     *
     * <code>optional int32 exp = 4;</code>
     */
    public Builder setExp(int value) {
      
      exp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家当前熔炼经验
     * </pre>
     *
     * <code>optional int32 exp = 4;</code>
     */
    public Builder clearExp() {
      
      exp_ = 0;
      onChanged();
      return this;
    }

    private int totalExp_ ;
    /**
     * <pre>
     *当前级和下一级的经验差值
     * </pre>
     *
     * <code>optional int32 totalExp = 5;</code>
     */
    public int getTotalExp() {
      return totalExp_;
    }
    /**
     * <pre>
     *当前级和下一级的经验差值
     * </pre>
     *
     * <code>optional int32 totalExp = 5;</code>
     */
    public Builder setTotalExp(int value) {
      
      totalExp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前级和下一级的经验差值
     * </pre>
     *
     * <code>optional int32 totalExp = 5;</code>
     */
    public Builder clearTotalExp() {
      
      totalExp_ = 0;
      onChanged();
      return this;
    }

    private int meltingEnergy_ ;
    /**
     * <pre>
     *当前熔能格数
     * </pre>
     *
     * <code>optional int32 meltingEnergy = 6;</code>
     */
    public int getMeltingEnergy() {
      return meltingEnergy_;
    }
    /**
     * <pre>
     *当前熔能格数
     * </pre>
     *
     * <code>optional int32 meltingEnergy = 6;</code>
     */
    public Builder setMeltingEnergy(int value) {
      
      meltingEnergy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前熔能格数
     * </pre>
     *
     * <code>optional int32 meltingEnergy = 6;</code>
     */
    public Builder clearMeltingEnergy() {
      
      meltingEnergy_ = 0;
      onChanged();
      return this;
    }

    private long remaind_ ;
    /**
     * <pre>
     *秒
     * </pre>
     *
     * <code>optional int64 remaind = 7;</code>
     */
    public long getRemaind() {
      return remaind_;
    }
    /**
     * <pre>
     *秒
     * </pre>
     *
     * <code>optional int64 remaind = 7;</code>
     */
    public Builder setRemaind(long value) {
      
      remaind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *秒
     * </pre>
     *
     * <code>optional int64 remaind = 7;</code>
     */
    public Builder clearRemaind() {
      
      remaind_ = 0L;
      onChanged();
      return this;
    }

    private int recycleRatio_ ;
    /**
     * <code>optional int32 recycleRatio = 10;</code>
     */
    public int getRecycleRatio() {
      return recycleRatio_;
    }
    /**
     * <code>optional int32 recycleRatio = 10;</code>
     */
    public Builder setRecycleRatio(int value) {
      
      recycleRatio_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 recycleRatio = 10;</code>
     */
    public Builder clearRecycleRatio() {
      
      recycleRatio_ = 0;
      onChanged();
      return this;
    }

    private int rate_ ;
    /**
     * <code>optional int32 rate = 11;</code>
     */
    public int getRate() {
      return rate_;
    }
    /**
     * <code>optional int32 rate = 11;</code>
     */
    public Builder setRate(int value) {
      
      rate_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 rate = 11;</code>
     */
    public Builder clearRate() {
      
      rate_ = 0;
      onChanged();
      return this;
    }

    private int price_ ;
    /**
     * <code>optional int32 price = 12;</code>
     */
    public int getPrice() {
      return price_;
    }
    /**
     * <code>optional int32 price = 12;</code>
     */
    public Builder setPrice(int value) {
      
      price_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 price = 12;</code>
     */
    public Builder clearPrice() {
      
      price_ = 0;
      onChanged();
      return this;
    }

    private int residual_ ;
    /**
     * <code>optional int32 residual = 13;</code>
     */
    public int getResidual() {
      return residual_;
    }
    /**
     * <code>optional int32 residual = 13;</code>
     */
    public Builder setResidual(int value) {
      
      residual_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 residual = 13;</code>
     */
    public Builder clearResidual() {
      
      residual_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:fcw.proto.model.ProtoPlayerMelting)
  }

  // @@protoc_insertion_point(class_scope:fcw.proto.model.ProtoPlayerMelting)
  private static final com.pearl.fcw.proto.model.ProtoPlayerMelting DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.pearl.fcw.proto.model.ProtoPlayerMelting();
  }

  public static com.pearl.fcw.proto.model.ProtoPlayerMelting getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProtoPlayerMelting>
      PARSER = new com.google.protobuf.AbstractParser<ProtoPlayerMelting>() {
    public ProtoPlayerMelting parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtoPlayerMelting(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ProtoPlayerMelting> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProtoPlayerMelting> getParserForType() {
    return PARSER;
  }

  public com.pearl.fcw.proto.model.ProtoPlayerMelting getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

