// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

package com.pearl.fcw.proto.model;

/**
 * <pre>
 *过关结算的玩家信息
 * </pre>
 *
 * Protobuf type {@code fcw.proto.model.ProtoStageClearPlayer}
 */
public  final class ProtoStageClearPlayer extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:fcw.proto.model.ProtoStageClearPlayer)
    ProtoStageClearPlayerOrBuilder {
  // Use ProtoStageClearPlayer.newBuilder() to construct.
  private ProtoStageClearPlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ProtoStageClearPlayer() {
    playerId_ = 0;
    teamId_ = 0;
    name_ = "";
    isRobot_ = 0;
    onlineMinutes_ = 0;
    offlineMinutes_ = 0;
    addExp_ = 0;
    addGp_ = 0;
    addVipExp_ = 0;
    passLevel_ = 0;
    score_ = 0;
    kill_ = 0;
    dead_ = 0;
    healthNum_ = 0;
    controlNum_ = 0;
    revengeNum_ = 0;
    assistNum_ = 0;
    knifeKill_ = 0;
    bottleHpNum_ = 0;
    bulletNum_ = 0;
    useTotal_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ProtoStageClearPlayer(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            playerId_ = input.readSInt32();
            break;
          }
          case 16: {

            teamId_ = input.readSInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 32: {

            isRobot_ = input.readSInt32();
            break;
          }
          case 80: {

            onlineMinutes_ = input.readSInt32();
            break;
          }
          case 88: {

            offlineMinutes_ = input.readSInt32();
            break;
          }
          case 160: {

            addExp_ = input.readSInt32();
            break;
          }
          case 168: {

            addGp_ = input.readSInt32();
            break;
          }
          case 176: {

            addVipExp_ = input.readSInt32();
            break;
          }
          case 240: {

            passLevel_ = input.readSInt32();
            break;
          }
          case 320: {

            score_ = input.readSInt32();
            break;
          }
          case 328: {

            kill_ = input.readSInt32();
            break;
          }
          case 336: {

            dead_ = input.readSInt32();
            break;
          }
          case 344: {

            healthNum_ = input.readSInt32();
            break;
          }
          case 352: {

            controlNum_ = input.readSInt32();
            break;
          }
          case 360: {

            revengeNum_ = input.readSInt32();
            break;
          }
          case 368: {

            assistNum_ = input.readSInt32();
            break;
          }
          case 376: {

            knifeKill_ = input.readSInt32();
            break;
          }
          case 560: {

            bottleHpNum_ = input.readSInt32();
            break;
          }
          case 568: {

            bulletNum_ = input.readSInt32();
            break;
          }
          case 576: {

            useTotal_ = input.readSInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClearPlayer_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClearPlayer_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.pearl.fcw.proto.model.ProtoStageClearPlayer.class, com.pearl.fcw.proto.model.ProtoStageClearPlayer.Builder.class);
  }

  public static final int PLAYERID_FIELD_NUMBER = 1;
  private int playerId_;
  /**
   * <code>optional sint32 playerId = 1;</code>
   */
  public int getPlayerId() {
    return playerId_;
  }

  public static final int TEAMID_FIELD_NUMBER = 2;
  private int teamId_;
  /**
   * <pre>
   *指代0或者1的一方，不是team表的id
   * </pre>
   *
   * <code>optional sint32 teamId = 2;</code>
   */
  public int getTeamId() {
    return teamId_;
  }

  public static final int NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   *昵称。如果是一个随机的机器人，需要该参数
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *昵称。如果是一个随机的机器人，需要该参数
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ISROBOT_FIELD_NUMBER = 4;
  private int isRobot_;
  /**
   * <pre>
   *是否机器人
   * </pre>
   *
   * <code>optional sint32 isRobot = 4;</code>
   */
  public int getIsRobot() {
    return isRobot_;
  }

  public static final int ONLINEMINUTES_FIELD_NUMBER = 10;
  private int onlineMinutes_;
  /**
   * <pre>
   *剩余多少分钟进入防沉迷??
   * </pre>
   *
   * <code>optional sint32 onlineMinutes = 10;</code>
   */
  public int getOnlineMinutes() {
    return onlineMinutes_;
  }

  public static final int OFFLINEMINUTES_FIELD_NUMBER = 11;
  private int offlineMinutes_;
  /**
   * <pre>
   *剩余多少分钟进入防沉迷??
   * </pre>
   *
   * <code>optional sint32 offlineMinutes = 11;</code>
   */
  public int getOfflineMinutes() {
    return offlineMinutes_;
  }

  public static final int ADDEXP_FIELD_NUMBER = 20;
  private int addExp_;
  /**
   * <code>optional sint32 addExp = 20;</code>
   */
  public int getAddExp() {
    return addExp_;
  }

  public static final int ADDGP_FIELD_NUMBER = 21;
  private int addGp_;
  /**
   * <code>optional sint32 addGp = 21;</code>
   */
  public int getAddGp() {
    return addGp_;
  }

  public static final int ADDVIPEXP_FIELD_NUMBER = 22;
  private int addVipExp_;
  /**
   * <code>optional sint32 addVipExp = 22;</code>
   */
  public int getAddVipExp() {
    return addVipExp_;
  }

  public static final int PASSLEVEL_FIELD_NUMBER = 30;
  private int passLevel_;
  /**
   * <pre>
   *Boss2 通过boss数
   * </pre>
   *
   * <code>optional sint32 passLevel = 30;</code>
   */
  public int getPassLevel() {
    return passLevel_;
  }

  public static final int SCORE_FIELD_NUMBER = 40;
  private int score_;
  /**
   * <pre>
   *得分
   * </pre>
   *
   * <code>optional sint32 score = 40;</code>
   */
  public int getScore() {
    return score_;
  }

  public static final int KILL_FIELD_NUMBER = 41;
  private int kill_;
  /**
   * <pre>
   *击杀
   * </pre>
   *
   * <code>optional sint32 kill = 41;</code>
   */
  public int getKill() {
    return kill_;
  }

  public static final int DEAD_FIELD_NUMBER = 42;
  private int dead_;
  /**
   * <pre>
   *被杀	
   * </pre>
   *
   * <code>optional sint32 dead = 42;</code>
   */
  public int getDead() {
    return dead_;
  }

  public static final int HEALTHNUM_FIELD_NUMBER = 43;
  private int healthNum_;
  /**
   * <pre>
   *剩余血量?医疗兵剩余血包？
   * </pre>
   *
   * <code>optional sint32 healthNum = 43;</code>
   */
  public int getHealthNum() {
    return healthNum_;
  }

  public static final int CONTROLNUM_FIELD_NUMBER = 44;
  private int controlNum_;
  /**
   * <pre>
   *?
   * </pre>
   *
   * <code>optional sint32 controlNum = 44;</code>
   */
  public int getControlNum() {
    return controlNum_;
  }

  public static final int REVENGENUM_FIELD_NUMBER = 45;
  private int revengeNum_;
  /**
   * <pre>
   *复仇次数
   * </pre>
   *
   * <code>optional sint32 revengeNum = 45;</code>
   */
  public int getRevengeNum() {
    return revengeNum_;
  }

  public static final int ASSISTNUM_FIELD_NUMBER = 46;
  private int assistNum_;
  /**
   * <pre>
   *助攻
   * </pre>
   *
   * <code>optional sint32 assistNum = 46;</code>
   */
  public int getAssistNum() {
    return assistNum_;
  }

  public static final int KNIFEKILL_FIELD_NUMBER = 47;
  private int knifeKill_;
  /**
   * <pre>
   *刀杀
   * </pre>
   *
   * <code>optional sint32 knifeKill = 47;</code>
   */
  public int getKnifeKill() {
    return knifeKill_;
  }

  public static final int BOTTLEHPNUM_FIELD_NUMBER = 70;
  private int bottleHpNum_;
  /**
   * <pre>
   *吃血包
   * </pre>
   *
   * <code>optional sint32 bottleHpNum = 70;</code>
   */
  public int getBottleHpNum() {
    return bottleHpNum_;
  }

  public static final int BULLETNUM_FIELD_NUMBER = 71;
  private int bulletNum_;
  /**
   * <pre>
   *吃弹药包
   * </pre>
   *
   * <code>optional sint32 bulletNum = 71;</code>
   */
  public int getBulletNum() {
    return bulletNum_;
  }

  public static final int USETOTAL_FIELD_NUMBER = 72;
  private int useTotal_;
  /**
   * <pre>
   *？使用次数
   * </pre>
   *
   * <code>optional sint32 useTotal = 72;</code>
   */
  public int getUseTotal() {
    return useTotal_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (playerId_ != 0) {
      output.writeSInt32(1, playerId_);
    }
    if (teamId_ != 0) {
      output.writeSInt32(2, teamId_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, name_);
    }
    if (isRobot_ != 0) {
      output.writeSInt32(4, isRobot_);
    }
    if (onlineMinutes_ != 0) {
      output.writeSInt32(10, onlineMinutes_);
    }
    if (offlineMinutes_ != 0) {
      output.writeSInt32(11, offlineMinutes_);
    }
    if (addExp_ != 0) {
      output.writeSInt32(20, addExp_);
    }
    if (addGp_ != 0) {
      output.writeSInt32(21, addGp_);
    }
    if (addVipExp_ != 0) {
      output.writeSInt32(22, addVipExp_);
    }
    if (passLevel_ != 0) {
      output.writeSInt32(30, passLevel_);
    }
    if (score_ != 0) {
      output.writeSInt32(40, score_);
    }
    if (kill_ != 0) {
      output.writeSInt32(41, kill_);
    }
    if (dead_ != 0) {
      output.writeSInt32(42, dead_);
    }
    if (healthNum_ != 0) {
      output.writeSInt32(43, healthNum_);
    }
    if (controlNum_ != 0) {
      output.writeSInt32(44, controlNum_);
    }
    if (revengeNum_ != 0) {
      output.writeSInt32(45, revengeNum_);
    }
    if (assistNum_ != 0) {
      output.writeSInt32(46, assistNum_);
    }
    if (knifeKill_ != 0) {
      output.writeSInt32(47, knifeKill_);
    }
    if (bottleHpNum_ != 0) {
      output.writeSInt32(70, bottleHpNum_);
    }
    if (bulletNum_ != 0) {
      output.writeSInt32(71, bulletNum_);
    }
    if (useTotal_ != 0) {
      output.writeSInt32(72, useTotal_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (playerId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(1, playerId_);
    }
    if (teamId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(2, teamId_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, name_);
    }
    if (isRobot_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(4, isRobot_);
    }
    if (onlineMinutes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(10, onlineMinutes_);
    }
    if (offlineMinutes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(11, offlineMinutes_);
    }
    if (addExp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(20, addExp_);
    }
    if (addGp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(21, addGp_);
    }
    if (addVipExp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(22, addVipExp_);
    }
    if (passLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(30, passLevel_);
    }
    if (score_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(40, score_);
    }
    if (kill_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(41, kill_);
    }
    if (dead_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(42, dead_);
    }
    if (healthNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(43, healthNum_);
    }
    if (controlNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(44, controlNum_);
    }
    if (revengeNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(45, revengeNum_);
    }
    if (assistNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(46, assistNum_);
    }
    if (knifeKill_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(47, knifeKill_);
    }
    if (bottleHpNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(70, bottleHpNum_);
    }
    if (bulletNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(71, bulletNum_);
    }
    if (useTotal_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(72, useTotal_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.pearl.fcw.proto.model.ProtoStageClearPlayer)) {
      return super.equals(obj);
    }
    com.pearl.fcw.proto.model.ProtoStageClearPlayer other = (com.pearl.fcw.proto.model.ProtoStageClearPlayer) obj;

    boolean result = true;
    result = result && (getPlayerId()
        == other.getPlayerId());
    result = result && (getTeamId()
        == other.getTeamId());
    result = result && getName()
        .equals(other.getName());
    result = result && (getIsRobot()
        == other.getIsRobot());
    result = result && (getOnlineMinutes()
        == other.getOnlineMinutes());
    result = result && (getOfflineMinutes()
        == other.getOfflineMinutes());
    result = result && (getAddExp()
        == other.getAddExp());
    result = result && (getAddGp()
        == other.getAddGp());
    result = result && (getAddVipExp()
        == other.getAddVipExp());
    result = result && (getPassLevel()
        == other.getPassLevel());
    result = result && (getScore()
        == other.getScore());
    result = result && (getKill()
        == other.getKill());
    result = result && (getDead()
        == other.getDead());
    result = result && (getHealthNum()
        == other.getHealthNum());
    result = result && (getControlNum()
        == other.getControlNum());
    result = result && (getRevengeNum()
        == other.getRevengeNum());
    result = result && (getAssistNum()
        == other.getAssistNum());
    result = result && (getKnifeKill()
        == other.getKnifeKill());
    result = result && (getBottleHpNum()
        == other.getBottleHpNum());
    result = result && (getBulletNum()
        == other.getBulletNum());
    result = result && (getUseTotal()
        == other.getUseTotal());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
    hash = (53 * hash) + getPlayerId();
    hash = (37 * hash) + TEAMID_FIELD_NUMBER;
    hash = (53 * hash) + getTeamId();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + ISROBOT_FIELD_NUMBER;
    hash = (53 * hash) + getIsRobot();
    hash = (37 * hash) + ONLINEMINUTES_FIELD_NUMBER;
    hash = (53 * hash) + getOnlineMinutes();
    hash = (37 * hash) + OFFLINEMINUTES_FIELD_NUMBER;
    hash = (53 * hash) + getOfflineMinutes();
    hash = (37 * hash) + ADDEXP_FIELD_NUMBER;
    hash = (53 * hash) + getAddExp();
    hash = (37 * hash) + ADDGP_FIELD_NUMBER;
    hash = (53 * hash) + getAddGp();
    hash = (37 * hash) + ADDVIPEXP_FIELD_NUMBER;
    hash = (53 * hash) + getAddVipExp();
    hash = (37 * hash) + PASSLEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getPassLevel();
    hash = (37 * hash) + SCORE_FIELD_NUMBER;
    hash = (53 * hash) + getScore();
    hash = (37 * hash) + KILL_FIELD_NUMBER;
    hash = (53 * hash) + getKill();
    hash = (37 * hash) + DEAD_FIELD_NUMBER;
    hash = (53 * hash) + getDead();
    hash = (37 * hash) + HEALTHNUM_FIELD_NUMBER;
    hash = (53 * hash) + getHealthNum();
    hash = (37 * hash) + CONTROLNUM_FIELD_NUMBER;
    hash = (53 * hash) + getControlNum();
    hash = (37 * hash) + REVENGENUM_FIELD_NUMBER;
    hash = (53 * hash) + getRevengeNum();
    hash = (37 * hash) + ASSISTNUM_FIELD_NUMBER;
    hash = (53 * hash) + getAssistNum();
    hash = (37 * hash) + KNIFEKILL_FIELD_NUMBER;
    hash = (53 * hash) + getKnifeKill();
    hash = (37 * hash) + BOTTLEHPNUM_FIELD_NUMBER;
    hash = (53 * hash) + getBottleHpNum();
    hash = (37 * hash) + BULLETNUM_FIELD_NUMBER;
    hash = (53 * hash) + getBulletNum();
    hash = (37 * hash) + USETOTAL_FIELD_NUMBER;
    hash = (53 * hash) + getUseTotal();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.pearl.fcw.proto.model.ProtoStageClearPlayer prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *过关结算的玩家信息
   * </pre>
   *
   * Protobuf type {@code fcw.proto.model.ProtoStageClearPlayer}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fcw.proto.model.ProtoStageClearPlayer)
      com.pearl.fcw.proto.model.ProtoStageClearPlayerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClearPlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClearPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pearl.fcw.proto.model.ProtoStageClearPlayer.class, com.pearl.fcw.proto.model.ProtoStageClearPlayer.Builder.class);
    }

    // Construct using com.pearl.fcw.proto.model.ProtoStageClearPlayer.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      playerId_ = 0;

      teamId_ = 0;

      name_ = "";

      isRobot_ = 0;

      onlineMinutes_ = 0;

      offlineMinutes_ = 0;

      addExp_ = 0;

      addGp_ = 0;

      addVipExp_ = 0;

      passLevel_ = 0;

      score_ = 0;

      kill_ = 0;

      dead_ = 0;

      healthNum_ = 0;

      controlNum_ = 0;

      revengeNum_ = 0;

      assistNum_ = 0;

      knifeKill_ = 0;

      bottleHpNum_ = 0;

      bulletNum_ = 0;

      useTotal_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoStageClearPlayer_descriptor;
    }

    public com.pearl.fcw.proto.model.ProtoStageClearPlayer getDefaultInstanceForType() {
      return com.pearl.fcw.proto.model.ProtoStageClearPlayer.getDefaultInstance();
    }

    public com.pearl.fcw.proto.model.ProtoStageClearPlayer build() {
      com.pearl.fcw.proto.model.ProtoStageClearPlayer result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.pearl.fcw.proto.model.ProtoStageClearPlayer buildPartial() {
      com.pearl.fcw.proto.model.ProtoStageClearPlayer result = new com.pearl.fcw.proto.model.ProtoStageClearPlayer(this);
      result.playerId_ = playerId_;
      result.teamId_ = teamId_;
      result.name_ = name_;
      result.isRobot_ = isRobot_;
      result.onlineMinutes_ = onlineMinutes_;
      result.offlineMinutes_ = offlineMinutes_;
      result.addExp_ = addExp_;
      result.addGp_ = addGp_;
      result.addVipExp_ = addVipExp_;
      result.passLevel_ = passLevel_;
      result.score_ = score_;
      result.kill_ = kill_;
      result.dead_ = dead_;
      result.healthNum_ = healthNum_;
      result.controlNum_ = controlNum_;
      result.revengeNum_ = revengeNum_;
      result.assistNum_ = assistNum_;
      result.knifeKill_ = knifeKill_;
      result.bottleHpNum_ = bottleHpNum_;
      result.bulletNum_ = bulletNum_;
      result.useTotal_ = useTotal_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.pearl.fcw.proto.model.ProtoStageClearPlayer) {
        return mergeFrom((com.pearl.fcw.proto.model.ProtoStageClearPlayer)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.pearl.fcw.proto.model.ProtoStageClearPlayer other) {
      if (other == com.pearl.fcw.proto.model.ProtoStageClearPlayer.getDefaultInstance()) return this;
      if (other.getPlayerId() != 0) {
        setPlayerId(other.getPlayerId());
      }
      if (other.getTeamId() != 0) {
        setTeamId(other.getTeamId());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.getIsRobot() != 0) {
        setIsRobot(other.getIsRobot());
      }
      if (other.getOnlineMinutes() != 0) {
        setOnlineMinutes(other.getOnlineMinutes());
      }
      if (other.getOfflineMinutes() != 0) {
        setOfflineMinutes(other.getOfflineMinutes());
      }
      if (other.getAddExp() != 0) {
        setAddExp(other.getAddExp());
      }
      if (other.getAddGp() != 0) {
        setAddGp(other.getAddGp());
      }
      if (other.getAddVipExp() != 0) {
        setAddVipExp(other.getAddVipExp());
      }
      if (other.getPassLevel() != 0) {
        setPassLevel(other.getPassLevel());
      }
      if (other.getScore() != 0) {
        setScore(other.getScore());
      }
      if (other.getKill() != 0) {
        setKill(other.getKill());
      }
      if (other.getDead() != 0) {
        setDead(other.getDead());
      }
      if (other.getHealthNum() != 0) {
        setHealthNum(other.getHealthNum());
      }
      if (other.getControlNum() != 0) {
        setControlNum(other.getControlNum());
      }
      if (other.getRevengeNum() != 0) {
        setRevengeNum(other.getRevengeNum());
      }
      if (other.getAssistNum() != 0) {
        setAssistNum(other.getAssistNum());
      }
      if (other.getKnifeKill() != 0) {
        setKnifeKill(other.getKnifeKill());
      }
      if (other.getBottleHpNum() != 0) {
        setBottleHpNum(other.getBottleHpNum());
      }
      if (other.getBulletNum() != 0) {
        setBulletNum(other.getBulletNum());
      }
      if (other.getUseTotal() != 0) {
        setUseTotal(other.getUseTotal());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.pearl.fcw.proto.model.ProtoStageClearPlayer parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.pearl.fcw.proto.model.ProtoStageClearPlayer) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int playerId_ ;
    /**
     * <code>optional sint32 playerId = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>optional sint32 playerId = 1;</code>
     */
    public Builder setPlayerId(int value) {
      
      playerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 playerId = 1;</code>
     */
    public Builder clearPlayerId() {
      
      playerId_ = 0;
      onChanged();
      return this;
    }

    private int teamId_ ;
    /**
     * <pre>
     *指代0或者1的一方，不是team表的id
     * </pre>
     *
     * <code>optional sint32 teamId = 2;</code>
     */
    public int getTeamId() {
      return teamId_;
    }
    /**
     * <pre>
     *指代0或者1的一方，不是team表的id
     * </pre>
     *
     * <code>optional sint32 teamId = 2;</code>
     */
    public Builder setTeamId(int value) {
      
      teamId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *指代0或者1的一方，不是team表的id
     * </pre>
     *
     * <code>optional sint32 teamId = 2;</code>
     */
    public Builder clearTeamId() {
      
      teamId_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     *昵称。如果是一个随机的机器人，需要该参数
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *昵称。如果是一个随机的机器人，需要该参数
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *昵称。如果是一个随机的机器人，需要该参数
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *昵称。如果是一个随机的机器人，需要该参数
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *昵称。如果是一个随机的机器人，需要该参数
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private int isRobot_ ;
    /**
     * <pre>
     *是否机器人
     * </pre>
     *
     * <code>optional sint32 isRobot = 4;</code>
     */
    public int getIsRobot() {
      return isRobot_;
    }
    /**
     * <pre>
     *是否机器人
     * </pre>
     *
     * <code>optional sint32 isRobot = 4;</code>
     */
    public Builder setIsRobot(int value) {
      
      isRobot_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否机器人
     * </pre>
     *
     * <code>optional sint32 isRobot = 4;</code>
     */
    public Builder clearIsRobot() {
      
      isRobot_ = 0;
      onChanged();
      return this;
    }

    private int onlineMinutes_ ;
    /**
     * <pre>
     *剩余多少分钟进入防沉迷??
     * </pre>
     *
     * <code>optional sint32 onlineMinutes = 10;</code>
     */
    public int getOnlineMinutes() {
      return onlineMinutes_;
    }
    /**
     * <pre>
     *剩余多少分钟进入防沉迷??
     * </pre>
     *
     * <code>optional sint32 onlineMinutes = 10;</code>
     */
    public Builder setOnlineMinutes(int value) {
      
      onlineMinutes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *剩余多少分钟进入防沉迷??
     * </pre>
     *
     * <code>optional sint32 onlineMinutes = 10;</code>
     */
    public Builder clearOnlineMinutes() {
      
      onlineMinutes_ = 0;
      onChanged();
      return this;
    }

    private int offlineMinutes_ ;
    /**
     * <pre>
     *剩余多少分钟进入防沉迷??
     * </pre>
     *
     * <code>optional sint32 offlineMinutes = 11;</code>
     */
    public int getOfflineMinutes() {
      return offlineMinutes_;
    }
    /**
     * <pre>
     *剩余多少分钟进入防沉迷??
     * </pre>
     *
     * <code>optional sint32 offlineMinutes = 11;</code>
     */
    public Builder setOfflineMinutes(int value) {
      
      offlineMinutes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *剩余多少分钟进入防沉迷??
     * </pre>
     *
     * <code>optional sint32 offlineMinutes = 11;</code>
     */
    public Builder clearOfflineMinutes() {
      
      offlineMinutes_ = 0;
      onChanged();
      return this;
    }

    private int addExp_ ;
    /**
     * <code>optional sint32 addExp = 20;</code>
     */
    public int getAddExp() {
      return addExp_;
    }
    /**
     * <code>optional sint32 addExp = 20;</code>
     */
    public Builder setAddExp(int value) {
      
      addExp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 addExp = 20;</code>
     */
    public Builder clearAddExp() {
      
      addExp_ = 0;
      onChanged();
      return this;
    }

    private int addGp_ ;
    /**
     * <code>optional sint32 addGp = 21;</code>
     */
    public int getAddGp() {
      return addGp_;
    }
    /**
     * <code>optional sint32 addGp = 21;</code>
     */
    public Builder setAddGp(int value) {
      
      addGp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 addGp = 21;</code>
     */
    public Builder clearAddGp() {
      
      addGp_ = 0;
      onChanged();
      return this;
    }

    private int addVipExp_ ;
    /**
     * <code>optional sint32 addVipExp = 22;</code>
     */
    public int getAddVipExp() {
      return addVipExp_;
    }
    /**
     * <code>optional sint32 addVipExp = 22;</code>
     */
    public Builder setAddVipExp(int value) {
      
      addVipExp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 addVipExp = 22;</code>
     */
    public Builder clearAddVipExp() {
      
      addVipExp_ = 0;
      onChanged();
      return this;
    }

    private int passLevel_ ;
    /**
     * <pre>
     *Boss2 通过boss数
     * </pre>
     *
     * <code>optional sint32 passLevel = 30;</code>
     */
    public int getPassLevel() {
      return passLevel_;
    }
    /**
     * <pre>
     *Boss2 通过boss数
     * </pre>
     *
     * <code>optional sint32 passLevel = 30;</code>
     */
    public Builder setPassLevel(int value) {
      
      passLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *Boss2 通过boss数
     * </pre>
     *
     * <code>optional sint32 passLevel = 30;</code>
     */
    public Builder clearPassLevel() {
      
      passLevel_ = 0;
      onChanged();
      return this;
    }

    private int score_ ;
    /**
     * <pre>
     *得分
     * </pre>
     *
     * <code>optional sint32 score = 40;</code>
     */
    public int getScore() {
      return score_;
    }
    /**
     * <pre>
     *得分
     * </pre>
     *
     * <code>optional sint32 score = 40;</code>
     */
    public Builder setScore(int value) {
      
      score_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *得分
     * </pre>
     *
     * <code>optional sint32 score = 40;</code>
     */
    public Builder clearScore() {
      
      score_ = 0;
      onChanged();
      return this;
    }

    private int kill_ ;
    /**
     * <pre>
     *击杀
     * </pre>
     *
     * <code>optional sint32 kill = 41;</code>
     */
    public int getKill() {
      return kill_;
    }
    /**
     * <pre>
     *击杀
     * </pre>
     *
     * <code>optional sint32 kill = 41;</code>
     */
    public Builder setKill(int value) {
      
      kill_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *击杀
     * </pre>
     *
     * <code>optional sint32 kill = 41;</code>
     */
    public Builder clearKill() {
      
      kill_ = 0;
      onChanged();
      return this;
    }

    private int dead_ ;
    /**
     * <pre>
     *被杀	
     * </pre>
     *
     * <code>optional sint32 dead = 42;</code>
     */
    public int getDead() {
      return dead_;
    }
    /**
     * <pre>
     *被杀	
     * </pre>
     *
     * <code>optional sint32 dead = 42;</code>
     */
    public Builder setDead(int value) {
      
      dead_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *被杀	
     * </pre>
     *
     * <code>optional sint32 dead = 42;</code>
     */
    public Builder clearDead() {
      
      dead_ = 0;
      onChanged();
      return this;
    }

    private int healthNum_ ;
    /**
     * <pre>
     *剩余血量?医疗兵剩余血包？
     * </pre>
     *
     * <code>optional sint32 healthNum = 43;</code>
     */
    public int getHealthNum() {
      return healthNum_;
    }
    /**
     * <pre>
     *剩余血量?医疗兵剩余血包？
     * </pre>
     *
     * <code>optional sint32 healthNum = 43;</code>
     */
    public Builder setHealthNum(int value) {
      
      healthNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *剩余血量?医疗兵剩余血包？
     * </pre>
     *
     * <code>optional sint32 healthNum = 43;</code>
     */
    public Builder clearHealthNum() {
      
      healthNum_ = 0;
      onChanged();
      return this;
    }

    private int controlNum_ ;
    /**
     * <pre>
     *?
     * </pre>
     *
     * <code>optional sint32 controlNum = 44;</code>
     */
    public int getControlNum() {
      return controlNum_;
    }
    /**
     * <pre>
     *?
     * </pre>
     *
     * <code>optional sint32 controlNum = 44;</code>
     */
    public Builder setControlNum(int value) {
      
      controlNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *?
     * </pre>
     *
     * <code>optional sint32 controlNum = 44;</code>
     */
    public Builder clearControlNum() {
      
      controlNum_ = 0;
      onChanged();
      return this;
    }

    private int revengeNum_ ;
    /**
     * <pre>
     *复仇次数
     * </pre>
     *
     * <code>optional sint32 revengeNum = 45;</code>
     */
    public int getRevengeNum() {
      return revengeNum_;
    }
    /**
     * <pre>
     *复仇次数
     * </pre>
     *
     * <code>optional sint32 revengeNum = 45;</code>
     */
    public Builder setRevengeNum(int value) {
      
      revengeNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *复仇次数
     * </pre>
     *
     * <code>optional sint32 revengeNum = 45;</code>
     */
    public Builder clearRevengeNum() {
      
      revengeNum_ = 0;
      onChanged();
      return this;
    }

    private int assistNum_ ;
    /**
     * <pre>
     *助攻
     * </pre>
     *
     * <code>optional sint32 assistNum = 46;</code>
     */
    public int getAssistNum() {
      return assistNum_;
    }
    /**
     * <pre>
     *助攻
     * </pre>
     *
     * <code>optional sint32 assistNum = 46;</code>
     */
    public Builder setAssistNum(int value) {
      
      assistNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *助攻
     * </pre>
     *
     * <code>optional sint32 assistNum = 46;</code>
     */
    public Builder clearAssistNum() {
      
      assistNum_ = 0;
      onChanged();
      return this;
    }

    private int knifeKill_ ;
    /**
     * <pre>
     *刀杀
     * </pre>
     *
     * <code>optional sint32 knifeKill = 47;</code>
     */
    public int getKnifeKill() {
      return knifeKill_;
    }
    /**
     * <pre>
     *刀杀
     * </pre>
     *
     * <code>optional sint32 knifeKill = 47;</code>
     */
    public Builder setKnifeKill(int value) {
      
      knifeKill_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *刀杀
     * </pre>
     *
     * <code>optional sint32 knifeKill = 47;</code>
     */
    public Builder clearKnifeKill() {
      
      knifeKill_ = 0;
      onChanged();
      return this;
    }

    private int bottleHpNum_ ;
    /**
     * <pre>
     *吃血包
     * </pre>
     *
     * <code>optional sint32 bottleHpNum = 70;</code>
     */
    public int getBottleHpNum() {
      return bottleHpNum_;
    }
    /**
     * <pre>
     *吃血包
     * </pre>
     *
     * <code>optional sint32 bottleHpNum = 70;</code>
     */
    public Builder setBottleHpNum(int value) {
      
      bottleHpNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *吃血包
     * </pre>
     *
     * <code>optional sint32 bottleHpNum = 70;</code>
     */
    public Builder clearBottleHpNum() {
      
      bottleHpNum_ = 0;
      onChanged();
      return this;
    }

    private int bulletNum_ ;
    /**
     * <pre>
     *吃弹药包
     * </pre>
     *
     * <code>optional sint32 bulletNum = 71;</code>
     */
    public int getBulletNum() {
      return bulletNum_;
    }
    /**
     * <pre>
     *吃弹药包
     * </pre>
     *
     * <code>optional sint32 bulletNum = 71;</code>
     */
    public Builder setBulletNum(int value) {
      
      bulletNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *吃弹药包
     * </pre>
     *
     * <code>optional sint32 bulletNum = 71;</code>
     */
    public Builder clearBulletNum() {
      
      bulletNum_ = 0;
      onChanged();
      return this;
    }

    private int useTotal_ ;
    /**
     * <pre>
     *？使用次数
     * </pre>
     *
     * <code>optional sint32 useTotal = 72;</code>
     */
    public int getUseTotal() {
      return useTotal_;
    }
    /**
     * <pre>
     *？使用次数
     * </pre>
     *
     * <code>optional sint32 useTotal = 72;</code>
     */
    public Builder setUseTotal(int value) {
      
      useTotal_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *？使用次数
     * </pre>
     *
     * <code>optional sint32 useTotal = 72;</code>
     */
    public Builder clearUseTotal() {
      
      useTotal_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:fcw.proto.model.ProtoStageClearPlayer)
  }

  // @@protoc_insertion_point(class_scope:fcw.proto.model.ProtoStageClearPlayer)
  private static final com.pearl.fcw.proto.model.ProtoStageClearPlayer DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.pearl.fcw.proto.model.ProtoStageClearPlayer();
  }

  public static com.pearl.fcw.proto.model.ProtoStageClearPlayer getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProtoStageClearPlayer>
      PARSER = new com.google.protobuf.AbstractParser<ProtoStageClearPlayer>() {
    public ProtoStageClearPlayer parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtoStageClearPlayer(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ProtoStageClearPlayer> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProtoStageClearPlayer> getParserForType() {
    return PARSER;
  }

  public com.pearl.fcw.proto.model.ProtoStageClearPlayer getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

