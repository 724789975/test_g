// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums/type.proto

package com.pearl.fcw.proto.enums;

/**
 * <pre>
 *交易类型。对应payment的payType
 * </pre>
 *
 * Protobuf enum {@code fcw.proto.enums.type.EPayType}
 */
public enum EPayType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>PAY_NONE = 0;</code>
   */
  PAY_NONE(0),
  /**
   * <pre>
   *游戏C币
   * </pre>
   *
   * <code>PAY_GP = 1;</code>
   */
  PAY_GP(1),
  /**
   * <pre>
   *FC点
   * </pre>
   *
   * <code>PAY_FC_POINT = 2;</code>
   */
  PAY_FC_POINT(2),
  /**
   * <pre>
   *代金券
   * </pre>
   *
   * <code>PAY_VOUCHER = 3;</code>
   */
  PAY_VOUCHER(3),
  /**
   * <pre>
   *勋章
   * </pre>
   *
   * <code>PAY_MEDAL = 4;</code>
   */
  PAY_MEDAL(4),
  /**
   * <pre>
   *个人黑晶石
   * </pre>
   *
   * <code>PAY_PERSONAL_RES = 5;</code>
   */
  PAY_PERSONAL_RES(5),
  /**
   * <pre>
   *团队黑晶石
   * </pre>
   *
   * <code>PAY_TEAM_RES = 6;</code>
   */
  PAY_TEAM_RES(6),
  /**
   * <pre>
   *个人黑原石
   * </pre>
   *
   * <code>PAY_PERSONAL_RES_DIS = 7;</code>
   */
  PAY_PERSONAL_RES_DIS(7),
  /**
   * <pre>
   *个人黑原石
   * </pre>
   *
   * <code>PAY_TEAM_RES_DIS = 8;</code>
   */
  PAY_TEAM_RES_DIS(8),
  /**
   * <pre>
   *复活币
   * </pre>
   *
   * <code>PAY_REVIVE_COIN = 9;</code>
   */
  PAY_REVIVE_COIN(9),
  /**
   * <pre>
   *VIP经验
   * </pre>
   *
   * <code>PAY_VIP_EXP = 10;</code>
   */
  PAY_VIP_EXP(10),
  /**
   * <pre>
   *玩家经验
   * </pre>
   *
   * <code>PAY_PLAYER_EXP = 11;</code>
   */
  PAY_PLAYER_EXP(11),
  /**
   * <pre>
   *A碎片
   * </pre>
   *
   * <code>PAY_A_CHIP = 101;</code>
   */
  PAY_A_CHIP(101),
  /**
   * <pre>
   *B碎片
   * </pre>
   *
   * <code>PAY_B_CHIP = 102;</code>
   */
  PAY_B_CHIP(102),
  /**
   * <pre>
   *C碎片
   * </pre>
   *
   * <code>PAY_C_CHIP = 103;</code>
   */
  PAY_C_CHIP(103),
  /**
   * <pre>
   *过期碎片
   * </pre>
   *
   * <code>PAY_OFF_CHIP = 104;</code>
   */
  PAY_OFF_CHIP(104),
  /**
   * <pre>
   *道具
   * </pre>
   *
   * <code>PAY_ITEM = 200;</code>
   */
  PAY_ITEM(200),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>PAY_NONE = 0;</code>
   */
  public static final int PAY_NONE_VALUE = 0;
  /**
   * <pre>
   *游戏C币
   * </pre>
   *
   * <code>PAY_GP = 1;</code>
   */
  public static final int PAY_GP_VALUE = 1;
  /**
   * <pre>
   *FC点
   * </pre>
   *
   * <code>PAY_FC_POINT = 2;</code>
   */
  public static final int PAY_FC_POINT_VALUE = 2;
  /**
   * <pre>
   *代金券
   * </pre>
   *
   * <code>PAY_VOUCHER = 3;</code>
   */
  public static final int PAY_VOUCHER_VALUE = 3;
  /**
   * <pre>
   *勋章
   * </pre>
   *
   * <code>PAY_MEDAL = 4;</code>
   */
  public static final int PAY_MEDAL_VALUE = 4;
  /**
   * <pre>
   *个人黑晶石
   * </pre>
   *
   * <code>PAY_PERSONAL_RES = 5;</code>
   */
  public static final int PAY_PERSONAL_RES_VALUE = 5;
  /**
   * <pre>
   *团队黑晶石
   * </pre>
   *
   * <code>PAY_TEAM_RES = 6;</code>
   */
  public static final int PAY_TEAM_RES_VALUE = 6;
  /**
   * <pre>
   *个人黑原石
   * </pre>
   *
   * <code>PAY_PERSONAL_RES_DIS = 7;</code>
   */
  public static final int PAY_PERSONAL_RES_DIS_VALUE = 7;
  /**
   * <pre>
   *个人黑原石
   * </pre>
   *
   * <code>PAY_TEAM_RES_DIS = 8;</code>
   */
  public static final int PAY_TEAM_RES_DIS_VALUE = 8;
  /**
   * <pre>
   *复活币
   * </pre>
   *
   * <code>PAY_REVIVE_COIN = 9;</code>
   */
  public static final int PAY_REVIVE_COIN_VALUE = 9;
  /**
   * <pre>
   *VIP经验
   * </pre>
   *
   * <code>PAY_VIP_EXP = 10;</code>
   */
  public static final int PAY_VIP_EXP_VALUE = 10;
  /**
   * <pre>
   *玩家经验
   * </pre>
   *
   * <code>PAY_PLAYER_EXP = 11;</code>
   */
  public static final int PAY_PLAYER_EXP_VALUE = 11;
  /**
   * <pre>
   *A碎片
   * </pre>
   *
   * <code>PAY_A_CHIP = 101;</code>
   */
  public static final int PAY_A_CHIP_VALUE = 101;
  /**
   * <pre>
   *B碎片
   * </pre>
   *
   * <code>PAY_B_CHIP = 102;</code>
   */
  public static final int PAY_B_CHIP_VALUE = 102;
  /**
   * <pre>
   *C碎片
   * </pre>
   *
   * <code>PAY_C_CHIP = 103;</code>
   */
  public static final int PAY_C_CHIP_VALUE = 103;
  /**
   * <pre>
   *过期碎片
   * </pre>
   *
   * <code>PAY_OFF_CHIP = 104;</code>
   */
  public static final int PAY_OFF_CHIP_VALUE = 104;
  /**
   * <pre>
   *道具
   * </pre>
   *
   * <code>PAY_ITEM = 200;</code>
   */
  public static final int PAY_ITEM_VALUE = 200;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EPayType valueOf(int value) {
    return forNumber(value);
  }

  public static EPayType forNumber(int value) {
    switch (value) {
      case 0: return PAY_NONE;
      case 1: return PAY_GP;
      case 2: return PAY_FC_POINT;
      case 3: return PAY_VOUCHER;
      case 4: return PAY_MEDAL;
      case 5: return PAY_PERSONAL_RES;
      case 6: return PAY_TEAM_RES;
      case 7: return PAY_PERSONAL_RES_DIS;
      case 8: return PAY_TEAM_RES_DIS;
      case 9: return PAY_REVIVE_COIN;
      case 10: return PAY_VIP_EXP;
      case 11: return PAY_PLAYER_EXP;
      case 101: return PAY_A_CHIP;
      case 102: return PAY_B_CHIP;
      case 103: return PAY_C_CHIP;
      case 104: return PAY_OFF_CHIP;
      case 200: return PAY_ITEM;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EPayType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EPayType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EPayType>() {
          public EPayType findValueByNumber(int number) {
            return EPayType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.pearl.fcw.proto.enums.ApiProto.getDescriptor()
        .getEnumTypes().get(14);
  }

  private static final EPayType[] VALUES = values();

  public static EPayType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EPayType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:fcw.proto.enums.type.EPayType)
}

