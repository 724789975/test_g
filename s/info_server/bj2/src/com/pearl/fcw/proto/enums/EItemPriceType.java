// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums/type.proto

package com.pearl.fcw.proto.enums;

/**
 * <pre>
 *多对多交易类型
 * </pre>
 *
 * Protobuf enum {@code fcw.proto.enums.type.EItemPriceType}
 */
public enum EItemPriceType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NONE_PRICE = 0;</code>
   */
  NONE_PRICE(0),
  /**
   * <pre>
   *商店
   * </pre>
   *
   * <code>SHOPPING = 1;</code>
   */
  SHOPPING(1),
  /**
   * <pre>
   *免费兑换
   * </pre>
   *
   * <code>EXCHANGE = 2;</code>
   */
  EXCHANGE(2),
  /**
   * <pre>
   *结算翻牌的serverId
   * </pre>
   *
   * <code>STAGECLEAR_SERVER_ID = 100;</code>
   */
  STAGECLEAR_SERVER_ID(100),
  /**
   * <pre>
   *根据当天已翻牌次数的下限阈值决定结算翻牌的底牌(左闭区间)
   * </pre>
   *
   * <code>STAGECLEAR_MIN_BRAND = 101;</code>
   */
  STAGECLEAR_MIN_BRAND(101),
  /**
   * <pre>
   *根据当天已翻牌次数的上限阈值决定结算翻牌的底牌(右闭区间)
   * </pre>
   *
   * <code>STAGECLEAR_MAX_BRAND = 102;</code>
   */
  STAGECLEAR_MAX_BRAND(102),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NONE_PRICE = 0;</code>
   */
  public static final int NONE_PRICE_VALUE = 0;
  /**
   * <pre>
   *商店
   * </pre>
   *
   * <code>SHOPPING = 1;</code>
   */
  public static final int SHOPPING_VALUE = 1;
  /**
   * <pre>
   *免费兑换
   * </pre>
   *
   * <code>EXCHANGE = 2;</code>
   */
  public static final int EXCHANGE_VALUE = 2;
  /**
   * <pre>
   *结算翻牌的serverId
   * </pre>
   *
   * <code>STAGECLEAR_SERVER_ID = 100;</code>
   */
  public static final int STAGECLEAR_SERVER_ID_VALUE = 100;
  /**
   * <pre>
   *根据当天已翻牌次数的下限阈值决定结算翻牌的底牌(左闭区间)
   * </pre>
   *
   * <code>STAGECLEAR_MIN_BRAND = 101;</code>
   */
  public static final int STAGECLEAR_MIN_BRAND_VALUE = 101;
  /**
   * <pre>
   *根据当天已翻牌次数的上限阈值决定结算翻牌的底牌(右闭区间)
   * </pre>
   *
   * <code>STAGECLEAR_MAX_BRAND = 102;</code>
   */
  public static final int STAGECLEAR_MAX_BRAND_VALUE = 102;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EItemPriceType valueOf(int value) {
    return forNumber(value);
  }

  public static EItemPriceType forNumber(int value) {
    switch (value) {
      case 0: return NONE_PRICE;
      case 1: return SHOPPING;
      case 2: return EXCHANGE;
      case 100: return STAGECLEAR_SERVER_ID;
      case 101: return STAGECLEAR_MIN_BRAND;
      case 102: return STAGECLEAR_MAX_BRAND;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EItemPriceType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EItemPriceType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EItemPriceType>() {
          public EItemPriceType findValueByNumber(int number) {
            return EItemPriceType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.pearl.fcw.proto.enums.ApiProto.getDescriptor()
        .getEnumTypes().get(15);
  }

  private static final EItemPriceType[] VALUES = values();

  public static EItemPriceType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EItemPriceType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:fcw.proto.enums.type.EItemPriceType)
}

