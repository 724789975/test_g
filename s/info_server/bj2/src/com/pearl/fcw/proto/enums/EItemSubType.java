// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums/type.proto

package com.pearl.fcw.proto.enums;

/**
 * <pre>
 *系统物品子类型(对应SysItem的subType字段。type*1000+subType)
 * </pre>
 *
 * Protobuf enum {@code fcw.proto.enums.type.EItemSubType}
 */
public enum EItemSubType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ITEMSUBTYPE_NONE = 0;</code>
   */
  ITEMSUBTYPE_NONE(0),
  /**
   * <pre>
   *主武器
   * </pre>
   *
   * <code>WEAPON_MAIN = 1001;</code>
   */
  WEAPON_MAIN(1001),
  /**
   * <pre>
   *副武器
   * </pre>
   *
   * <code>WEAPON_SUB = 1002;</code>
   */
  WEAPON_SUB(1002),
  /**
   * <pre>
   *近战
   * </pre>
   *
   * <code>WEAPON_CLOSE = 1003;</code>
   */
  WEAPON_CLOSE(1003),
  /**
   * <pre>
   *特殊
   * </pre>
   *
   * <code>WEAPON_SPECIAL = 1004;</code>
   */
  WEAPON_SPECIAL(1004),
  /**
   * <pre>
   *套装
   * </pre>
   *
   * <code>CHARACTER_SUIT = 2001;</code>
   */
  CHARACTER_SUIT(2001),
  /**
   * <pre>
   *帽子
   * </pre>
   *
   * <code>PART_HAT = 3001;</code>
   */
  PART_HAT(3001),
  /**
   * <pre>
   *饰品
   * </pre>
   *
   * <code>PART_ADORNMENT = 3002;</code>
   */
  PART_ADORNMENT(3002),
  /**
   * <pre>
   *加成
   * </pre>
   *
   * <code>ITEM_ADDTION = 4001;</code>
   */
  ITEM_ADDTION(4001),
  /**
   * <pre>
   *卡片
   * </pre>
   *
   * <code>ITEM_CARD = 4002;</code>
   */
  ITEM_CARD(4002),
  /**
   * <pre>
   *喷灌
   * </pre>
   *
   * <code>ITEM_SPRAY = 4003;</code>
   */
  ITEM_SPRAY(4003),
  /**
   * <pre>
   *功能
   * </pre>
   *
   * <code>ITEM_FUNCTION = 4004;</code>
   */
  ITEM_FUNCTION(4004),
  /**
   * <pre>
   *非卖品
   * </pre>
   *
   * <code>ITEM_NOT_FOR_SALE = 4005;</code>
   */
  ITEM_NOT_FOR_SALE(4005),
  /**
   * <pre>
   *礼盒非卖品
   * </pre>
   *
   * <code>ITEM_BOX_NOT_FOR_SALE = 4006;</code>
   */
  ITEM_BOX_NOT_FOR_SALE(4006),
  /**
   * <pre>
   *消耗品
   * </pre>
   *
   * <code>ITEM_CONSUME = 4007;</code>
   */
  ITEM_CONSUME(4007),
  /**
   * <pre>
   *合成道具
   * </pre>
   *
   * <code>MATERIAL_MATERIAL = 5001;</code>
   */
  MATERIAL_MATERIAL(5001),
  /**
   * <pre>
   *蓝图
   * </pre>
   *
   * <code>MATERIAL_BLUE_PRINT = 5002;</code>
   */
  MATERIAL_BLUE_PRINT(5002),
  /**
   * <pre>
   *蓝图
   * </pre>
   *
   * <code>BLUEPRINT_1 = 6001;</code>
   */
  BLUEPRINT_1(6001),
  /**
   * <pre>
   *大礼包
   * </pre>
   *
   * <code>PACKAGE_1 = 7001;</code>
   */
  PACKAGE_1(7001),
  /**
   * <pre>
   *打开类
   * </pre>
   *
   * <code>OPEN_1 = 8001;</code>
   */
  OPEN_1(8001),
  /**
   * <pre>
   *城墙类
   * </pre>
   *
   * <code>BFR_WALL = 9001;</code>
   */
  BFR_WALL(9001),
  /**
   * <pre>
   *塔类
   * </pre>
   *
   * <code>BFR_TOWER = 9002;</code>
   */
  BFR_TOWER(9002),
  /**
   * <pre>
   *个人消耗
   * </pre>
   *
   * <code>BFR_PERSONAL_CONSUME = 9003;</code>
   */
  BFR_PERSONAL_CONSUME(9003),
  /**
   * <pre>
   *团队消耗
   * </pre>
   *
   * <code>BFR_TEAM_CONSUME = 9004;</code>
   */
  BFR_TEAM_CONSUME(9004),
  /**
   * <pre>
   *系统公共资源
   * </pre>
   *
   * <code>BFR_PUBLIC_RESOURCE = 9005;</code>
   */
  BFR_PUBLIC_RESOURCE(9005),
  /**
   * <pre>
   *个人技能
   * </pre>
   *
   * <code>BFR_PERSONAL_SKILL = 9006;</code>
   */
  BFR_PERSONAL_SKILL(9006),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ITEMSUBTYPE_NONE = 0;</code>
   */
  public static final int ITEMSUBTYPE_NONE_VALUE = 0;
  /**
   * <pre>
   *主武器
   * </pre>
   *
   * <code>WEAPON_MAIN = 1001;</code>
   */
  public static final int WEAPON_MAIN_VALUE = 1001;
  /**
   * <pre>
   *副武器
   * </pre>
   *
   * <code>WEAPON_SUB = 1002;</code>
   */
  public static final int WEAPON_SUB_VALUE = 1002;
  /**
   * <pre>
   *近战
   * </pre>
   *
   * <code>WEAPON_CLOSE = 1003;</code>
   */
  public static final int WEAPON_CLOSE_VALUE = 1003;
  /**
   * <pre>
   *特殊
   * </pre>
   *
   * <code>WEAPON_SPECIAL = 1004;</code>
   */
  public static final int WEAPON_SPECIAL_VALUE = 1004;
  /**
   * <pre>
   *套装
   * </pre>
   *
   * <code>CHARACTER_SUIT = 2001;</code>
   */
  public static final int CHARACTER_SUIT_VALUE = 2001;
  /**
   * <pre>
   *帽子
   * </pre>
   *
   * <code>PART_HAT = 3001;</code>
   */
  public static final int PART_HAT_VALUE = 3001;
  /**
   * <pre>
   *饰品
   * </pre>
   *
   * <code>PART_ADORNMENT = 3002;</code>
   */
  public static final int PART_ADORNMENT_VALUE = 3002;
  /**
   * <pre>
   *加成
   * </pre>
   *
   * <code>ITEM_ADDTION = 4001;</code>
   */
  public static final int ITEM_ADDTION_VALUE = 4001;
  /**
   * <pre>
   *卡片
   * </pre>
   *
   * <code>ITEM_CARD = 4002;</code>
   */
  public static final int ITEM_CARD_VALUE = 4002;
  /**
   * <pre>
   *喷灌
   * </pre>
   *
   * <code>ITEM_SPRAY = 4003;</code>
   */
  public static final int ITEM_SPRAY_VALUE = 4003;
  /**
   * <pre>
   *功能
   * </pre>
   *
   * <code>ITEM_FUNCTION = 4004;</code>
   */
  public static final int ITEM_FUNCTION_VALUE = 4004;
  /**
   * <pre>
   *非卖品
   * </pre>
   *
   * <code>ITEM_NOT_FOR_SALE = 4005;</code>
   */
  public static final int ITEM_NOT_FOR_SALE_VALUE = 4005;
  /**
   * <pre>
   *礼盒非卖品
   * </pre>
   *
   * <code>ITEM_BOX_NOT_FOR_SALE = 4006;</code>
   */
  public static final int ITEM_BOX_NOT_FOR_SALE_VALUE = 4006;
  /**
   * <pre>
   *消耗品
   * </pre>
   *
   * <code>ITEM_CONSUME = 4007;</code>
   */
  public static final int ITEM_CONSUME_VALUE = 4007;
  /**
   * <pre>
   *合成道具
   * </pre>
   *
   * <code>MATERIAL_MATERIAL = 5001;</code>
   */
  public static final int MATERIAL_MATERIAL_VALUE = 5001;
  /**
   * <pre>
   *蓝图
   * </pre>
   *
   * <code>MATERIAL_BLUE_PRINT = 5002;</code>
   */
  public static final int MATERIAL_BLUE_PRINT_VALUE = 5002;
  /**
   * <pre>
   *蓝图
   * </pre>
   *
   * <code>BLUEPRINT_1 = 6001;</code>
   */
  public static final int BLUEPRINT_1_VALUE = 6001;
  /**
   * <pre>
   *大礼包
   * </pre>
   *
   * <code>PACKAGE_1 = 7001;</code>
   */
  public static final int PACKAGE_1_VALUE = 7001;
  /**
   * <pre>
   *打开类
   * </pre>
   *
   * <code>OPEN_1 = 8001;</code>
   */
  public static final int OPEN_1_VALUE = 8001;
  /**
   * <pre>
   *城墙类
   * </pre>
   *
   * <code>BFR_WALL = 9001;</code>
   */
  public static final int BFR_WALL_VALUE = 9001;
  /**
   * <pre>
   *塔类
   * </pre>
   *
   * <code>BFR_TOWER = 9002;</code>
   */
  public static final int BFR_TOWER_VALUE = 9002;
  /**
   * <pre>
   *个人消耗
   * </pre>
   *
   * <code>BFR_PERSONAL_CONSUME = 9003;</code>
   */
  public static final int BFR_PERSONAL_CONSUME_VALUE = 9003;
  /**
   * <pre>
   *团队消耗
   * </pre>
   *
   * <code>BFR_TEAM_CONSUME = 9004;</code>
   */
  public static final int BFR_TEAM_CONSUME_VALUE = 9004;
  /**
   * <pre>
   *系统公共资源
   * </pre>
   *
   * <code>BFR_PUBLIC_RESOURCE = 9005;</code>
   */
  public static final int BFR_PUBLIC_RESOURCE_VALUE = 9005;
  /**
   * <pre>
   *个人技能
   * </pre>
   *
   * <code>BFR_PERSONAL_SKILL = 9006;</code>
   */
  public static final int BFR_PERSONAL_SKILL_VALUE = 9006;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EItemSubType valueOf(int value) {
    return forNumber(value);
  }

  public static EItemSubType forNumber(int value) {
    switch (value) {
      case 0: return ITEMSUBTYPE_NONE;
      case 1001: return WEAPON_MAIN;
      case 1002: return WEAPON_SUB;
      case 1003: return WEAPON_CLOSE;
      case 1004: return WEAPON_SPECIAL;
      case 2001: return CHARACTER_SUIT;
      case 3001: return PART_HAT;
      case 3002: return PART_ADORNMENT;
      case 4001: return ITEM_ADDTION;
      case 4002: return ITEM_CARD;
      case 4003: return ITEM_SPRAY;
      case 4004: return ITEM_FUNCTION;
      case 4005: return ITEM_NOT_FOR_SALE;
      case 4006: return ITEM_BOX_NOT_FOR_SALE;
      case 4007: return ITEM_CONSUME;
      case 5001: return MATERIAL_MATERIAL;
      case 5002: return MATERIAL_BLUE_PRINT;
      case 6001: return BLUEPRINT_1;
      case 7001: return PACKAGE_1;
      case 8001: return OPEN_1;
      case 9001: return BFR_WALL;
      case 9002: return BFR_TOWER;
      case 9003: return BFR_PERSONAL_CONSUME;
      case 9004: return BFR_TEAM_CONSUME;
      case 9005: return BFR_PUBLIC_RESOURCE;
      case 9006: return BFR_PERSONAL_SKILL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EItemSubType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EItemSubType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EItemSubType>() {
          public EItemSubType findValueByNumber(int number) {
            return EItemSubType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.pearl.fcw.proto.enums.ApiProto.getDescriptor()
        .getEnumTypes().get(17);
  }

  private static final EItemSubType[] VALUES = values();

  public static EItemSubType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EItemSubType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:fcw.proto.enums.type.EItemSubType)
}

