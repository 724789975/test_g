// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums/type.proto

package com.pearl.fcw.proto.enums;

/**
 * <pre>
 *系统道具的颜色(对应sysItem和playerItem的color)
 * </pre>
 *
 * Protobuf enum {@code fcw.proto.enums.type.EItemColor}
 */
public enum EItemColor
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *透明
   * </pre>
   *
   * <code>TRANSPARENT = 0;</code>
   */
  TRANSPARENT(0),
  /**
   * <pre>
   *红
   * </pre>
   *
   * <code>RED = 1;</code>
   */
  RED(1),
  /**
   * <pre>
   *紫
   * </pre>
   *
   * <code>PURPLE = 2;</code>
   */
  PURPLE(2),
  /**
   * <pre>
   *蓝
   * </pre>
   *
   * <code>BLUE = 3;</code>
   */
  BLUE(3),
  /**
   * <pre>
   *绿
   * </pre>
   *
   * <code>GREEND = 4;</code>
   */
  GREEND(4),
  /**
   * <pre>
   *橙
   * </pre>
   *
   * <code>ORANGE = 5;</code>
   */
  ORANGE(5),
  /**
   * <pre>
   *彩虹
   * </pre>
   *
   * <code>COLORFUL = 6;</code>
   */
  COLORFUL(6),
  /**
   * <pre>
   *金
   * </pre>
   *
   * <code>GOLD = 7;</code>
   */
  GOLD(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   *透明
   * </pre>
   *
   * <code>TRANSPARENT = 0;</code>
   */
  public static final int TRANSPARENT_VALUE = 0;
  /**
   * <pre>
   *红
   * </pre>
   *
   * <code>RED = 1;</code>
   */
  public static final int RED_VALUE = 1;
  /**
   * <pre>
   *紫
   * </pre>
   *
   * <code>PURPLE = 2;</code>
   */
  public static final int PURPLE_VALUE = 2;
  /**
   * <pre>
   *蓝
   * </pre>
   *
   * <code>BLUE = 3;</code>
   */
  public static final int BLUE_VALUE = 3;
  /**
   * <pre>
   *绿
   * </pre>
   *
   * <code>GREEND = 4;</code>
   */
  public static final int GREEND_VALUE = 4;
  /**
   * <pre>
   *橙
   * </pre>
   *
   * <code>ORANGE = 5;</code>
   */
  public static final int ORANGE_VALUE = 5;
  /**
   * <pre>
   *彩虹
   * </pre>
   *
   * <code>COLORFUL = 6;</code>
   */
  public static final int COLORFUL_VALUE = 6;
  /**
   * <pre>
   *金
   * </pre>
   *
   * <code>GOLD = 7;</code>
   */
  public static final int GOLD_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EItemColor valueOf(int value) {
    return forNumber(value);
  }

  public static EItemColor forNumber(int value) {
    switch (value) {
      case 0: return TRANSPARENT;
      case 1: return RED;
      case 2: return PURPLE;
      case 3: return BLUE;
      case 4: return GREEND;
      case 5: return ORANGE;
      case 6: return COLORFUL;
      case 7: return GOLD;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EItemColor>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EItemColor> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EItemColor>() {
          public EItemColor findValueByNumber(int number) {
            return EItemColor.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.pearl.fcw.proto.enums.ApiProto.getDescriptor()
        .getEnumTypes().get(20);
  }

  private static final EItemColor[] VALUES = values();

  public static EItemColor valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EItemColor(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:fcw.proto.enums.type.EItemColor)
}

