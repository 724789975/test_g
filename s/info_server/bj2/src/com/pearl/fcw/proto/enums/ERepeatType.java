// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums/type.proto

package com.pearl.fcw.proto.enums;

/**
 * <pre>
 *重复类型
 * </pre>
 *
 * Protobuf enum {@code fcw.proto.enums.type.ERepeatType}
 */
public enum ERepeatType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *只有一次
   * </pre>
   *
   * <code>ONCE = 0;</code>
   */
  ONCE(0),
  /**
   * <pre>
   *每天
   * </pre>
   *
   * <code>EVERY_DAY = 1;</code>
   */
  EVERY_DAY(1),
  /**
   * <pre>
   *每周
   * </pre>
   *
   * <code>EVERY_WEEK = 2;</code>
   */
  EVERY_WEEK(2),
  /**
   * <pre>
   *每月
   * </pre>
   *
   * <code>EVERY_MONTH = 3;</code>
   */
  EVERY_MONTH(3),
  /**
   * <pre>
   *指定日期
   * </pre>
   *
   * <code>DESIGNATED_DAY = 4;</code>
   */
  DESIGNATED_DAY(4),
  /**
   * <pre>
   *每周的某一天(周日对应参数1，周一对应2)
   * </pre>
   *
   * <code>DAY_OF_WEEK = 5;</code>
   */
  DAY_OF_WEEK(5),
  /**
   * <pre>
   *每月的某一天（1-31）
   * </pre>
   *
   * <code>DAY_OF_MONTH = 6;</code>
   */
  DAY_OF_MONTH(6),
  /**
   * <pre>
   *无限重复
   * </pre>
   *
   * <code>AWAYS = 7;</code>
   */
  AWAYS(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   *只有一次
   * </pre>
   *
   * <code>ONCE = 0;</code>
   */
  public static final int ONCE_VALUE = 0;
  /**
   * <pre>
   *每天
   * </pre>
   *
   * <code>EVERY_DAY = 1;</code>
   */
  public static final int EVERY_DAY_VALUE = 1;
  /**
   * <pre>
   *每周
   * </pre>
   *
   * <code>EVERY_WEEK = 2;</code>
   */
  public static final int EVERY_WEEK_VALUE = 2;
  /**
   * <pre>
   *每月
   * </pre>
   *
   * <code>EVERY_MONTH = 3;</code>
   */
  public static final int EVERY_MONTH_VALUE = 3;
  /**
   * <pre>
   *指定日期
   * </pre>
   *
   * <code>DESIGNATED_DAY = 4;</code>
   */
  public static final int DESIGNATED_DAY_VALUE = 4;
  /**
   * <pre>
   *每周的某一天(周日对应参数1，周一对应2)
   * </pre>
   *
   * <code>DAY_OF_WEEK = 5;</code>
   */
  public static final int DAY_OF_WEEK_VALUE = 5;
  /**
   * <pre>
   *每月的某一天（1-31）
   * </pre>
   *
   * <code>DAY_OF_MONTH = 6;</code>
   */
  public static final int DAY_OF_MONTH_VALUE = 6;
  /**
   * <pre>
   *无限重复
   * </pre>
   *
   * <code>AWAYS = 7;</code>
   */
  public static final int AWAYS_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ERepeatType valueOf(int value) {
    return forNumber(value);
  }

  public static ERepeatType forNumber(int value) {
    switch (value) {
      case 0: return ONCE;
      case 1: return EVERY_DAY;
      case 2: return EVERY_WEEK;
      case 3: return EVERY_MONTH;
      case 4: return DESIGNATED_DAY;
      case 5: return DAY_OF_WEEK;
      case 6: return DAY_OF_MONTH;
      case 7: return AWAYS;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ERepeatType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ERepeatType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ERepeatType>() {
          public ERepeatType findValueByNumber(int number) {
            return ERepeatType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.pearl.fcw.proto.enums.ApiProto.getDescriptor()
        .getEnumTypes().get(29);
  }

  private static final ERepeatType[] VALUES = values();

  public static ERepeatType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ERepeatType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:fcw.proto.enums.type.ERepeatType)
}

