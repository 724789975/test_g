// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package com.pearl.fcw.proto.rpc;

/**
 * Protobuf type {@code fcw.proto.server.ResponseFinishGuide}
 */
public  final class ResponseFinishGuide extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:fcw.proto.server.ResponseFinishGuide)
    ResponseFinishGuideOrBuilder {
  // Use ResponseFinishGuide.newBuilder() to construct.
  private ResponseFinishGuide(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ResponseFinishGuide() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ResponseFinishGuide(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder subBuilder = null;
            if (playerAchievement_ != null) {
              subBuilder = playerAchievement_.toBuilder();
            }
            playerAchievement_ = input.readMessage(com.pearl.fcw.proto.model.ProtoPlayerAchievement.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(playerAchievement_);
              playerAchievement_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.pearl.fcw.proto.model.ProtoSysAchievement.Builder subBuilder = null;
            if (nextSysAchievement_ != null) {
              subBuilder = nextSysAchievement_.toBuilder();
            }
            nextSysAchievement_ = input.readMessage(com.pearl.fcw.proto.model.ProtoSysAchievement.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(nextSysAchievement_);
              nextSysAchievement_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseFinishGuide_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseFinishGuide_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.pearl.fcw.proto.rpc.ResponseFinishGuide.class, com.pearl.fcw.proto.rpc.ResponseFinishGuide.Builder.class);
  }

  public static final int PLAYERACHIEVEMENT_FIELD_NUMBER = 1;
  private com.pearl.fcw.proto.model.ProtoPlayerAchievement playerAchievement_;
  /**
   * <pre>
   *玩家当前已开启但是未完成的玩家成就
   * </pre>
   *
   * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
   */
  public boolean hasPlayerAchievement() {
    return playerAchievement_ != null;
  }
  /**
   * <pre>
   *玩家当前已开启但是未完成的玩家成就
   * </pre>
   *
   * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
   */
  public com.pearl.fcw.proto.model.ProtoPlayerAchievement getPlayerAchievement() {
    return playerAchievement_ == null ? com.pearl.fcw.proto.model.ProtoPlayerAchievement.getDefaultInstance() : playerAchievement_;
  }
  /**
   * <pre>
   *玩家当前已开启但是未完成的玩家成就
   * </pre>
   *
   * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
   */
  public com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder getPlayerAchievementOrBuilder() {
    return getPlayerAchievement();
  }

  public static final int NEXTSYSACHIEVEMENT_FIELD_NUMBER = 2;
  private com.pearl.fcw.proto.model.ProtoSysAchievement nextSysAchievement_;
  /**
   * <pre>
   *对应的系统成就	
   * </pre>
   *
   * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
   */
  public boolean hasNextSysAchievement() {
    return nextSysAchievement_ != null;
  }
  /**
   * <pre>
   *对应的系统成就	
   * </pre>
   *
   * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
   */
  public com.pearl.fcw.proto.model.ProtoSysAchievement getNextSysAchievement() {
    return nextSysAchievement_ == null ? com.pearl.fcw.proto.model.ProtoSysAchievement.getDefaultInstance() : nextSysAchievement_;
  }
  /**
   * <pre>
   *对应的系统成就	
   * </pre>
   *
   * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
   */
  public com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder getNextSysAchievementOrBuilder() {
    return getNextSysAchievement();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (playerAchievement_ != null) {
      output.writeMessage(1, getPlayerAchievement());
    }
    if (nextSysAchievement_ != null) {
      output.writeMessage(2, getNextSysAchievement());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (playerAchievement_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPlayerAchievement());
    }
    if (nextSysAchievement_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getNextSysAchievement());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.pearl.fcw.proto.rpc.ResponseFinishGuide)) {
      return super.equals(obj);
    }
    com.pearl.fcw.proto.rpc.ResponseFinishGuide other = (com.pearl.fcw.proto.rpc.ResponseFinishGuide) obj;

    boolean result = true;
    result = result && (hasPlayerAchievement() == other.hasPlayerAchievement());
    if (hasPlayerAchievement()) {
      result = result && getPlayerAchievement()
          .equals(other.getPlayerAchievement());
    }
    result = result && (hasNextSysAchievement() == other.hasNextSysAchievement());
    if (hasNextSysAchievement()) {
      result = result && getNextSysAchievement()
          .equals(other.getNextSysAchievement());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasPlayerAchievement()) {
      hash = (37 * hash) + PLAYERACHIEVEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerAchievement().hashCode();
    }
    if (hasNextSysAchievement()) {
      hash = (37 * hash) + NEXTSYSACHIEVEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getNextSysAchievement().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.pearl.fcw.proto.rpc.ResponseFinishGuide prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code fcw.proto.server.ResponseFinishGuide}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fcw.proto.server.ResponseFinishGuide)
      com.pearl.fcw.proto.rpc.ResponseFinishGuideOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseFinishGuide_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseFinishGuide_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pearl.fcw.proto.rpc.ResponseFinishGuide.class, com.pearl.fcw.proto.rpc.ResponseFinishGuide.Builder.class);
    }

    // Construct using com.pearl.fcw.proto.rpc.ResponseFinishGuide.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (playerAchievementBuilder_ == null) {
        playerAchievement_ = null;
      } else {
        playerAchievement_ = null;
        playerAchievementBuilder_ = null;
      }
      if (nextSysAchievementBuilder_ == null) {
        nextSysAchievement_ = null;
      } else {
        nextSysAchievement_ = null;
        nextSysAchievementBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseFinishGuide_descriptor;
    }

    public com.pearl.fcw.proto.rpc.ResponseFinishGuide getDefaultInstanceForType() {
      return com.pearl.fcw.proto.rpc.ResponseFinishGuide.getDefaultInstance();
    }

    public com.pearl.fcw.proto.rpc.ResponseFinishGuide build() {
      com.pearl.fcw.proto.rpc.ResponseFinishGuide result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.pearl.fcw.proto.rpc.ResponseFinishGuide buildPartial() {
      com.pearl.fcw.proto.rpc.ResponseFinishGuide result = new com.pearl.fcw.proto.rpc.ResponseFinishGuide(this);
      if (playerAchievementBuilder_ == null) {
        result.playerAchievement_ = playerAchievement_;
      } else {
        result.playerAchievement_ = playerAchievementBuilder_.build();
      }
      if (nextSysAchievementBuilder_ == null) {
        result.nextSysAchievement_ = nextSysAchievement_;
      } else {
        result.nextSysAchievement_ = nextSysAchievementBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.pearl.fcw.proto.rpc.ResponseFinishGuide) {
        return mergeFrom((com.pearl.fcw.proto.rpc.ResponseFinishGuide)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.pearl.fcw.proto.rpc.ResponseFinishGuide other) {
      if (other == com.pearl.fcw.proto.rpc.ResponseFinishGuide.getDefaultInstance()) return this;
      if (other.hasPlayerAchievement()) {
        mergePlayerAchievement(other.getPlayerAchievement());
      }
      if (other.hasNextSysAchievement()) {
        mergeNextSysAchievement(other.getNextSysAchievement());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.pearl.fcw.proto.rpc.ResponseFinishGuide parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.pearl.fcw.proto.rpc.ResponseFinishGuide) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.pearl.fcw.proto.model.ProtoPlayerAchievement playerAchievement_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.pearl.fcw.proto.model.ProtoPlayerAchievement, com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder, com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder> playerAchievementBuilder_;
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public boolean hasPlayerAchievement() {
      return playerAchievementBuilder_ != null || playerAchievement_ != null;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public com.pearl.fcw.proto.model.ProtoPlayerAchievement getPlayerAchievement() {
      if (playerAchievementBuilder_ == null) {
        return playerAchievement_ == null ? com.pearl.fcw.proto.model.ProtoPlayerAchievement.getDefaultInstance() : playerAchievement_;
      } else {
        return playerAchievementBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder setPlayerAchievement(com.pearl.fcw.proto.model.ProtoPlayerAchievement value) {
      if (playerAchievementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        playerAchievement_ = value;
        onChanged();
      } else {
        playerAchievementBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder setPlayerAchievement(
        com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder builderForValue) {
      if (playerAchievementBuilder_ == null) {
        playerAchievement_ = builderForValue.build();
        onChanged();
      } else {
        playerAchievementBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder mergePlayerAchievement(com.pearl.fcw.proto.model.ProtoPlayerAchievement value) {
      if (playerAchievementBuilder_ == null) {
        if (playerAchievement_ != null) {
          playerAchievement_ =
            com.pearl.fcw.proto.model.ProtoPlayerAchievement.newBuilder(playerAchievement_).mergeFrom(value).buildPartial();
        } else {
          playerAchievement_ = value;
        }
        onChanged();
      } else {
        playerAchievementBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder clearPlayerAchievement() {
      if (playerAchievementBuilder_ == null) {
        playerAchievement_ = null;
        onChanged();
      } else {
        playerAchievement_ = null;
        playerAchievementBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder getPlayerAchievementBuilder() {
      
      onChanged();
      return getPlayerAchievementFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder getPlayerAchievementOrBuilder() {
      if (playerAchievementBuilder_ != null) {
        return playerAchievementBuilder_.getMessageOrBuilder();
      } else {
        return playerAchievement_ == null ?
            com.pearl.fcw.proto.model.ProtoPlayerAchievement.getDefaultInstance() : playerAchievement_;
      }
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.pearl.fcw.proto.model.ProtoPlayerAchievement, com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder, com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder> 
        getPlayerAchievementFieldBuilder() {
      if (playerAchievementBuilder_ == null) {
        playerAchievementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.pearl.fcw.proto.model.ProtoPlayerAchievement, com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder, com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder>(
                getPlayerAchievement(),
                getParentForChildren(),
                isClean());
        playerAchievement_ = null;
      }
      return playerAchievementBuilder_;
    }

    private com.pearl.fcw.proto.model.ProtoSysAchievement nextSysAchievement_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.pearl.fcw.proto.model.ProtoSysAchievement, com.pearl.fcw.proto.model.ProtoSysAchievement.Builder, com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder> nextSysAchievementBuilder_;
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public boolean hasNextSysAchievement() {
      return nextSysAchievementBuilder_ != null || nextSysAchievement_ != null;
    }
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public com.pearl.fcw.proto.model.ProtoSysAchievement getNextSysAchievement() {
      if (nextSysAchievementBuilder_ == null) {
        return nextSysAchievement_ == null ? com.pearl.fcw.proto.model.ProtoSysAchievement.getDefaultInstance() : nextSysAchievement_;
      } else {
        return nextSysAchievementBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder setNextSysAchievement(com.pearl.fcw.proto.model.ProtoSysAchievement value) {
      if (nextSysAchievementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nextSysAchievement_ = value;
        onChanged();
      } else {
        nextSysAchievementBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder setNextSysAchievement(
        com.pearl.fcw.proto.model.ProtoSysAchievement.Builder builderForValue) {
      if (nextSysAchievementBuilder_ == null) {
        nextSysAchievement_ = builderForValue.build();
        onChanged();
      } else {
        nextSysAchievementBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder mergeNextSysAchievement(com.pearl.fcw.proto.model.ProtoSysAchievement value) {
      if (nextSysAchievementBuilder_ == null) {
        if (nextSysAchievement_ != null) {
          nextSysAchievement_ =
            com.pearl.fcw.proto.model.ProtoSysAchievement.newBuilder(nextSysAchievement_).mergeFrom(value).buildPartial();
        } else {
          nextSysAchievement_ = value;
        }
        onChanged();
      } else {
        nextSysAchievementBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder clearNextSysAchievement() {
      if (nextSysAchievementBuilder_ == null) {
        nextSysAchievement_ = null;
        onChanged();
      } else {
        nextSysAchievement_ = null;
        nextSysAchievementBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public com.pearl.fcw.proto.model.ProtoSysAchievement.Builder getNextSysAchievementBuilder() {
      
      onChanged();
      return getNextSysAchievementFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder getNextSysAchievementOrBuilder() {
      if (nextSysAchievementBuilder_ != null) {
        return nextSysAchievementBuilder_.getMessageOrBuilder();
      } else {
        return nextSysAchievement_ == null ?
            com.pearl.fcw.proto.model.ProtoSysAchievement.getDefaultInstance() : nextSysAchievement_;
      }
    }
    /**
     * <pre>
     *对应的系统成就	
     * </pre>
     *
     * <code>optional .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.pearl.fcw.proto.model.ProtoSysAchievement, com.pearl.fcw.proto.model.ProtoSysAchievement.Builder, com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder> 
        getNextSysAchievementFieldBuilder() {
      if (nextSysAchievementBuilder_ == null) {
        nextSysAchievementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.pearl.fcw.proto.model.ProtoSysAchievement, com.pearl.fcw.proto.model.ProtoSysAchievement.Builder, com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder>(
                getNextSysAchievement(),
                getParentForChildren(),
                isClean());
        nextSysAchievement_ = null;
      }
      return nextSysAchievementBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:fcw.proto.server.ResponseFinishGuide)
  }

  // @@protoc_insertion_point(class_scope:fcw.proto.server.ResponseFinishGuide)
  private static final com.pearl.fcw.proto.rpc.ResponseFinishGuide DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.pearl.fcw.proto.rpc.ResponseFinishGuide();
  }

  public static com.pearl.fcw.proto.rpc.ResponseFinishGuide getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResponseFinishGuide>
      PARSER = new com.google.protobuf.AbstractParser<ResponseFinishGuide>() {
    public ResponseFinishGuide parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResponseFinishGuide(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResponseFinishGuide> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResponseFinishGuide> getParserForType() {
    return PARSER;
  }

  public com.pearl.fcw.proto.rpc.ResponseFinishGuide getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

