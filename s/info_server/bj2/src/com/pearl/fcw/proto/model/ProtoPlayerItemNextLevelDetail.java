// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

package com.pearl.fcw.proto.model;

/**
 * Protobuf type {@code fcw.proto.model.ProtoPlayerItemNextLevelDetail}
 */
public  final class ProtoPlayerItemNextLevelDetail extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:fcw.proto.model.ProtoPlayerItemNextLevelDetail)
    ProtoPlayerItemNextLevelDetailOrBuilder {
  // Use ProtoPlayerItemNextLevelDetail.newBuilder() to construct.
  private ProtoPlayerItemNextLevelDetail(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ProtoPlayerItemNextLevelDetail() {
    damage_ = 0F;
    damageAdd_ = 0F;
    speed_ = 0F;
    speedAdd_ = 0F;
    durable_ = 0F;
    star_ = 0;
    level_ = 0;
    cResistanceFire_ = 0F;
    cResistanceBlast_ = 0F;
    cResistanceBullet_ = 0F;
    cResistanceKnife_ = 0F;
    holesNum_ = 0;
    color_ = 0;
    cBloodAddAdd_ = 0F;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ProtoPlayerItemNextLevelDetail(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 13: {

            damage_ = input.readFloat();
            break;
          }
          case 21: {

            damageAdd_ = input.readFloat();
            break;
          }
          case 85: {

            speed_ = input.readFloat();
            break;
          }
          case 93: {

            speedAdd_ = input.readFloat();
            break;
          }
          case 165: {

            durable_ = input.readFloat();
            break;
          }
          case 240: {

            star_ = input.readSInt32();
            break;
          }
          case 320: {

            level_ = input.readSInt32();
            break;
          }
          case 405: {

            cResistanceFire_ = input.readFloat();
            break;
          }
          case 485: {

            cResistanceBlast_ = input.readFloat();
            break;
          }
          case 565: {

            cResistanceBullet_ = input.readFloat();
            break;
          }
          case 645: {

            cResistanceKnife_ = input.readFloat();
            break;
          }
          case 720: {

            holesNum_ = input.readSInt32();
            break;
          }
          case 800: {

            color_ = input.readSInt32();
            break;
          }
          case 885: {

            cBloodAddAdd_ = input.readFloat();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerItemNextLevelDetail_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerItemNextLevelDetail_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail.class, com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail.Builder.class);
  }

  public static final int DAMAGE_FIELD_NUMBER = 1;
  private float damage_;
  /**
   * <pre>
   *系统道具威力
   * </pre>
   *
   * <code>optional float damage = 1;</code>
   */
  public float getDamage() {
    return damage_;
  }

  public static final int DAMAGEADD_FIELD_NUMBER = 2;
  private float damageAdd_;
  /**
   * <pre>
   *下一级玩家道具比当前级别的系统道具增加的威力
   * </pre>
   *
   * <code>optional float damageAdd = 2;</code>
   */
  public float getDamageAdd() {
    return damageAdd_;
  }

  public static final int SPEED_FIELD_NUMBER = 10;
  private float speed_;
  /**
   * <pre>
   *系统道具射速
   * </pre>
   *
   * <code>optional float speed = 10;</code>
   */
  public float getSpeed() {
    return speed_;
  }

  public static final int SPEEDADD_FIELD_NUMBER = 11;
  private float speedAdd_;
  /**
   * <code>optional float speedAdd = 11;</code>
   */
  public float getSpeedAdd() {
    return speedAdd_;
  }

  public static final int DURABLE_FIELD_NUMBER = 20;
  private float durable_;
  /**
   * <code>optional float durable = 20;</code>
   */
  public float getDurable() {
    return durable_;
  }

  public static final int STAR_FIELD_NUMBER = 30;
  private int star_;
  /**
   * <code>optional sint32 star = 30;</code>
   */
  public int getStar() {
    return star_;
  }

  public static final int LEVEL_FIELD_NUMBER = 40;
  private int level_;
  /**
   * <code>optional sint32 level = 40;</code>
   */
  public int getLevel() {
    return level_;
  }

  public static final int CRESISTANCEFIRE_FIELD_NUMBER = 50;
  private float cResistanceFire_;
  /**
   * <code>optional float cResistanceFire = 50;</code>
   */
  public float getCResistanceFire() {
    return cResistanceFire_;
  }

  public static final int CRESISTANCEBLAST_FIELD_NUMBER = 60;
  private float cResistanceBlast_;
  /**
   * <code>optional float cResistanceBlast = 60;</code>
   */
  public float getCResistanceBlast() {
    return cResistanceBlast_;
  }

  public static final int CRESISTANCEBULLET_FIELD_NUMBER = 70;
  private float cResistanceBullet_;
  /**
   * <code>optional float cResistanceBullet = 70;</code>
   */
  public float getCResistanceBullet() {
    return cResistanceBullet_;
  }

  public static final int CRESISTANCEKNIFE_FIELD_NUMBER = 80;
  private float cResistanceKnife_;
  /**
   * <code>optional float cResistanceKnife = 80;</code>
   */
  public float getCResistanceKnife() {
    return cResistanceKnife_;
  }

  public static final int HOLESNUM_FIELD_NUMBER = 90;
  private int holesNum_;
  /**
   * <code>optional sint32 holesNum = 90;</code>
   */
  public int getHolesNum() {
    return holesNum_;
  }

  public static final int COLOR_FIELD_NUMBER = 100;
  private int color_;
  /**
   * <code>optional sint32 color = 100;</code>
   */
  public int getColor() {
    return color_;
  }

  public static final int CBLOODADDADD_FIELD_NUMBER = 110;
  private float cBloodAddAdd_;
  /**
   * <code>optional float cBloodAddAdd = 110;</code>
   */
  public float getCBloodAddAdd() {
    return cBloodAddAdd_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (damage_ != 0F) {
      output.writeFloat(1, damage_);
    }
    if (damageAdd_ != 0F) {
      output.writeFloat(2, damageAdd_);
    }
    if (speed_ != 0F) {
      output.writeFloat(10, speed_);
    }
    if (speedAdd_ != 0F) {
      output.writeFloat(11, speedAdd_);
    }
    if (durable_ != 0F) {
      output.writeFloat(20, durable_);
    }
    if (star_ != 0) {
      output.writeSInt32(30, star_);
    }
    if (level_ != 0) {
      output.writeSInt32(40, level_);
    }
    if (cResistanceFire_ != 0F) {
      output.writeFloat(50, cResistanceFire_);
    }
    if (cResistanceBlast_ != 0F) {
      output.writeFloat(60, cResistanceBlast_);
    }
    if (cResistanceBullet_ != 0F) {
      output.writeFloat(70, cResistanceBullet_);
    }
    if (cResistanceKnife_ != 0F) {
      output.writeFloat(80, cResistanceKnife_);
    }
    if (holesNum_ != 0) {
      output.writeSInt32(90, holesNum_);
    }
    if (color_ != 0) {
      output.writeSInt32(100, color_);
    }
    if (cBloodAddAdd_ != 0F) {
      output.writeFloat(110, cBloodAddAdd_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (damage_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, damage_);
    }
    if (damageAdd_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, damageAdd_);
    }
    if (speed_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(10, speed_);
    }
    if (speedAdd_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(11, speedAdd_);
    }
    if (durable_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(20, durable_);
    }
    if (star_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(30, star_);
    }
    if (level_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(40, level_);
    }
    if (cResistanceFire_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(50, cResistanceFire_);
    }
    if (cResistanceBlast_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(60, cResistanceBlast_);
    }
    if (cResistanceBullet_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(70, cResistanceBullet_);
    }
    if (cResistanceKnife_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(80, cResistanceKnife_);
    }
    if (holesNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(90, holesNum_);
    }
    if (color_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(100, color_);
    }
    if (cBloodAddAdd_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(110, cBloodAddAdd_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail)) {
      return super.equals(obj);
    }
    com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail other = (com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail) obj;

    boolean result = true;
    result = result && (
        java.lang.Float.floatToIntBits(getDamage())
        == java.lang.Float.floatToIntBits(
            other.getDamage()));
    result = result && (
        java.lang.Float.floatToIntBits(getDamageAdd())
        == java.lang.Float.floatToIntBits(
            other.getDamageAdd()));
    result = result && (
        java.lang.Float.floatToIntBits(getSpeed())
        == java.lang.Float.floatToIntBits(
            other.getSpeed()));
    result = result && (
        java.lang.Float.floatToIntBits(getSpeedAdd())
        == java.lang.Float.floatToIntBits(
            other.getSpeedAdd()));
    result = result && (
        java.lang.Float.floatToIntBits(getDurable())
        == java.lang.Float.floatToIntBits(
            other.getDurable()));
    result = result && (getStar()
        == other.getStar());
    result = result && (getLevel()
        == other.getLevel());
    result = result && (
        java.lang.Float.floatToIntBits(getCResistanceFire())
        == java.lang.Float.floatToIntBits(
            other.getCResistanceFire()));
    result = result && (
        java.lang.Float.floatToIntBits(getCResistanceBlast())
        == java.lang.Float.floatToIntBits(
            other.getCResistanceBlast()));
    result = result && (
        java.lang.Float.floatToIntBits(getCResistanceBullet())
        == java.lang.Float.floatToIntBits(
            other.getCResistanceBullet()));
    result = result && (
        java.lang.Float.floatToIntBits(getCResistanceKnife())
        == java.lang.Float.floatToIntBits(
            other.getCResistanceKnife()));
    result = result && (getHolesNum()
        == other.getHolesNum());
    result = result && (getColor()
        == other.getColor());
    result = result && (
        java.lang.Float.floatToIntBits(getCBloodAddAdd())
        == java.lang.Float.floatToIntBits(
            other.getCBloodAddAdd()));
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + DAMAGE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDamage());
    hash = (37 * hash) + DAMAGEADD_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDamageAdd());
    hash = (37 * hash) + SPEED_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getSpeed());
    hash = (37 * hash) + SPEEDADD_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getSpeedAdd());
    hash = (37 * hash) + DURABLE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDurable());
    hash = (37 * hash) + STAR_FIELD_NUMBER;
    hash = (53 * hash) + getStar();
    hash = (37 * hash) + LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getLevel();
    hash = (37 * hash) + CRESISTANCEFIRE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getCResistanceFire());
    hash = (37 * hash) + CRESISTANCEBLAST_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getCResistanceBlast());
    hash = (37 * hash) + CRESISTANCEBULLET_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getCResistanceBullet());
    hash = (37 * hash) + CRESISTANCEKNIFE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getCResistanceKnife());
    hash = (37 * hash) + HOLESNUM_FIELD_NUMBER;
    hash = (53 * hash) + getHolesNum();
    hash = (37 * hash) + COLOR_FIELD_NUMBER;
    hash = (53 * hash) + getColor();
    hash = (37 * hash) + CBLOODADDADD_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getCBloodAddAdd());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code fcw.proto.model.ProtoPlayerItemNextLevelDetail}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fcw.proto.model.ProtoPlayerItemNextLevelDetail)
      com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetailOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerItemNextLevelDetail_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerItemNextLevelDetail_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail.class, com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail.Builder.class);
    }

    // Construct using com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      damage_ = 0F;

      damageAdd_ = 0F;

      speed_ = 0F;

      speedAdd_ = 0F;

      durable_ = 0F;

      star_ = 0;

      level_ = 0;

      cResistanceFire_ = 0F;

      cResistanceBlast_ = 0F;

      cResistanceBullet_ = 0F;

      cResistanceKnife_ = 0F;

      holesNum_ = 0;

      color_ = 0;

      cBloodAddAdd_ = 0F;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.pearl.fcw.proto.model.ApiProto.internal_static_fcw_proto_model_ProtoPlayerItemNextLevelDetail_descriptor;
    }

    public com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail getDefaultInstanceForType() {
      return com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail.getDefaultInstance();
    }

    public com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail build() {
      com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail buildPartial() {
      com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail result = new com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail(this);
      result.damage_ = damage_;
      result.damageAdd_ = damageAdd_;
      result.speed_ = speed_;
      result.speedAdd_ = speedAdd_;
      result.durable_ = durable_;
      result.star_ = star_;
      result.level_ = level_;
      result.cResistanceFire_ = cResistanceFire_;
      result.cResistanceBlast_ = cResistanceBlast_;
      result.cResistanceBullet_ = cResistanceBullet_;
      result.cResistanceKnife_ = cResistanceKnife_;
      result.holesNum_ = holesNum_;
      result.color_ = color_;
      result.cBloodAddAdd_ = cBloodAddAdd_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail) {
        return mergeFrom((com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail other) {
      if (other == com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail.getDefaultInstance()) return this;
      if (other.getDamage() != 0F) {
        setDamage(other.getDamage());
      }
      if (other.getDamageAdd() != 0F) {
        setDamageAdd(other.getDamageAdd());
      }
      if (other.getSpeed() != 0F) {
        setSpeed(other.getSpeed());
      }
      if (other.getSpeedAdd() != 0F) {
        setSpeedAdd(other.getSpeedAdd());
      }
      if (other.getDurable() != 0F) {
        setDurable(other.getDurable());
      }
      if (other.getStar() != 0) {
        setStar(other.getStar());
      }
      if (other.getLevel() != 0) {
        setLevel(other.getLevel());
      }
      if (other.getCResistanceFire() != 0F) {
        setCResistanceFire(other.getCResistanceFire());
      }
      if (other.getCResistanceBlast() != 0F) {
        setCResistanceBlast(other.getCResistanceBlast());
      }
      if (other.getCResistanceBullet() != 0F) {
        setCResistanceBullet(other.getCResistanceBullet());
      }
      if (other.getCResistanceKnife() != 0F) {
        setCResistanceKnife(other.getCResistanceKnife());
      }
      if (other.getHolesNum() != 0) {
        setHolesNum(other.getHolesNum());
      }
      if (other.getColor() != 0) {
        setColor(other.getColor());
      }
      if (other.getCBloodAddAdd() != 0F) {
        setCBloodAddAdd(other.getCBloodAddAdd());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private float damage_ ;
    /**
     * <pre>
     *系统道具威力
     * </pre>
     *
     * <code>optional float damage = 1;</code>
     */
    public float getDamage() {
      return damage_;
    }
    /**
     * <pre>
     *系统道具威力
     * </pre>
     *
     * <code>optional float damage = 1;</code>
     */
    public Builder setDamage(float value) {
      
      damage_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *系统道具威力
     * </pre>
     *
     * <code>optional float damage = 1;</code>
     */
    public Builder clearDamage() {
      
      damage_ = 0F;
      onChanged();
      return this;
    }

    private float damageAdd_ ;
    /**
     * <pre>
     *下一级玩家道具比当前级别的系统道具增加的威力
     * </pre>
     *
     * <code>optional float damageAdd = 2;</code>
     */
    public float getDamageAdd() {
      return damageAdd_;
    }
    /**
     * <pre>
     *下一级玩家道具比当前级别的系统道具增加的威力
     * </pre>
     *
     * <code>optional float damageAdd = 2;</code>
     */
    public Builder setDamageAdd(float value) {
      
      damageAdd_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *下一级玩家道具比当前级别的系统道具增加的威力
     * </pre>
     *
     * <code>optional float damageAdd = 2;</code>
     */
    public Builder clearDamageAdd() {
      
      damageAdd_ = 0F;
      onChanged();
      return this;
    }

    private float speed_ ;
    /**
     * <pre>
     *系统道具射速
     * </pre>
     *
     * <code>optional float speed = 10;</code>
     */
    public float getSpeed() {
      return speed_;
    }
    /**
     * <pre>
     *系统道具射速
     * </pre>
     *
     * <code>optional float speed = 10;</code>
     */
    public Builder setSpeed(float value) {
      
      speed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *系统道具射速
     * </pre>
     *
     * <code>optional float speed = 10;</code>
     */
    public Builder clearSpeed() {
      
      speed_ = 0F;
      onChanged();
      return this;
    }

    private float speedAdd_ ;
    /**
     * <code>optional float speedAdd = 11;</code>
     */
    public float getSpeedAdd() {
      return speedAdd_;
    }
    /**
     * <code>optional float speedAdd = 11;</code>
     */
    public Builder setSpeedAdd(float value) {
      
      speedAdd_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float speedAdd = 11;</code>
     */
    public Builder clearSpeedAdd() {
      
      speedAdd_ = 0F;
      onChanged();
      return this;
    }

    private float durable_ ;
    /**
     * <code>optional float durable = 20;</code>
     */
    public float getDurable() {
      return durable_;
    }
    /**
     * <code>optional float durable = 20;</code>
     */
    public Builder setDurable(float value) {
      
      durable_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float durable = 20;</code>
     */
    public Builder clearDurable() {
      
      durable_ = 0F;
      onChanged();
      return this;
    }

    private int star_ ;
    /**
     * <code>optional sint32 star = 30;</code>
     */
    public int getStar() {
      return star_;
    }
    /**
     * <code>optional sint32 star = 30;</code>
     */
    public Builder setStar(int value) {
      
      star_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 star = 30;</code>
     */
    public Builder clearStar() {
      
      star_ = 0;
      onChanged();
      return this;
    }

    private int level_ ;
    /**
     * <code>optional sint32 level = 40;</code>
     */
    public int getLevel() {
      return level_;
    }
    /**
     * <code>optional sint32 level = 40;</code>
     */
    public Builder setLevel(int value) {
      
      level_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 level = 40;</code>
     */
    public Builder clearLevel() {
      
      level_ = 0;
      onChanged();
      return this;
    }

    private float cResistanceFire_ ;
    /**
     * <code>optional float cResistanceFire = 50;</code>
     */
    public float getCResistanceFire() {
      return cResistanceFire_;
    }
    /**
     * <code>optional float cResistanceFire = 50;</code>
     */
    public Builder setCResistanceFire(float value) {
      
      cResistanceFire_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float cResistanceFire = 50;</code>
     */
    public Builder clearCResistanceFire() {
      
      cResistanceFire_ = 0F;
      onChanged();
      return this;
    }

    private float cResistanceBlast_ ;
    /**
     * <code>optional float cResistanceBlast = 60;</code>
     */
    public float getCResistanceBlast() {
      return cResistanceBlast_;
    }
    /**
     * <code>optional float cResistanceBlast = 60;</code>
     */
    public Builder setCResistanceBlast(float value) {
      
      cResistanceBlast_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float cResistanceBlast = 60;</code>
     */
    public Builder clearCResistanceBlast() {
      
      cResistanceBlast_ = 0F;
      onChanged();
      return this;
    }

    private float cResistanceBullet_ ;
    /**
     * <code>optional float cResistanceBullet = 70;</code>
     */
    public float getCResistanceBullet() {
      return cResistanceBullet_;
    }
    /**
     * <code>optional float cResistanceBullet = 70;</code>
     */
    public Builder setCResistanceBullet(float value) {
      
      cResistanceBullet_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float cResistanceBullet = 70;</code>
     */
    public Builder clearCResistanceBullet() {
      
      cResistanceBullet_ = 0F;
      onChanged();
      return this;
    }

    private float cResistanceKnife_ ;
    /**
     * <code>optional float cResistanceKnife = 80;</code>
     */
    public float getCResistanceKnife() {
      return cResistanceKnife_;
    }
    /**
     * <code>optional float cResistanceKnife = 80;</code>
     */
    public Builder setCResistanceKnife(float value) {
      
      cResistanceKnife_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float cResistanceKnife = 80;</code>
     */
    public Builder clearCResistanceKnife() {
      
      cResistanceKnife_ = 0F;
      onChanged();
      return this;
    }

    private int holesNum_ ;
    /**
     * <code>optional sint32 holesNum = 90;</code>
     */
    public int getHolesNum() {
      return holesNum_;
    }
    /**
     * <code>optional sint32 holesNum = 90;</code>
     */
    public Builder setHolesNum(int value) {
      
      holesNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 holesNum = 90;</code>
     */
    public Builder clearHolesNum() {
      
      holesNum_ = 0;
      onChanged();
      return this;
    }

    private int color_ ;
    /**
     * <code>optional sint32 color = 100;</code>
     */
    public int getColor() {
      return color_;
    }
    /**
     * <code>optional sint32 color = 100;</code>
     */
    public Builder setColor(int value) {
      
      color_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 color = 100;</code>
     */
    public Builder clearColor() {
      
      color_ = 0;
      onChanged();
      return this;
    }

    private float cBloodAddAdd_ ;
    /**
     * <code>optional float cBloodAddAdd = 110;</code>
     */
    public float getCBloodAddAdd() {
      return cBloodAddAdd_;
    }
    /**
     * <code>optional float cBloodAddAdd = 110;</code>
     */
    public Builder setCBloodAddAdd(float value) {
      
      cBloodAddAdd_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float cBloodAddAdd = 110;</code>
     */
    public Builder clearCBloodAddAdd() {
      
      cBloodAddAdd_ = 0F;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:fcw.proto.model.ProtoPlayerItemNextLevelDetail)
  }

  // @@protoc_insertion_point(class_scope:fcw.proto.model.ProtoPlayerItemNextLevelDetail)
  private static final com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail();
  }

  public static com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProtoPlayerItemNextLevelDetail>
      PARSER = new com.google.protobuf.AbstractParser<ProtoPlayerItemNextLevelDetail>() {
    public ProtoPlayerItemNextLevelDetail parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtoPlayerItemNextLevelDetail(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ProtoPlayerItemNextLevelDetail> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProtoPlayerItemNextLevelDetail> getParserForType() {
    return PARSER;
  }

  public com.pearl.fcw.proto.model.ProtoPlayerItemNextLevelDetail getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

