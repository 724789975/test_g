// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package com.pearl.fcw.proto.rpc;

/**
 * Protobuf type {@code fcw.proto.server.ResponseGuideList}
 */
public  final class ResponseGuideList extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:fcw.proto.server.ResponseGuideList)
    ResponseGuideListOrBuilder {
  // Use ResponseGuideList.newBuilder() to construct.
  private ResponseGuideList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ResponseGuideList() {
    playerAchievement_ = java.util.Collections.emptyList();
    nextSysAchievement_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ResponseGuideList(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              playerAchievement_ = new java.util.ArrayList<com.pearl.fcw.proto.model.ProtoPlayerAchievement>();
              mutable_bitField0_ |= 0x00000001;
            }
            playerAchievement_.add(input.readMessage(com.pearl.fcw.proto.model.ProtoPlayerAchievement.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              nextSysAchievement_ = new java.util.ArrayList<com.pearl.fcw.proto.model.ProtoSysAchievement>();
              mutable_bitField0_ |= 0x00000002;
            }
            nextSysAchievement_.add(input.readMessage(com.pearl.fcw.proto.model.ProtoSysAchievement.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        playerAchievement_ = java.util.Collections.unmodifiableList(playerAchievement_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        nextSysAchievement_ = java.util.Collections.unmodifiableList(nextSysAchievement_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseGuideList_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseGuideList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.pearl.fcw.proto.rpc.ResponseGuideList.class, com.pearl.fcw.proto.rpc.ResponseGuideList.Builder.class);
  }

  public static final int PLAYERACHIEVEMENT_FIELD_NUMBER = 1;
  private java.util.List<com.pearl.fcw.proto.model.ProtoPlayerAchievement> playerAchievement_;
  /**
   * <pre>
   *玩家当前已开启但是未完成的玩家成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
   */
  public java.util.List<com.pearl.fcw.proto.model.ProtoPlayerAchievement> getPlayerAchievementList() {
    return playerAchievement_;
  }
  /**
   * <pre>
   *玩家当前已开启但是未完成的玩家成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
   */
  public java.util.List<? extends com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder> 
      getPlayerAchievementOrBuilderList() {
    return playerAchievement_;
  }
  /**
   * <pre>
   *玩家当前已开启但是未完成的玩家成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
   */
  public int getPlayerAchievementCount() {
    return playerAchievement_.size();
  }
  /**
   * <pre>
   *玩家当前已开启但是未完成的玩家成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
   */
  public com.pearl.fcw.proto.model.ProtoPlayerAchievement getPlayerAchievement(int index) {
    return playerAchievement_.get(index);
  }
  /**
   * <pre>
   *玩家当前已开启但是未完成的玩家成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
   */
  public com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder getPlayerAchievementOrBuilder(
      int index) {
    return playerAchievement_.get(index);
  }

  public static final int NEXTSYSACHIEVEMENT_FIELD_NUMBER = 2;
  private java.util.List<com.pearl.fcw.proto.model.ProtoSysAchievement> nextSysAchievement_;
  /**
   * <pre>
   *对应的系统成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
   */
  public java.util.List<com.pearl.fcw.proto.model.ProtoSysAchievement> getNextSysAchievementList() {
    return nextSysAchievement_;
  }
  /**
   * <pre>
   *对应的系统成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
   */
  public java.util.List<? extends com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder> 
      getNextSysAchievementOrBuilderList() {
    return nextSysAchievement_;
  }
  /**
   * <pre>
   *对应的系统成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
   */
  public int getNextSysAchievementCount() {
    return nextSysAchievement_.size();
  }
  /**
   * <pre>
   *对应的系统成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
   */
  public com.pearl.fcw.proto.model.ProtoSysAchievement getNextSysAchievement(int index) {
    return nextSysAchievement_.get(index);
  }
  /**
   * <pre>
   *对应的系统成就
   * </pre>
   *
   * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
   */
  public com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder getNextSysAchievementOrBuilder(
      int index) {
    return nextSysAchievement_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < playerAchievement_.size(); i++) {
      output.writeMessage(1, playerAchievement_.get(i));
    }
    for (int i = 0; i < nextSysAchievement_.size(); i++) {
      output.writeMessage(2, nextSysAchievement_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < playerAchievement_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, playerAchievement_.get(i));
    }
    for (int i = 0; i < nextSysAchievement_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, nextSysAchievement_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.pearl.fcw.proto.rpc.ResponseGuideList)) {
      return super.equals(obj);
    }
    com.pearl.fcw.proto.rpc.ResponseGuideList other = (com.pearl.fcw.proto.rpc.ResponseGuideList) obj;

    boolean result = true;
    result = result && getPlayerAchievementList()
        .equals(other.getPlayerAchievementList());
    result = result && getNextSysAchievementList()
        .equals(other.getNextSysAchievementList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getPlayerAchievementCount() > 0) {
      hash = (37 * hash) + PLAYERACHIEVEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerAchievementList().hashCode();
    }
    if (getNextSysAchievementCount() > 0) {
      hash = (37 * hash) + NEXTSYSACHIEVEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getNextSysAchievementList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.pearl.fcw.proto.rpc.ResponseGuideList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.pearl.fcw.proto.rpc.ResponseGuideList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code fcw.proto.server.ResponseGuideList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fcw.proto.server.ResponseGuideList)
      com.pearl.fcw.proto.rpc.ResponseGuideListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseGuideList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseGuideList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pearl.fcw.proto.rpc.ResponseGuideList.class, com.pearl.fcw.proto.rpc.ResponseGuideList.Builder.class);
    }

    // Construct using com.pearl.fcw.proto.rpc.ResponseGuideList.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getPlayerAchievementFieldBuilder();
        getNextSysAchievementFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (playerAchievementBuilder_ == null) {
        playerAchievement_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        playerAchievementBuilder_.clear();
      }
      if (nextSysAchievementBuilder_ == null) {
        nextSysAchievement_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        nextSysAchievementBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.pearl.fcw.proto.rpc.ApiProto.internal_static_fcw_proto_server_ResponseGuideList_descriptor;
    }

    public com.pearl.fcw.proto.rpc.ResponseGuideList getDefaultInstanceForType() {
      return com.pearl.fcw.proto.rpc.ResponseGuideList.getDefaultInstance();
    }

    public com.pearl.fcw.proto.rpc.ResponseGuideList build() {
      com.pearl.fcw.proto.rpc.ResponseGuideList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.pearl.fcw.proto.rpc.ResponseGuideList buildPartial() {
      com.pearl.fcw.proto.rpc.ResponseGuideList result = new com.pearl.fcw.proto.rpc.ResponseGuideList(this);
      int from_bitField0_ = bitField0_;
      if (playerAchievementBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          playerAchievement_ = java.util.Collections.unmodifiableList(playerAchievement_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.playerAchievement_ = playerAchievement_;
      } else {
        result.playerAchievement_ = playerAchievementBuilder_.build();
      }
      if (nextSysAchievementBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          nextSysAchievement_ = java.util.Collections.unmodifiableList(nextSysAchievement_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.nextSysAchievement_ = nextSysAchievement_;
      } else {
        result.nextSysAchievement_ = nextSysAchievementBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.pearl.fcw.proto.rpc.ResponseGuideList) {
        return mergeFrom((com.pearl.fcw.proto.rpc.ResponseGuideList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.pearl.fcw.proto.rpc.ResponseGuideList other) {
      if (other == com.pearl.fcw.proto.rpc.ResponseGuideList.getDefaultInstance()) return this;
      if (playerAchievementBuilder_ == null) {
        if (!other.playerAchievement_.isEmpty()) {
          if (playerAchievement_.isEmpty()) {
            playerAchievement_ = other.playerAchievement_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePlayerAchievementIsMutable();
            playerAchievement_.addAll(other.playerAchievement_);
          }
          onChanged();
        }
      } else {
        if (!other.playerAchievement_.isEmpty()) {
          if (playerAchievementBuilder_.isEmpty()) {
            playerAchievementBuilder_.dispose();
            playerAchievementBuilder_ = null;
            playerAchievement_ = other.playerAchievement_;
            bitField0_ = (bitField0_ & ~0x00000001);
            playerAchievementBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getPlayerAchievementFieldBuilder() : null;
          } else {
            playerAchievementBuilder_.addAllMessages(other.playerAchievement_);
          }
        }
      }
      if (nextSysAchievementBuilder_ == null) {
        if (!other.nextSysAchievement_.isEmpty()) {
          if (nextSysAchievement_.isEmpty()) {
            nextSysAchievement_ = other.nextSysAchievement_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNextSysAchievementIsMutable();
            nextSysAchievement_.addAll(other.nextSysAchievement_);
          }
          onChanged();
        }
      } else {
        if (!other.nextSysAchievement_.isEmpty()) {
          if (nextSysAchievementBuilder_.isEmpty()) {
            nextSysAchievementBuilder_.dispose();
            nextSysAchievementBuilder_ = null;
            nextSysAchievement_ = other.nextSysAchievement_;
            bitField0_ = (bitField0_ & ~0x00000002);
            nextSysAchievementBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getNextSysAchievementFieldBuilder() : null;
          } else {
            nextSysAchievementBuilder_.addAllMessages(other.nextSysAchievement_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.pearl.fcw.proto.rpc.ResponseGuideList parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.pearl.fcw.proto.rpc.ResponseGuideList) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.pearl.fcw.proto.model.ProtoPlayerAchievement> playerAchievement_ =
      java.util.Collections.emptyList();
    private void ensurePlayerAchievementIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        playerAchievement_ = new java.util.ArrayList<com.pearl.fcw.proto.model.ProtoPlayerAchievement>(playerAchievement_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.pearl.fcw.proto.model.ProtoPlayerAchievement, com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder, com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder> playerAchievementBuilder_;

    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public java.util.List<com.pearl.fcw.proto.model.ProtoPlayerAchievement> getPlayerAchievementList() {
      if (playerAchievementBuilder_ == null) {
        return java.util.Collections.unmodifiableList(playerAchievement_);
      } else {
        return playerAchievementBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public int getPlayerAchievementCount() {
      if (playerAchievementBuilder_ == null) {
        return playerAchievement_.size();
      } else {
        return playerAchievementBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public com.pearl.fcw.proto.model.ProtoPlayerAchievement getPlayerAchievement(int index) {
      if (playerAchievementBuilder_ == null) {
        return playerAchievement_.get(index);
      } else {
        return playerAchievementBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder setPlayerAchievement(
        int index, com.pearl.fcw.proto.model.ProtoPlayerAchievement value) {
      if (playerAchievementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayerAchievementIsMutable();
        playerAchievement_.set(index, value);
        onChanged();
      } else {
        playerAchievementBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder setPlayerAchievement(
        int index, com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder builderForValue) {
      if (playerAchievementBuilder_ == null) {
        ensurePlayerAchievementIsMutable();
        playerAchievement_.set(index, builderForValue.build());
        onChanged();
      } else {
        playerAchievementBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder addPlayerAchievement(com.pearl.fcw.proto.model.ProtoPlayerAchievement value) {
      if (playerAchievementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayerAchievementIsMutable();
        playerAchievement_.add(value);
        onChanged();
      } else {
        playerAchievementBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder addPlayerAchievement(
        int index, com.pearl.fcw.proto.model.ProtoPlayerAchievement value) {
      if (playerAchievementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayerAchievementIsMutable();
        playerAchievement_.add(index, value);
        onChanged();
      } else {
        playerAchievementBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder addPlayerAchievement(
        com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder builderForValue) {
      if (playerAchievementBuilder_ == null) {
        ensurePlayerAchievementIsMutable();
        playerAchievement_.add(builderForValue.build());
        onChanged();
      } else {
        playerAchievementBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder addPlayerAchievement(
        int index, com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder builderForValue) {
      if (playerAchievementBuilder_ == null) {
        ensurePlayerAchievementIsMutable();
        playerAchievement_.add(index, builderForValue.build());
        onChanged();
      } else {
        playerAchievementBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder addAllPlayerAchievement(
        java.lang.Iterable<? extends com.pearl.fcw.proto.model.ProtoPlayerAchievement> values) {
      if (playerAchievementBuilder_ == null) {
        ensurePlayerAchievementIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerAchievement_);
        onChanged();
      } else {
        playerAchievementBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder clearPlayerAchievement() {
      if (playerAchievementBuilder_ == null) {
        playerAchievement_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        playerAchievementBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public Builder removePlayerAchievement(int index) {
      if (playerAchievementBuilder_ == null) {
        ensurePlayerAchievementIsMutable();
        playerAchievement_.remove(index);
        onChanged();
      } else {
        playerAchievementBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder getPlayerAchievementBuilder(
        int index) {
      return getPlayerAchievementFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder getPlayerAchievementOrBuilder(
        int index) {
      if (playerAchievementBuilder_ == null) {
        return playerAchievement_.get(index);  } else {
        return playerAchievementBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public java.util.List<? extends com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder> 
         getPlayerAchievementOrBuilderList() {
      if (playerAchievementBuilder_ != null) {
        return playerAchievementBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(playerAchievement_);
      }
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder addPlayerAchievementBuilder() {
      return getPlayerAchievementFieldBuilder().addBuilder(
          com.pearl.fcw.proto.model.ProtoPlayerAchievement.getDefaultInstance());
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder addPlayerAchievementBuilder(
        int index) {
      return getPlayerAchievementFieldBuilder().addBuilder(
          index, com.pearl.fcw.proto.model.ProtoPlayerAchievement.getDefaultInstance());
    }
    /**
     * <pre>
     *玩家当前已开启但是未完成的玩家成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoPlayerAchievement playerAchievement = 1;</code>
     */
    public java.util.List<com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder> 
         getPlayerAchievementBuilderList() {
      return getPlayerAchievementFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.pearl.fcw.proto.model.ProtoPlayerAchievement, com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder, com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder> 
        getPlayerAchievementFieldBuilder() {
      if (playerAchievementBuilder_ == null) {
        playerAchievementBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.pearl.fcw.proto.model.ProtoPlayerAchievement, com.pearl.fcw.proto.model.ProtoPlayerAchievement.Builder, com.pearl.fcw.proto.model.ProtoPlayerAchievementOrBuilder>(
                playerAchievement_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        playerAchievement_ = null;
      }
      return playerAchievementBuilder_;
    }

    private java.util.List<com.pearl.fcw.proto.model.ProtoSysAchievement> nextSysAchievement_ =
      java.util.Collections.emptyList();
    private void ensureNextSysAchievementIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        nextSysAchievement_ = new java.util.ArrayList<com.pearl.fcw.proto.model.ProtoSysAchievement>(nextSysAchievement_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.pearl.fcw.proto.model.ProtoSysAchievement, com.pearl.fcw.proto.model.ProtoSysAchievement.Builder, com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder> nextSysAchievementBuilder_;

    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public java.util.List<com.pearl.fcw.proto.model.ProtoSysAchievement> getNextSysAchievementList() {
      if (nextSysAchievementBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nextSysAchievement_);
      } else {
        return nextSysAchievementBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public int getNextSysAchievementCount() {
      if (nextSysAchievementBuilder_ == null) {
        return nextSysAchievement_.size();
      } else {
        return nextSysAchievementBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public com.pearl.fcw.proto.model.ProtoSysAchievement getNextSysAchievement(int index) {
      if (nextSysAchievementBuilder_ == null) {
        return nextSysAchievement_.get(index);
      } else {
        return nextSysAchievementBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder setNextSysAchievement(
        int index, com.pearl.fcw.proto.model.ProtoSysAchievement value) {
      if (nextSysAchievementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNextSysAchievementIsMutable();
        nextSysAchievement_.set(index, value);
        onChanged();
      } else {
        nextSysAchievementBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder setNextSysAchievement(
        int index, com.pearl.fcw.proto.model.ProtoSysAchievement.Builder builderForValue) {
      if (nextSysAchievementBuilder_ == null) {
        ensureNextSysAchievementIsMutable();
        nextSysAchievement_.set(index, builderForValue.build());
        onChanged();
      } else {
        nextSysAchievementBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder addNextSysAchievement(com.pearl.fcw.proto.model.ProtoSysAchievement value) {
      if (nextSysAchievementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNextSysAchievementIsMutable();
        nextSysAchievement_.add(value);
        onChanged();
      } else {
        nextSysAchievementBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder addNextSysAchievement(
        int index, com.pearl.fcw.proto.model.ProtoSysAchievement value) {
      if (nextSysAchievementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNextSysAchievementIsMutable();
        nextSysAchievement_.add(index, value);
        onChanged();
      } else {
        nextSysAchievementBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder addNextSysAchievement(
        com.pearl.fcw.proto.model.ProtoSysAchievement.Builder builderForValue) {
      if (nextSysAchievementBuilder_ == null) {
        ensureNextSysAchievementIsMutable();
        nextSysAchievement_.add(builderForValue.build());
        onChanged();
      } else {
        nextSysAchievementBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder addNextSysAchievement(
        int index, com.pearl.fcw.proto.model.ProtoSysAchievement.Builder builderForValue) {
      if (nextSysAchievementBuilder_ == null) {
        ensureNextSysAchievementIsMutable();
        nextSysAchievement_.add(index, builderForValue.build());
        onChanged();
      } else {
        nextSysAchievementBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder addAllNextSysAchievement(
        java.lang.Iterable<? extends com.pearl.fcw.proto.model.ProtoSysAchievement> values) {
      if (nextSysAchievementBuilder_ == null) {
        ensureNextSysAchievementIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nextSysAchievement_);
        onChanged();
      } else {
        nextSysAchievementBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder clearNextSysAchievement() {
      if (nextSysAchievementBuilder_ == null) {
        nextSysAchievement_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        nextSysAchievementBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public Builder removeNextSysAchievement(int index) {
      if (nextSysAchievementBuilder_ == null) {
        ensureNextSysAchievementIsMutable();
        nextSysAchievement_.remove(index);
        onChanged();
      } else {
        nextSysAchievementBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public com.pearl.fcw.proto.model.ProtoSysAchievement.Builder getNextSysAchievementBuilder(
        int index) {
      return getNextSysAchievementFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder getNextSysAchievementOrBuilder(
        int index) {
      if (nextSysAchievementBuilder_ == null) {
        return nextSysAchievement_.get(index);  } else {
        return nextSysAchievementBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public java.util.List<? extends com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder> 
         getNextSysAchievementOrBuilderList() {
      if (nextSysAchievementBuilder_ != null) {
        return nextSysAchievementBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nextSysAchievement_);
      }
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public com.pearl.fcw.proto.model.ProtoSysAchievement.Builder addNextSysAchievementBuilder() {
      return getNextSysAchievementFieldBuilder().addBuilder(
          com.pearl.fcw.proto.model.ProtoSysAchievement.getDefaultInstance());
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public com.pearl.fcw.proto.model.ProtoSysAchievement.Builder addNextSysAchievementBuilder(
        int index) {
      return getNextSysAchievementFieldBuilder().addBuilder(
          index, com.pearl.fcw.proto.model.ProtoSysAchievement.getDefaultInstance());
    }
    /**
     * <pre>
     *对应的系统成就
     * </pre>
     *
     * <code>repeated .fcw.proto.model.ProtoSysAchievement nextSysAchievement = 2;</code>
     */
    public java.util.List<com.pearl.fcw.proto.model.ProtoSysAchievement.Builder> 
         getNextSysAchievementBuilderList() {
      return getNextSysAchievementFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.pearl.fcw.proto.model.ProtoSysAchievement, com.pearl.fcw.proto.model.ProtoSysAchievement.Builder, com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder> 
        getNextSysAchievementFieldBuilder() {
      if (nextSysAchievementBuilder_ == null) {
        nextSysAchievementBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.pearl.fcw.proto.model.ProtoSysAchievement, com.pearl.fcw.proto.model.ProtoSysAchievement.Builder, com.pearl.fcw.proto.model.ProtoSysAchievementOrBuilder>(
                nextSysAchievement_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        nextSysAchievement_ = null;
      }
      return nextSysAchievementBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:fcw.proto.server.ResponseGuideList)
  }

  // @@protoc_insertion_point(class_scope:fcw.proto.server.ResponseGuideList)
  private static final com.pearl.fcw.proto.rpc.ResponseGuideList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.pearl.fcw.proto.rpc.ResponseGuideList();
  }

  public static com.pearl.fcw.proto.rpc.ResponseGuideList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResponseGuideList>
      PARSER = new com.google.protobuf.AbstractParser<ResponseGuideList>() {
    public ResponseGuideList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResponseGuideList(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResponseGuideList> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResponseGuideList> getParserForType() {
    return PARSER;
  }

  public com.pearl.fcw.proto.rpc.ResponseGuideList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

