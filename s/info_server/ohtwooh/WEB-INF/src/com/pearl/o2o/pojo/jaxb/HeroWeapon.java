//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.10.25 at 04:24:54 ���� CST 
//


package com.pearl.o2o.pojo.jaxb;

import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import com.pearl.o2o.utils.BinaryUtil;
import com.pearl.o2o.utils.Constants;
import com.pearl.o2o.utils.StringUtil;


/**
 * <p>Java class for HeroWeapon complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="HeroWeapon">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="sysItemId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="sysLevelId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="displayName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="resourceStable" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="resourceChangeable" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="wId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wChangeInTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveSpeedOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrossOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wAccuracyDivisor" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wAccuracyOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMaxInaccuracy" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wPenetration" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wDamage" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wRangeModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wFireTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wReloadTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wZoomTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wZoomValue" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wAmmoOneClip" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wAmmoCount" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wAutoFire" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wShootBulletCount" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wMaxLength" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wTimeToIdle" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalFactor" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairFactor" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveFactor" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalUpBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalLateralBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalUpModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalLateralModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalUpMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalLateralMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wNormalDirChange" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveUpBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveLateralBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveUpModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveLateralModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveUpMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveLateralMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMoveDirChange" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairUpBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairLateralBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairUpModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairLateralModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairUpMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairLateralMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wOnairDirChange" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrouchUpBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrouchLateralBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrouchUpModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrouchLateralModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrouchUpMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrouchLateralMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrouchDirChange" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wUpModifier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wSpread" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wFireMaxSpeed" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wFireStartSpeed" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wFireAceleration" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wFireResistance" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wStabTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wStabLightTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wStabHurt" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wStabLightHurt" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wExplodeTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wReadyTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wThrowOutTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wHurtRange" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wHurt" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wRangeStart" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wRangeEnd" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wAccuracyTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wAccuracyTimeModefier" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMaxAccuracy" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wMinAccuracy" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrossLengthBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrossLengthFactor" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrossDistanceBase" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wCrossDistanceFactor" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wXOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wFlashRangeStart" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wFlashRangeEnd" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wFlashBackFactor" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wSightNormalOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wSightOnairOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wSightMoveOffset" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wStabDistance" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wStabLightDistance" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wStabWidth" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wBackFactor" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wTime" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wTimeMax" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;element name="wTimeFade" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HeroWeapon", propOrder = {
    "id",
    "sysItemId",
    "sysLevelId",
    "name",
    "displayName",
    "resourceStable",
    "resourceChangeable",
    "wId",
    "wChangeInTime",
    "wMoveSpeedOffset",
    "wCrossOffset",
    "wAccuracyDivisor",
    "wAccuracyOffset",
    "wMaxInaccuracy",
    "wPenetration",
    "wDamage",
    "wRangeModifier",
    "wFireTime",
    "wReloadTime",
    "wZoomTime",
    "wZoomValue",
    "wAmmoOneClip",
    "wAmmoCount",
    "wAutoFire",
    "wShootBulletCount",
    "wMaxLength",
    "wTimeToIdle",
    "wNormalOffset",
    "wNormalFactor",
    "wOnairOffset",
    "wOnairFactor",
    "wMoveOffset",
    "wMoveFactor",
    "wNormalUpBase",
    "wNormalLateralBase",
    "wNormalUpModifier",
    "wNormalLateralModifier",
    "wNormalUpMax",
    "wNormalLateralMax",
    "wNormalDirChange",
    "wMoveUpBase",
    "wMoveLateralBase",
    "wMoveUpModifier",
    "wMoveLateralModifier",
    "wMoveUpMax",
    "wMoveLateralMax",
    "wMoveDirChange",
    "wOnairUpBase",
    "wOnairLateralBase",
    "wOnairUpModifier",
    "wOnairLateralModifier",
    "wOnairUpMax",
    "wOnairLateralMax",
    "wOnairDirChange",
    "wCrouchUpBase",
    "wCrouchLateralBase",
    "wCrouchUpModifier",
    "wCrouchLateralModifier",
    "wCrouchUpMax",
    "wCrouchLateralMax",
    "wCrouchDirChange",
    "wUpModifier",
    "wSpread",
    "wFireMaxSpeed",
    "wFireStartSpeed",
    "wFireAceleration",
    "wFireResistance",
    "wStabTime",
    "wStabLightTime",
    "wStabHurt",
    "wStabLightHurt",
    "wExplodeTime",
    "wReadyTime",
    "wThrowOutTime",
    "wHurtRange",
    "wHurt",
    "wRangeStart",
    "wRangeEnd",
    "wAccuracyTime",
    "wAccuracyTimeModefier",
    "wMaxAccuracy",
    "wMinAccuracy",
    "wCrossLengthBase",
    "wCrossLengthFactor",
    "wCrossDistanceBase",
    "wCrossDistanceFactor",
    "wxOffset",
    "wFlashRangeStart",
    "wFlashRangeEnd",
    "wFlashBackFactor",
    "wSightNormalOffset",
    "wSightOnairOffset",
    "wSightMoveOffset",
    "wStabDistance",
    "wStabLightDistance",
    "wStabWidth",
    "wBackFactor",
    "wTime",
    "wTimeMax",
    "wTimeFade"
})
public class HeroWeapon {
	
	public void writeByte(OutputStream out) throws IOException {
		out.write(BinaryUtil.toByta(wId));		//Weapon ID
		if( wId > 0){
			out.write(BinaryUtil.toByta(name));				//Weapon Name
			out.write(BinaryUtil.toByta(wChangeInTime));	//Change In Time
			out.write(BinaryUtil.toByta(wMoveSpeedOffset));	//Move Speed Offset
			out.write(BinaryUtil.toByta(wCrossOffset));		//Cross Offset
			out.write(BinaryUtil.toByta(wCrossLengthBase));		//wCrossLengthBase
			out.write(BinaryUtil.toByta(wCrossLengthFactor));		//wCrossLengthFactor
			out.write(BinaryUtil.toByta(wCrossDistanceBase));		//wCrossDistanceBase
			out.write(BinaryUtil.toByta(wCrossDistanceFactor));		//wCrossDistanceFactor
			//Resources stable
			String[] resStable = resourceStable.split(Constants.DELIMITER_RESOURCE_STABLE);
			//Resources changeable
			String[] resChangeable = resourceChangeable.split(Constants.DELIMITER_RESOURCE_CHANGEABLE);
			List<String> changeableRes = new ArrayList<String>();
			for (String res : resChangeable){
				if(!StringUtil.isEmptyString(res)){
					String [] ress = res.split(Constants.DELIMITER_RESOURCE_STABLE);
					for (String s: ress) {
						if (!StringUtil.isEmptyString(s)){
							changeableRes.add(s);
						}
					}
				}
			}
			
			
			out.write(BinaryUtil.toByta(resStable.length + changeableRes.size()));			
			for(String res : resStable ){
				StringBuffer path = new StringBuffer(name).append("/").append(res);
				out.write(BinaryUtil.toByta(path.toString()));				
			}
			
			for(String changeableStr : changeableRes){
				StringBuffer path = new StringBuffer(name).append("/").append(changeableStr);
				out.write(BinaryUtil.toByta(path.toString()));
			}
			
			if(wId < Constants.WEAPON_KNIFE_ID){								
				//Gun Info
				out.write(BinaryUtil.toByta(wAccuracyDivisor));				//Accuracy Divisor
				out.write(BinaryUtil.toByta(wAccuracyOffset));				//Accuracy Offset
				out.write(BinaryUtil.toByta(wMaxInaccuracy));				//Max Inaccuracy
				out.write(BinaryUtil.toByta(wPenetration));					//Penetration
				out.write(BinaryUtil.toByta(wDamage));						//Damage
				out.write(BinaryUtil.toByta(wRangeModifier));				//Range Modifier
				out.write(BinaryUtil.toByta(wRangeStart));				//wRangeStart
				out.write(BinaryUtil.toByta(wRangeEnd));				//wRangeEnd
				out.write(BinaryUtil.toByta(wFireTime));					//Fire Time
				out.write(BinaryUtil.toByta(wReloadTime));					//Reload Time
				out.write(BinaryUtil.toByta(wZoomTime));					//Zoom Time
				out.write(BinaryUtil.toByta(wZoomValue));					//Zoom Value
				out.write(BinaryUtil.toByta(wAmmoOneClip));					//Ammo One Clip
				out.write(BinaryUtil.toByta(wAmmoCount));					//Ammo Count
				out.write(BinaryUtil.toByta(wAutoFire));		//Auto Fire
				out.write(BinaryUtil.toByta(wTimeToIdle));					//Time To Idle
				out.write(BinaryUtil.toByta(wNormalOffset));				//Normal Offset
				out.write(BinaryUtil.toByta(wNormalFactor));				//Normal Factor
				out.write(BinaryUtil.toByta(wOnairOffset));					//Onair Offset
				out.write(BinaryUtil.toByta(wOnairFactor));					//Onair Factor
				out.write(BinaryUtil.toByta(wMoveOffset));					//Move Offset
				out.write(BinaryUtil.toByta(wMoveFactor));					//Move Factor
				
				if(wId == Constants.WEAPON_PISTOL_ID){
					out.write(BinaryUtil.toByta(wUpModifier)); //wUpModifier
					out.write(BinaryUtil.toByta(wAccuracyTime)); //wAccuracyTime
					out.write(BinaryUtil.toByta(wAccuracyTimeModefier)); //wAccuracyTimeModefier
					out.write(BinaryUtil.toByta(wMaxAccuracy)); //wMaxAccuracy
					out.write(BinaryUtil.toByta(wMinAccuracy)); //wMinAccuracy
				}else if(wId == Constants.WEAPON_SNIPER_GUN_ID){
					out.write(BinaryUtil.toByta(wSightNormalOffset));	
					out.write(BinaryUtil.toByta(wSightOnairOffset));	
					out.write(BinaryUtil.toByta(wSightMoveOffset));			//Up Base
				}else if(wId == Constants.WEAPON_SHOT_GUN_ID){				
					out.write(BinaryUtil.toByta(wShootBulletCount));	
					out.write(BinaryUtil.toByta(wSpread));	
					out.write(BinaryUtil.toByta(wNormalUpBase));			//Up Base
					out.write(BinaryUtil.toByta(wNormalUpModifier));		//Up Modifier
					out.write(BinaryUtil.toByta(wNormalUpMax));				//Up Max
				}
				else if(wId == Constants.WEAPON_RIFFLE_ID || wId == Constants.WEAPON_SUBMACHINE_ID 
						|| wId == Constants.WEAPON_MACHINE_GUN_ID|| wId == Constants.WEAPON_MINI_GUN_ID){
					//Rifle Info	
					//Normal
					out.write(BinaryUtil.toByta(wNormalUpBase));			//Up Base
					out.write(BinaryUtil.toByta(wNormalLateralBase));		//Lateral Base
					out.write(BinaryUtil.toByta(wNormalUpModifier));		//Up Modifier
					out.write(BinaryUtil.toByta(wNormalLateralModifier));	//Lateral Modifier
					out.write(BinaryUtil.toByta(wNormalUpMax));				//Up Max
					out.write(BinaryUtil.toByta(wNormalLateralMax));		//Lateral Max
					out.write(BinaryUtil.toByta(wNormalDirChange));			//Dir Change
					//Move
					out.write(BinaryUtil.toByta(wMoveUpBase));				//Up Base
					out.write(BinaryUtil.toByta(wMoveLateralBase));			//Lateral Base
					out.write(BinaryUtil.toByta(wMoveUpModifier));			//Up Modifier
					out.write(BinaryUtil.toByta(wMoveLateralModifier));		//Lateral Modifier
					out.write(BinaryUtil.toByta(wMoveUpMax));				//Up Max
					out.write(BinaryUtil.toByta(wMoveLateralMax));			//Lateral Max
					out.write(BinaryUtil.toByta(wMoveDirChange));			//Dir Change
					//Onair
					out.write(BinaryUtil.toByta(wOnairUpBase));				//Up Base
					out.write(BinaryUtil.toByta(wOnairLateralBase));		//Lateral Base
					out.write(BinaryUtil.toByta(wOnairUpModifier));			//Up Modifier
					out.write(BinaryUtil.toByta(wOnairLateralModifier));	//Lateral Modifier
					out.write(BinaryUtil.toByta(wOnairUpMax));				//Up Max
					out.write(BinaryUtil.toByta(wOnairLateralMax));			//Lateral Max
					out.write(BinaryUtil.toByta(wOnairDirChange));			//Dir Change
					//Crouch
					out.write(BinaryUtil.toByta(wCrouchUpBase));			//Up Base
					out.write(BinaryUtil.toByta(wCrouchLateralBase));		//Lateral Base
					out.write(BinaryUtil.toByta(wCrouchUpModifier));		//Up Modifier
					out.write(BinaryUtil.toByta(wCrouchLateralModifier));	//Lateral Modifier
					out.write(BinaryUtil.toByta(wCrouchUpMax));				//Up Max
					out.write(BinaryUtil.toByta(wCrouchLateralMax));		//Lateral Max
					out.write(BinaryUtil.toByta(wCrouchDirChange));			//Dir Change
					if(wId == Constants.WEAPON_MINI_GUN_ID){
						out.write(BinaryUtil.toByta(wFireMaxSpeed));	
						out.write(BinaryUtil.toByta(wFireStartSpeed));				
						out.write(BinaryUtil.toByta(wFireAceleration));		
						out.write(BinaryUtil.toByta(wFireResistance));	
					}
				}
			}
			else if(wId == Constants.WEAPON_KNIFE_ID){
				out.write(BinaryUtil.toByta(wStabTime));					//Stab Time
				out.write(BinaryUtil.toByta(wStabLightTime));				//Stab Light Time
				
				out.write(BinaryUtil.toByta(wStabDistance));
				out.write(BinaryUtil.toByta(wStabLightDistance));
				out.write(BinaryUtil.toByta(wStabWidth));
				out.write(BinaryUtil.toByta(wBackFactor));
				
				out.write(BinaryUtil.toByta(wStabHurt));					//Stab Hurt
				out.write(BinaryUtil.toByta(wStabLightHurt));				//Stab Light Hurt	
			}
			else if(wId >= Constants.WEAPON_THROW_ID){
				out.write(BinaryUtil.toByta(wExplodeTime));					//Explode Time
				out.write(BinaryUtil.toByta(wReadyTime));					//Ready Time
				out.write(BinaryUtil.toByta(wThrowOutTime));				//Throw Out Time
				if(wId==Constants.WEAPON_GRENADE_ID){
					out.write(BinaryUtil.toByta(wHurtRange));					//Hurt Range		
					out.write(BinaryUtil.toByta(wHurt));						//Hurt
				}
				if(wId==Constants.WEAPON_FLASH_ID){
					out.write(BinaryUtil.toByta(wFlashRangeStart));
					out.write(BinaryUtil.toByta(wFlashRangeEnd));
					out.write(BinaryUtil.toByta(wTimeMax));
					out.write(BinaryUtil.toByta(wTimeFade));
					out.write(BinaryUtil.toByta(wFlashBackFactor));
				}
				if(wId==Constants.WEAPON_SMOKE_ID){
					out.write(BinaryUtil.toByta(wTime));
				}
			}
		}
	}

    protected int id;
    protected int sysItemId;
    protected int sysLevelId;
    @XmlElement(required = true)
    protected String name;
    @XmlElement(required = true)
    protected String displayName;
    @XmlElement(required = true)
    protected String resourceStable;
    @XmlElement(required = true)
    protected String resourceChangeable;
    protected int wId;
    protected float wChangeInTime;
    protected float wMoveSpeedOffset;
    protected float wCrossOffset;
    protected int wAccuracyDivisor;
    protected float wAccuracyOffset;
    protected float wMaxInaccuracy;
    protected int wPenetration;
    protected int wDamage;
    protected float wRangeModifier;
    protected float wFireTime;
    protected float wReloadTime;
    protected float wZoomTime;
    protected float wZoomValue;
    protected int wAmmoOneClip;
    protected int wAmmoCount;
    protected int wAutoFire;
    protected int wShootBulletCount;
    protected int wMaxLength;
    protected float wTimeToIdle;
    protected float wNormalOffset;
    protected float wNormalFactor;
    protected float wOnairOffset;
    protected float wOnairFactor;
    protected float wMoveOffset;
    protected float wMoveFactor;
    protected float wNormalUpBase;
    protected float wNormalLateralBase;
    protected float wNormalUpModifier;
    protected float wNormalLateralModifier;
    protected float wNormalUpMax;
    protected float wNormalLateralMax;
    protected float wNormalDirChange;
    protected float wMoveUpBase;
    protected float wMoveLateralBase;
    protected float wMoveUpModifier;
    protected float wMoveLateralModifier;
    protected float wMoveUpMax;
    protected float wMoveLateralMax;
    protected float wMoveDirChange;
    protected float wOnairUpBase;
    protected float wOnairLateralBase;
    protected float wOnairUpModifier;
    protected float wOnairLateralModifier;
    protected float wOnairUpMax;
    protected float wOnairLateralMax;
    protected float wOnairDirChange;
    protected float wCrouchUpBase;
    protected float wCrouchLateralBase;
    protected float wCrouchUpModifier;
    protected float wCrouchLateralModifier;
    protected float wCrouchUpMax;
    protected float wCrouchLateralMax;
    protected float wCrouchDirChange;
    protected float wUpModifier;
    protected float wSpread;
    protected float wFireMaxSpeed;
    protected float wFireStartSpeed;
    protected float wFireAceleration;
    protected float wFireResistance;
    protected float wStabTime;
    protected float wStabLightTime;
    protected float wStabHurt;
    protected float wStabLightHurt;
    protected float wExplodeTime;
    protected float wReadyTime;
    protected float wThrowOutTime;
    protected float wHurtRange;
    protected float wHurt;
    protected float wRangeStart;
    protected float wRangeEnd;
    protected float wAccuracyTime;
    protected float wAccuracyTimeModefier;
    protected float wMaxAccuracy;
    protected float wMinAccuracy;
    protected float wCrossLengthBase;
    protected float wCrossLengthFactor;
    protected float wCrossDistanceBase;
    protected float wCrossDistanceFactor;
    @XmlElement(name = "wXOffset")
    protected float wxOffset;
    protected float wFlashRangeStart;
    protected float wFlashRangeEnd;
    protected float wFlashBackFactor;
    protected float wSightNormalOffset;
    protected float wSightOnairOffset;
    protected float wSightMoveOffset;
    protected float wStabDistance;
    protected float wStabLightDistance;
    protected float wStabWidth;
    protected float wBackFactor;
    protected float wTime;
    protected float wTimeMax;
    protected float wTimeFade;

    /**
     * Gets the value of the id property.
     * 
     */
    public int getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     */
    public void setId(int value) {
        this.id = value;
    }

    /**
     * Gets the value of the sysItemId property.
     * 
     */
    public int getSysItemId() {
        return sysItemId;
    }

    /**
     * Sets the value of the sysItemId property.
     * 
     */
    public void setSysItemId(int value) {
        this.sysItemId = value;
    }

    /**
     * Gets the value of the sysLevelId property.
     * 
     */
    public int getSysLevelId() {
        return sysLevelId;
    }

    /**
     * Sets the value of the sysLevelId property.
     * 
     */
    public void setSysLevelId(int value) {
        this.sysLevelId = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the displayName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Gets the value of the resourceStable property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getResourceStable() {
        return resourceStable;
    }

    /**
     * Sets the value of the resourceStable property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setResourceStable(String value) {
        this.resourceStable = value;
    }

    /**
     * Gets the value of the resourceChangeable property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getResourceChangeable() {
        return resourceChangeable;
    }

    /**
     * Sets the value of the resourceChangeable property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setResourceChangeable(String value) {
        this.resourceChangeable = value;
    }

    /**
     * Gets the value of the wId property.
     * 
     */
    public int getWId() {
        return wId;
    }

    /**
     * Sets the value of the wId property.
     * 
     */
    public void setWId(int value) {
        this.wId = value;
    }

    /**
     * Gets the value of the wChangeInTime property.
     * 
     */
    public float getWChangeInTime() {
        return wChangeInTime;
    }

    /**
     * Sets the value of the wChangeInTime property.
     * 
     */
    public void setWChangeInTime(float value) {
        this.wChangeInTime = value;
    }

    /**
     * Gets the value of the wMoveSpeedOffset property.
     * 
     */
    public float getWMoveSpeedOffset() {
        return wMoveSpeedOffset;
    }

    /**
     * Sets the value of the wMoveSpeedOffset property.
     * 
     */
    public void setWMoveSpeedOffset(float value) {
        this.wMoveSpeedOffset = value;
    }

    /**
     * Gets the value of the wCrossOffset property.
     * 
     */
    public float getWCrossOffset() {
        return wCrossOffset;
    }

    /**
     * Sets the value of the wCrossOffset property.
     * 
     */
    public void setWCrossOffset(float value) {
        this.wCrossOffset = value;
    }

    /**
     * Gets the value of the wAccuracyDivisor property.
     * 
     */
    public int getWAccuracyDivisor() {
        return wAccuracyDivisor;
    }

    /**
     * Sets the value of the wAccuracyDivisor property.
     * 
     */
    public void setWAccuracyDivisor(int value) {
        this.wAccuracyDivisor = value;
    }

    /**
     * Gets the value of the wAccuracyOffset property.
     * 
     */
    public float getWAccuracyOffset() {
        return wAccuracyOffset;
    }

    /**
     * Sets the value of the wAccuracyOffset property.
     * 
     */
    public void setWAccuracyOffset(float value) {
        this.wAccuracyOffset = value;
    }

    /**
     * Gets the value of the wMaxInaccuracy property.
     * 
     */
    public float getWMaxInaccuracy() {
        return wMaxInaccuracy;
    }

    /**
     * Sets the value of the wMaxInaccuracy property.
     * 
     */
    public void setWMaxInaccuracy(float value) {
        this.wMaxInaccuracy = value;
    }

    /**
     * Gets the value of the wPenetration property.
     * 
     */
    public int getWPenetration() {
        return wPenetration;
    }

    /**
     * Sets the value of the wPenetration property.
     * 
     */
    public void setWPenetration(int value) {
        this.wPenetration = value;
    }

    /**
     * Gets the value of the wDamage property.
     * 
     */
    public int getWDamage() {
        return wDamage;
    }

    /**
     * Sets the value of the wDamage property.
     * 
     */
    public void setWDamage(int value) {
        this.wDamage = value;
    }

    /**
     * Gets the value of the wRangeModifier property.
     * 
     */
    public float getWRangeModifier() {
        return wRangeModifier;
    }

    /**
     * Sets the value of the wRangeModifier property.
     * 
     */
    public void setWRangeModifier(float value) {
        this.wRangeModifier = value;
    }

    /**
     * Gets the value of the wFireTime property.
     * 
     */
    public float getWFireTime() {
        return wFireTime;
    }

    /**
     * Sets the value of the wFireTime property.
     * 
     */
    public void setWFireTime(float value) {
        this.wFireTime = value;
    }

    /**
     * Gets the value of the wReloadTime property.
     * 
     */
    public float getWReloadTime() {
        return wReloadTime;
    }

    /**
     * Sets the value of the wReloadTime property.
     * 
     */
    public void setWReloadTime(float value) {
        this.wReloadTime = value;
    }

    /**
     * Gets the value of the wZoomTime property.
     * 
     */
    public float getWZoomTime() {
        return wZoomTime;
    }

    /**
     * Sets the value of the wZoomTime property.
     * 
     */
    public void setWZoomTime(float value) {
        this.wZoomTime = value;
    }

    /**
     * Gets the value of the wZoomValue property.
     * 
     */
    public float getWZoomValue() {
        return wZoomValue;
    }

    /**
     * Sets the value of the wZoomValue property.
     * 
     */
    public void setWZoomValue(float value) {
        this.wZoomValue = value;
    }

    /**
     * Gets the value of the wAmmoOneClip property.
     * 
     */
    public int getWAmmoOneClip() {
        return wAmmoOneClip;
    }

    /**
     * Sets the value of the wAmmoOneClip property.
     * 
     */
    public void setWAmmoOneClip(int value) {
        this.wAmmoOneClip = value;
    }

    /**
     * Gets the value of the wAmmoCount property.
     * 
     */
    public int getWAmmoCount() {
        return wAmmoCount;
    }

    /**
     * Sets the value of the wAmmoCount property.
     * 
     */
    public void setWAmmoCount(int value) {
        this.wAmmoCount = value;
    }

    /**
     * Gets the value of the wAutoFire property.
     * 
     */
    public int getWAutoFire() {
        return wAutoFire;
    }

    /**
     * Sets the value of the wAutoFire property.
     * 
     */
    public void setWAutoFire(int value) {
        this.wAutoFire = value;
    }

    /**
     * Gets the value of the wShootBulletCount property.
     * 
     */
    public int getWShootBulletCount() {
        return wShootBulletCount;
    }

    /**
     * Sets the value of the wShootBulletCount property.
     * 
     */
    public void setWShootBulletCount(int value) {
        this.wShootBulletCount = value;
    }

    /**
     * Gets the value of the wMaxLength property.
     * 
     */
    public int getWMaxLength() {
        return wMaxLength;
    }

    /**
     * Sets the value of the wMaxLength property.
     * 
     */
    public void setWMaxLength(int value) {
        this.wMaxLength = value;
    }

    /**
     * Gets the value of the wTimeToIdle property.
     * 
     */
    public float getWTimeToIdle() {
        return wTimeToIdle;
    }

    /**
     * Sets the value of the wTimeToIdle property.
     * 
     */
    public void setWTimeToIdle(float value) {
        this.wTimeToIdle = value;
    }

    /**
     * Gets the value of the wNormalOffset property.
     * 
     */
    public float getWNormalOffset() {
        return wNormalOffset;
    }

    /**
     * Sets the value of the wNormalOffset property.
     * 
     */
    public void setWNormalOffset(float value) {
        this.wNormalOffset = value;
    }

    /**
     * Gets the value of the wNormalFactor property.
     * 
     */
    public float getWNormalFactor() {
        return wNormalFactor;
    }

    /**
     * Sets the value of the wNormalFactor property.
     * 
     */
    public void setWNormalFactor(float value) {
        this.wNormalFactor = value;
    }

    /**
     * Gets the value of the wOnairOffset property.
     * 
     */
    public float getWOnairOffset() {
        return wOnairOffset;
    }

    /**
     * Sets the value of the wOnairOffset property.
     * 
     */
    public void setWOnairOffset(float value) {
        this.wOnairOffset = value;
    }

    /**
     * Gets the value of the wOnairFactor property.
     * 
     */
    public float getWOnairFactor() {
        return wOnairFactor;
    }

    /**
     * Sets the value of the wOnairFactor property.
     * 
     */
    public void setWOnairFactor(float value) {
        this.wOnairFactor = value;
    }

    /**
     * Gets the value of the wMoveOffset property.
     * 
     */
    public float getWMoveOffset() {
        return wMoveOffset;
    }

    /**
     * Sets the value of the wMoveOffset property.
     * 
     */
    public void setWMoveOffset(float value) {
        this.wMoveOffset = value;
    }

    /**
     * Gets the value of the wMoveFactor property.
     * 
     */
    public float getWMoveFactor() {
        return wMoveFactor;
    }

    /**
     * Sets the value of the wMoveFactor property.
     * 
     */
    public void setWMoveFactor(float value) {
        this.wMoveFactor = value;
    }

    /**
     * Gets the value of the wNormalUpBase property.
     * 
     */
    public float getWNormalUpBase() {
        return wNormalUpBase;
    }

    /**
     * Sets the value of the wNormalUpBase property.
     * 
     */
    public void setWNormalUpBase(float value) {
        this.wNormalUpBase = value;
    }

    /**
     * Gets the value of the wNormalLateralBase property.
     * 
     */
    public float getWNormalLateralBase() {
        return wNormalLateralBase;
    }

    /**
     * Sets the value of the wNormalLateralBase property.
     * 
     */
    public void setWNormalLateralBase(float value) {
        this.wNormalLateralBase = value;
    }

    /**
     * Gets the value of the wNormalUpModifier property.
     * 
     */
    public float getWNormalUpModifier() {
        return wNormalUpModifier;
    }

    /**
     * Sets the value of the wNormalUpModifier property.
     * 
     */
    public void setWNormalUpModifier(float value) {
        this.wNormalUpModifier = value;
    }

    /**
     * Gets the value of the wNormalLateralModifier property.
     * 
     */
    public float getWNormalLateralModifier() {
        return wNormalLateralModifier;
    }

    /**
     * Sets the value of the wNormalLateralModifier property.
     * 
     */
    public void setWNormalLateralModifier(float value) {
        this.wNormalLateralModifier = value;
    }

    /**
     * Gets the value of the wNormalUpMax property.
     * 
     */
    public float getWNormalUpMax() {
        return wNormalUpMax;
    }

    /**
     * Sets the value of the wNormalUpMax property.
     * 
     */
    public void setWNormalUpMax(float value) {
        this.wNormalUpMax = value;
    }

    /**
     * Gets the value of the wNormalLateralMax property.
     * 
     */
    public float getWNormalLateralMax() {
        return wNormalLateralMax;
    }

    /**
     * Sets the value of the wNormalLateralMax property.
     * 
     */
    public void setWNormalLateralMax(float value) {
        this.wNormalLateralMax = value;
    }

    /**
     * Gets the value of the wNormalDirChange property.
     * 
     */
    public float getWNormalDirChange() {
        return wNormalDirChange;
    }

    /**
     * Sets the value of the wNormalDirChange property.
     * 
     */
    public void setWNormalDirChange(float value) {
        this.wNormalDirChange = value;
    }

    /**
     * Gets the value of the wMoveUpBase property.
     * 
     */
    public float getWMoveUpBase() {
        return wMoveUpBase;
    }

    /**
     * Sets the value of the wMoveUpBase property.
     * 
     */
    public void setWMoveUpBase(float value) {
        this.wMoveUpBase = value;
    }

    /**
     * Gets the value of the wMoveLateralBase property.
     * 
     */
    public float getWMoveLateralBase() {
        return wMoveLateralBase;
    }

    /**
     * Sets the value of the wMoveLateralBase property.
     * 
     */
    public void setWMoveLateralBase(float value) {
        this.wMoveLateralBase = value;
    }

    /**
     * Gets the value of the wMoveUpModifier property.
     * 
     */
    public float getWMoveUpModifier() {
        return wMoveUpModifier;
    }

    /**
     * Sets the value of the wMoveUpModifier property.
     * 
     */
    public void setWMoveUpModifier(float value) {
        this.wMoveUpModifier = value;
    }

    /**
     * Gets the value of the wMoveLateralModifier property.
     * 
     */
    public float getWMoveLateralModifier() {
        return wMoveLateralModifier;
    }

    /**
     * Sets the value of the wMoveLateralModifier property.
     * 
     */
    public void setWMoveLateralModifier(float value) {
        this.wMoveLateralModifier = value;
    }

    /**
     * Gets the value of the wMoveUpMax property.
     * 
     */
    public float getWMoveUpMax() {
        return wMoveUpMax;
    }

    /**
     * Sets the value of the wMoveUpMax property.
     * 
     */
    public void setWMoveUpMax(float value) {
        this.wMoveUpMax = value;
    }

    /**
     * Gets the value of the wMoveLateralMax property.
     * 
     */
    public float getWMoveLateralMax() {
        return wMoveLateralMax;
    }

    /**
     * Sets the value of the wMoveLateralMax property.
     * 
     */
    public void setWMoveLateralMax(float value) {
        this.wMoveLateralMax = value;
    }

    /**
     * Gets the value of the wMoveDirChange property.
     * 
     */
    public float getWMoveDirChange() {
        return wMoveDirChange;
    }

    /**
     * Sets the value of the wMoveDirChange property.
     * 
     */
    public void setWMoveDirChange(float value) {
        this.wMoveDirChange = value;
    }

    /**
     * Gets the value of the wOnairUpBase property.
     * 
     */
    public float getWOnairUpBase() {
        return wOnairUpBase;
    }

    /**
     * Sets the value of the wOnairUpBase property.
     * 
     */
    public void setWOnairUpBase(float value) {
        this.wOnairUpBase = value;
    }

    /**
     * Gets the value of the wOnairLateralBase property.
     * 
     */
    public float getWOnairLateralBase() {
        return wOnairLateralBase;
    }

    /**
     * Sets the value of the wOnairLateralBase property.
     * 
     */
    public void setWOnairLateralBase(float value) {
        this.wOnairLateralBase = value;
    }

    /**
     * Gets the value of the wOnairUpModifier property.
     * 
     */
    public float getWOnairUpModifier() {
        return wOnairUpModifier;
    }

    /**
     * Sets the value of the wOnairUpModifier property.
     * 
     */
    public void setWOnairUpModifier(float value) {
        this.wOnairUpModifier = value;
    }

    /**
     * Gets the value of the wOnairLateralModifier property.
     * 
     */
    public float getWOnairLateralModifier() {
        return wOnairLateralModifier;
    }

    /**
     * Sets the value of the wOnairLateralModifier property.
     * 
     */
    public void setWOnairLateralModifier(float value) {
        this.wOnairLateralModifier = value;
    }

    /**
     * Gets the value of the wOnairUpMax property.
     * 
     */
    public float getWOnairUpMax() {
        return wOnairUpMax;
    }

    /**
     * Sets the value of the wOnairUpMax property.
     * 
     */
    public void setWOnairUpMax(float value) {
        this.wOnairUpMax = value;
    }

    /**
     * Gets the value of the wOnairLateralMax property.
     * 
     */
    public float getWOnairLateralMax() {
        return wOnairLateralMax;
    }

    /**
     * Sets the value of the wOnairLateralMax property.
     * 
     */
    public void setWOnairLateralMax(float value) {
        this.wOnairLateralMax = value;
    }

    /**
     * Gets the value of the wOnairDirChange property.
     * 
     */
    public float getWOnairDirChange() {
        return wOnairDirChange;
    }

    /**
     * Sets the value of the wOnairDirChange property.
     * 
     */
    public void setWOnairDirChange(float value) {
        this.wOnairDirChange = value;
    }

    /**
     * Gets the value of the wCrouchUpBase property.
     * 
     */
    public float getWCrouchUpBase() {
        return wCrouchUpBase;
    }

    /**
     * Sets the value of the wCrouchUpBase property.
     * 
     */
    public void setWCrouchUpBase(float value) {
        this.wCrouchUpBase = value;
    }

    /**
     * Gets the value of the wCrouchLateralBase property.
     * 
     */
    public float getWCrouchLateralBase() {
        return wCrouchLateralBase;
    }

    /**
     * Sets the value of the wCrouchLateralBase property.
     * 
     */
    public void setWCrouchLateralBase(float value) {
        this.wCrouchLateralBase = value;
    }

    /**
     * Gets the value of the wCrouchUpModifier property.
     * 
     */
    public float getWCrouchUpModifier() {
        return wCrouchUpModifier;
    }

    /**
     * Sets the value of the wCrouchUpModifier property.
     * 
     */
    public void setWCrouchUpModifier(float value) {
        this.wCrouchUpModifier = value;
    }

    /**
     * Gets the value of the wCrouchLateralModifier property.
     * 
     */
    public float getWCrouchLateralModifier() {
        return wCrouchLateralModifier;
    }

    /**
     * Sets the value of the wCrouchLateralModifier property.
     * 
     */
    public void setWCrouchLateralModifier(float value) {
        this.wCrouchLateralModifier = value;
    }

    /**
     * Gets the value of the wCrouchUpMax property.
     * 
     */
    public float getWCrouchUpMax() {
        return wCrouchUpMax;
    }

    /**
     * Sets the value of the wCrouchUpMax property.
     * 
     */
    public void setWCrouchUpMax(float value) {
        this.wCrouchUpMax = value;
    }

    /**
     * Gets the value of the wCrouchLateralMax property.
     * 
     */
    public float getWCrouchLateralMax() {
        return wCrouchLateralMax;
    }

    /**
     * Sets the value of the wCrouchLateralMax property.
     * 
     */
    public void setWCrouchLateralMax(float value) {
        this.wCrouchLateralMax = value;
    }

    /**
     * Gets the value of the wCrouchDirChange property.
     * 
     */
    public float getWCrouchDirChange() {
        return wCrouchDirChange;
    }

    /**
     * Sets the value of the wCrouchDirChange property.
     * 
     */
    public void setWCrouchDirChange(float value) {
        this.wCrouchDirChange = value;
    }

    /**
     * Gets the value of the wUpModifier property.
     * 
     */
    public float getWUpModifier() {
        return wUpModifier;
    }

    /**
     * Sets the value of the wUpModifier property.
     * 
     */
    public void setWUpModifier(float value) {
        this.wUpModifier = value;
    }

    /**
     * Gets the value of the wSpread property.
     * 
     */
    public float getWSpread() {
        return wSpread;
    }

    /**
     * Sets the value of the wSpread property.
     * 
     */
    public void setWSpread(float value) {
        this.wSpread = value;
    }

    /**
     * Gets the value of the wFireMaxSpeed property.
     * 
     */
    public float getWFireMaxSpeed() {
        return wFireMaxSpeed;
    }

    /**
     * Sets the value of the wFireMaxSpeed property.
     * 
     */
    public void setWFireMaxSpeed(float value) {
        this.wFireMaxSpeed = value;
    }

    /**
     * Gets the value of the wFireStartSpeed property.
     * 
     */
    public float getWFireStartSpeed() {
        return wFireStartSpeed;
    }

    /**
     * Sets the value of the wFireStartSpeed property.
     * 
     */
    public void setWFireStartSpeed(float value) {
        this.wFireStartSpeed = value;
    }

    /**
     * Gets the value of the wFireAceleration property.
     * 
     */
    public float getWFireAceleration() {
        return wFireAceleration;
    }

    /**
     * Sets the value of the wFireAceleration property.
     * 
     */
    public void setWFireAceleration(float value) {
        this.wFireAceleration = value;
    }

    /**
     * Gets the value of the wFireResistance property.
     * 
     */
    public float getWFireResistance() {
        return wFireResistance;
    }

    /**
     * Sets the value of the wFireResistance property.
     * 
     */
    public void setWFireResistance(float value) {
        this.wFireResistance = value;
    }

    /**
     * Gets the value of the wStabTime property.
     * 
     */
    public float getWStabTime() {
        return wStabTime;
    }

    /**
     * Sets the value of the wStabTime property.
     * 
     */
    public void setWStabTime(float value) {
        this.wStabTime = value;
    }

    /**
     * Gets the value of the wStabLightTime property.
     * 
     */
    public float getWStabLightTime() {
        return wStabLightTime;
    }

    /**
     * Sets the value of the wStabLightTime property.
     * 
     */
    public void setWStabLightTime(float value) {
        this.wStabLightTime = value;
    }

    /**
     * Gets the value of the wStabHurt property.
     * 
     */
    public float getWStabHurt() {
        return wStabHurt;
    }

    /**
     * Sets the value of the wStabHurt property.
     * 
     */
    public void setWStabHurt(float value) {
        this.wStabHurt = value;
    }

    /**
     * Gets the value of the wStabLightHurt property.
     * 
     */
    public float getWStabLightHurt() {
        return wStabLightHurt;
    }

    /**
     * Sets the value of the wStabLightHurt property.
     * 
     */
    public void setWStabLightHurt(float value) {
        this.wStabLightHurt = value;
    }

    /**
     * Gets the value of the wExplodeTime property.
     * 
     */
    public float getWExplodeTime() {
        return wExplodeTime;
    }

    /**
     * Sets the value of the wExplodeTime property.
     * 
     */
    public void setWExplodeTime(float value) {
        this.wExplodeTime = value;
    }

    /**
     * Gets the value of the wReadyTime property.
     * 
     */
    public float getWReadyTime() {
        return wReadyTime;
    }

    /**
     * Sets the value of the wReadyTime property.
     * 
     */
    public void setWReadyTime(float value) {
        this.wReadyTime = value;
    }

    /**
     * Gets the value of the wThrowOutTime property.
     * 
     */
    public float getWThrowOutTime() {
        return wThrowOutTime;
    }

    /**
     * Sets the value of the wThrowOutTime property.
     * 
     */
    public void setWThrowOutTime(float value) {
        this.wThrowOutTime = value;
    }

    /**
     * Gets the value of the wHurtRange property.
     * 
     */
    public float getWHurtRange() {
        return wHurtRange;
    }

    /**
     * Sets the value of the wHurtRange property.
     * 
     */
    public void setWHurtRange(float value) {
        this.wHurtRange = value;
    }

    /**
     * Gets the value of the wHurt property.
     * 
     */
    public float getWHurt() {
        return wHurt;
    }

    /**
     * Sets the value of the wHurt property.
     * 
     */
    public void setWHurt(float value) {
        this.wHurt = value;
    }

    /**
     * Gets the value of the wRangeStart property.
     * 
     */
    public float getWRangeStart() {
        return wRangeStart;
    }

    /**
     * Sets the value of the wRangeStart property.
     * 
     */
    public void setWRangeStart(float value) {
        this.wRangeStart = value;
    }

    /**
     * Gets the value of the wRangeEnd property.
     * 
     */
    public float getWRangeEnd() {
        return wRangeEnd;
    }

    /**
     * Sets the value of the wRangeEnd property.
     * 
     */
    public void setWRangeEnd(float value) {
        this.wRangeEnd = value;
    }

    /**
     * Gets the value of the wAccuracyTime property.
     * 
     */
    public float getWAccuracyTime() {
        return wAccuracyTime;
    }

    /**
     * Sets the value of the wAccuracyTime property.
     * 
     */
    public void setWAccuracyTime(float value) {
        this.wAccuracyTime = value;
    }

    /**
     * Gets the value of the wAccuracyTimeModefier property.
     * 
     */
    public float getWAccuracyTimeModefier() {
        return wAccuracyTimeModefier;
    }

    /**
     * Sets the value of the wAccuracyTimeModefier property.
     * 
     */
    public void setWAccuracyTimeModefier(float value) {
        this.wAccuracyTimeModefier = value;
    }

    /**
     * Gets the value of the wMaxAccuracy property.
     * 
     */
    public float getWMaxAccuracy() {
        return wMaxAccuracy;
    }

    /**
     * Sets the value of the wMaxAccuracy property.
     * 
     */
    public void setWMaxAccuracy(float value) {
        this.wMaxAccuracy = value;
    }

    /**
     * Gets the value of the wMinAccuracy property.
     * 
     */
    public float getWMinAccuracy() {
        return wMinAccuracy;
    }

    /**
     * Sets the value of the wMinAccuracy property.
     * 
     */
    public void setWMinAccuracy(float value) {
        this.wMinAccuracy = value;
    }

    /**
     * Gets the value of the wCrossLengthBase property.
     * 
     */
    public float getWCrossLengthBase() {
        return wCrossLengthBase;
    }

    /**
     * Sets the value of the wCrossLengthBase property.
     * 
     */
    public void setWCrossLengthBase(float value) {
        this.wCrossLengthBase = value;
    }

    /**
     * Gets the value of the wCrossLengthFactor property.
     * 
     */
    public float getWCrossLengthFactor() {
        return wCrossLengthFactor;
    }

    /**
     * Sets the value of the wCrossLengthFactor property.
     * 
     */
    public void setWCrossLengthFactor(float value) {
        this.wCrossLengthFactor = value;
    }

    /**
     * Gets the value of the wCrossDistanceBase property.
     * 
     */
    public float getWCrossDistanceBase() {
        return wCrossDistanceBase;
    }

    /**
     * Sets the value of the wCrossDistanceBase property.
     * 
     */
    public void setWCrossDistanceBase(float value) {
        this.wCrossDistanceBase = value;
    }

    /**
     * Gets the value of the wCrossDistanceFactor property.
     * 
     */
    public float getWCrossDistanceFactor() {
        return wCrossDistanceFactor;
    }

    /**
     * Sets the value of the wCrossDistanceFactor property.
     * 
     */
    public void setWCrossDistanceFactor(float value) {
        this.wCrossDistanceFactor = value;
    }

    /**
     * Gets the value of the wxOffset property.
     * 
     */
    public float getWXOffset() {
        return wxOffset;
    }

    /**
     * Sets the value of the wxOffset property.
     * 
     */
    public void setWXOffset(float value) {
        this.wxOffset = value;
    }

    /**
     * Gets the value of the wFlashRangeStart property.
     * 
     */
    public float getWFlashRangeStart() {
        return wFlashRangeStart;
    }

    /**
     * Sets the value of the wFlashRangeStart property.
     * 
     */
    public void setWFlashRangeStart(float value) {
        this.wFlashRangeStart = value;
    }

    /**
     * Gets the value of the wFlashRangeEnd property.
     * 
     */
    public float getWFlashRangeEnd() {
        return wFlashRangeEnd;
    }

    /**
     * Sets the value of the wFlashRangeEnd property.
     * 
     */
    public void setWFlashRangeEnd(float value) {
        this.wFlashRangeEnd = value;
    }

    /**
     * Gets the value of the wFlashBackFactor property.
     * 
     */
    public float getWFlashBackFactor() {
        return wFlashBackFactor;
    }

    /**
     * Sets the value of the wFlashBackFactor property.
     * 
     */
    public void setWFlashBackFactor(float value) {
        this.wFlashBackFactor = value;
    }

    /**
     * Gets the value of the wSightNormalOffset property.
     * 
     */
    public float getWSightNormalOffset() {
        return wSightNormalOffset;
    }

    /**
     * Sets the value of the wSightNormalOffset property.
     * 
     */
    public void setWSightNormalOffset(float value) {
        this.wSightNormalOffset = value;
    }

    /**
     * Gets the value of the wSightOnairOffset property.
     * 
     */
    public float getWSightOnairOffset() {
        return wSightOnairOffset;
    }

    /**
     * Sets the value of the wSightOnairOffset property.
     * 
     */
    public void setWSightOnairOffset(float value) {
        this.wSightOnairOffset = value;
    }

    /**
     * Gets the value of the wSightMoveOffset property.
     * 
     */
    public float getWSightMoveOffset() {
        return wSightMoveOffset;
    }

    /**
     * Sets the value of the wSightMoveOffset property.
     * 
     */
    public void setWSightMoveOffset(float value) {
        this.wSightMoveOffset = value;
    }

    /**
     * Gets the value of the wStabDistance property.
     * 
     */
    public float getWStabDistance() {
        return wStabDistance;
    }

    /**
     * Sets the value of the wStabDistance property.
     * 
     */
    public void setWStabDistance(float value) {
        this.wStabDistance = value;
    }

    /**
     * Gets the value of the wStabLightDistance property.
     * 
     */
    public float getWStabLightDistance() {
        return wStabLightDistance;
    }

    /**
     * Sets the value of the wStabLightDistance property.
     * 
     */
    public void setWStabLightDistance(float value) {
        this.wStabLightDistance = value;
    }

    /**
     * Gets the value of the wStabWidth property.
     * 
     */
    public float getWStabWidth() {
        return wStabWidth;
    }

    /**
     * Sets the value of the wStabWidth property.
     * 
     */
    public void setWStabWidth(float value) {
        this.wStabWidth = value;
    }

    /**
     * Gets the value of the wBackFactor property.
     * 
     */
    public float getWBackFactor() {
        return wBackFactor;
    }

    /**
     * Sets the value of the wBackFactor property.
     * 
     */
    public void setWBackFactor(float value) {
        this.wBackFactor = value;
    }

    /**
     * Gets the value of the wTime property.
     * 
     */
    public float getWTime() {
        return wTime;
    }

    /**
     * Sets the value of the wTime property.
     * 
     */
    public void setWTime(float value) {
        this.wTime = value;
    }

    /**
     * Gets the value of the wTimeMax property.
     * 
     */
    public float getWTimeMax() {
        return wTimeMax;
    }

    /**
     * Sets the value of the wTimeMax property.
     * 
     */
    public void setWTimeMax(float value) {
        this.wTimeMax = value;
    }

    /**
     * Gets the value of the wTimeFade property.
     * 
     */
    public float getWTimeFade() {
        return wTimeFade;
    }

    /**
     * Sets the value of the wTimeFade property.
     * 
     */
    public void setWTimeFade(float value) {
        this.wTimeFade = value;
    }

}
