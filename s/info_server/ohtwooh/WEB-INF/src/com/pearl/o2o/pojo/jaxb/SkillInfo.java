//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.10.25 at 04:24:54 ���� CST 
//


package com.pearl.o2o.pojo.jaxb;

import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import com.pearl.o2o.utils.BinaryUtil;


/**
 * <p>Java class for SkillInfo complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SkillInfo">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="effect" type="{http://www.w3.org/2001/XMLSchema}float" maxOccurs="4" minOccurs="4"/>
 *         &lt;element name="effectTime" type="{http://www.w3.org/2001/XMLSchema}float" maxOccurs="4" minOccurs="4"/>
 *         &lt;element name="coolDown" type="{http://www.w3.org/2001/XMLSchema}float" maxOccurs="4" minOccurs="4"/>
 *         &lt;element name="hurtAddition" type="{http://www.w3.org/2001/XMLSchema}float" maxOccurs="4" minOccurs="4"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SkillInfo", propOrder = {
    "type",
    "effect",
    "effectTime",
    "coolDown",
    "hurtAddition"
})
public class SkillInfo {

	public void writeByte(OutputStream out) throws Exception{
		
		out.write(BinaryUtil.toByta(type));		
		
		out.write(BinaryUtil.toByta(effect.size()));
		for(Float f:effect){
			out.write(BinaryUtil.toByta(f));
		}
		
		out.write(BinaryUtil.toByta(effectTime.size()));
		for(Float f:effectTime){
			out.write(BinaryUtil.toByta(f));
		}
		
		out.write(BinaryUtil.toByta(coolDown.size()));
		for(Float f:coolDown){
			out.write(BinaryUtil.toByta(f));
		}
		
		out.write(BinaryUtil.toByta(hurtAddition.size()));
		for(Float f:hurtAddition){
			out.write(BinaryUtil.toByta(f));
		}
	}
    protected int type;
    @XmlElement(type = Float.class)
    protected List<Float> effect;
    @XmlElement(type = Float.class)
    protected List<Float> effectTime;
    @XmlElement(type = Float.class)
    protected List<Float> coolDown;
    @XmlElement(type = Float.class)
    protected List<Float> hurtAddition;

    /**
     * Gets the value of the type property.
     * 
     */
    public int getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     */
    public void setType(int value) {
        this.type = value;
    }

    /**
     * Gets the value of the effect property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the effect property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEffect().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Float }
     * 
     * 
     */
    public List<Float> getEffect() {
        if (effect == null) {
            effect = new ArrayList<Float>();
        }
        return this.effect;
    }

    /**
     * Gets the value of the effectTime property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the effectTime property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEffectTime().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Float }
     * 
     * 
     */
    public List<Float> getEffectTime() {
        if (effectTime == null) {
            effectTime = new ArrayList<Float>();
        }
        return this.effectTime;
    }

    /**
     * Gets the value of the coolDown property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the coolDown property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCoolDown().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Float }
     * 
     * 
     */
    public List<Float> getCoolDown() {
        if (coolDown == null) {
            coolDown = new ArrayList<Float>();
        }
        return this.coolDown;
    }

    /**
     * Gets the value of the hurtAddition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the hurtAddition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHurtAddition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Float }
     * 
     * 
     */
    public List<Float> getHurtAddition() {
        if (hurtAddition == null) {
            hurtAddition = new ArrayList<Float>();
        }
        return this.hurtAddition;
    }

}
