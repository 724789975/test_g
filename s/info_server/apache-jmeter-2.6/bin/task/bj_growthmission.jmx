<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="pj_infor_server_tester" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="pj_infor_server_test_thread_group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1331812792000</longProp>
        <longProp name="ThreadGroup.end_time">1331812792000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="socket_parameter" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="info_server_ip" elementType="Argument">
              <stringProp name="Argument.name">info_server_ip</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="info_server_port" elementType="Argument">
              <stringProp name="Argument.name">info_server_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeout_connect" elementType="Argument">
              <stringProp name="Argument.name">timeout_connect</stringProp>
              <stringProp name="Argument.value">3000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeout_response" elementType="Argument">
              <stringProp name="Argument.name">timeout_response</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="resource_parameter" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="resultsFile" elementType="Argument">
              <stringProp name="Argument.name">resultsFile</stringProp>
              <stringProp name="Argument.value">${__property(user.dir)}${__BeanShell(File.separator,)}result${__BeanShell(File.separator,)}result_${__time(yyyyMMdd-HHmmss)}.csv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="playerInfoData" elementType="Argument">
              <stringProp name="Argument.name">playerInfoData</stringProp>
              <stringProp name="Argument.value">${__property(user.dir)}${__BeanShell(File.separator,)}data${__BeanShell(File.separator,)}bj_player_data.csv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="combineData" elementType="Argument">
              <stringProp name="Argument.name">combineData</stringProp>
              <stringProp name="Argument.value">${__property(user.dir)}${__BeanShell(File.separator,)}data${__BeanShell(File.separator,)}sysItemId.csv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="behavior_parameter" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="actionInterval" elementType="Argument">
              <stringProp name="Argument.name">actionInterval</stringProp>
              <stringProp name="Argument.value">500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="intervalOffset" elementType="Argument">
              <stringProp name="Argument.name">intervalOffset</stringProp>
              <stringProp name="Argument.value">500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="loopNum" elementType="Argument">
              <stringProp name="Argument.name">loopNum</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="login_actionInterval" elementType="Argument">
              <stringProp name="Argument.name">login_actionInterval</stringProp>
              <stringProp name="Argument.value">3000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="login_intervalOffset" elementType="Argument">
              <stringProp name="Argument.name">login_intervalOffset</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="简单控制器c_get_growth" enabled="true">
          <stringProp name="TestPlan.comments">成长任务相关TestCase</stringProp>
        </GenericController>
        <hashTree>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="c_get_growth_list_sampler" enabled="true">
            <stringProp name="TestPlan.comments">获取成长人列表</stringProp>
            <stringProp name="TCPSampler.classname">com.pearl.o2o.jmeter.protocol.tcp.sampler.CM_RequestTextRPCClientImpl</stringProp>
            <stringProp name="TCPSampler.server">${info_server_ip}</stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port">${info_server_port}</stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout">${timeout_response}</stringProp>
            <stringProp name="TCPSampler.ctimeout">${timeout_connect}</stringProp>
            <stringProp name="TCPSampler.request">{
	&quot;url&quot;:&quot;c_get_growth_list&quot;,
	&quot;paramMap&quot;:{
		&quot;pid&quot;:&quot;4427&quot;
	}
}</stringProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="96784904">error</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">mid</stringProp>
              <stringProp name="RegexExtractor.regex">([0-9]+), &quot;(.+)&quot;, &quot;(.+)&quot;,&quot;(.+)&quot;, ([0-9]+), ([0-9]+), 1, 0, ([0-9]+), 0, ([0-9]+),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">0</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="false">
            <stringProp name="IfController.condition">${mid} &gt; 0</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="c_get_growth_gift_sampler" enabled="true">
              <stringProp name="TestPlan.comments">领取成长任务礼物</stringProp>
              <stringProp name="TCPSampler.classname">com.pearl.o2o.jmeter.protocol.tcp.sampler.CM_RequestTextRPCClientImpl</stringProp>
              <stringProp name="TCPSampler.server">${info_server_ip}</stringProp>
              <boolProp name="TCPSampler.reUseConnection">true</boolProp>
              <stringProp name="TCPSampler.port">${info_server_port}</stringProp>
              <boolProp name="TCPSampler.nodelay">false</boolProp>
              <stringProp name="TCPSampler.timeout">${timeout_response}</stringProp>
              <stringProp name="TCPSampler.ctimeout">${timeout_connect}</stringProp>
              <stringProp name="TCPSampler.request">{
	&quot;url&quot;:&quot;c_get_growth_gift&quot;,
	&quot;paramMap&quot;:{
		&quot;pid&quot;:&quot;${pid}&quot;,
		&quot;mid&quot;:&quot;${mid}&quot;
	}
}</stringProp>
              <stringProp name="ConfigTestElement.username"></stringProp>
              <stringProp name="ConfigTestElement.password"></stringProp>
            </TCPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3237038">info</stringProp>
                  <stringProp name="100526016">items</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${resultsFile}</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
