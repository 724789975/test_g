<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"	
	xmlns:view="view.*"
	 height="100%" width="100%"
	creationComplete="init()" xmlns:vo="vo.*" fontSize="12" xmlns:component="component.*">
	<mx:Script>
		<![CDATA[
			import mx.events.ItemClickEvent;
			import mx.validators.StringValidator;
			import mx.events.CloseEvent;
			import event.BoxClickEvent;
			import mx.events.ListEvent;
			import view.SysItemNameList2;
			import vo.SysItem;
			import mx.managers.PopUpManager;
			import view.SysItemNameList;
			import mx.controls.Alert;
			import utils.ColumnFactory;
			import utils.DatagridValidateFactory;
			import mx.utils.StringUtil;
			import mx.controls.TextInput;
			import mx.validators.Validator;
			import mx.validators.NumberValidator;
			import mx.events.DataGridEvent;
			import vo.Player;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import vo.GmUser;
			import utils.*;
			private var model:O2oModel = O2oModel.getInstance();
			[Bindable]
			public var playerList:ArrayCollection=new ArrayCollection();
			//[Bindable]
			//public var searchList:ArrayCollection=new ArrayCollection();
			[Bindable]
			public var player:Player=new Player();
			[Bindable]
			private var weapons:ArrayCollection;
			private function init():void{
				initBtn();
				playerDataGrid.columns=ColumnFactory.getPlayerColumns(false);
				//getRo.getPlayerList();
			}
			private function initBtn():void{
		 		playerDataGrid.selectable=true;
		 		tabType.selectedIndex=0;
			}
			private function onSearchBtnClick():void{
				this.player = new Player();
				//this.searchList= new ArrayCollection();
				if(StringUtil.trim(playerId.text)){
					var result:int = ValidateUtils.validateInt(StringUtil.trim(playerId.text));
					if(result == 2){
						Alert.show("Player Id is int");
						return;
					} else if(result == 0){
						getRo.getPlayerById(StringUtil.trim(playerId.text));
					}
					playerName.text="";
				} else if(StringUtil.trim(playerName.text) == "*"){
					//searchList = playerList;
					//getRo.getPlayerList();
					getRo.fuzzySelectByName(StringUtil.trim(""));
				}else{
					getRo.fuzzySelectByName(StringUtil.trim(playerName.text));
				}
			}
			private function fuzzySelectByNameHandler(evt:ResultEvent):void{
			 	this.playerList=evt.result as ArrayCollection;
			 	if(null == this.playerList){
		 			this.playerListPanel.title = "Player List(total 0)";
		 		} else {
		 			this.playerListPanel.title = "Player List(total " + this.playerList.length + ")";
		 		}
			}
			private function onSaveBtnClick():void{
				updateRo.updatePlayer(this.playerList);
				initBtn();
				playerDataGrid.editable=false;
				
			}
			private function onEditBtnClick():void{
				playerDataGrid.editable=true;
			}
			private function onCancelBtnClick():void{
				initBtn();
				playerDataGrid.editable=false;
				onSearchBtnClick();
			}
			private function getPlayerListHandler(evt:ResultEvent):void{
				playerList=evt.result as ArrayCollection;
			}
			private function updatePlayerListHandler(evt:ResultEvent):void{
				onSearchBtnClick()
			}
			private function defaultFaultHandle(evt:FaultEvent):void{
				Alert.show(evt.fault.faultString);
			}
			private function selectHandler():void{
		 		var tempId:int = (playerDataGrid.selectedItem as Player).id;
		 		getRo.getPlayerById1(tempId.toString());
		 	}
		 	private function checkIt(event:Event):void
			{
				playerDataGrid.invalidateList();
			}
			private var datagridValidate:Validator;
			private function endEdit(e:DataGridEvent):void{
		 		var dataField:String = e.dataField;
				var fCell:Array=[e.columnIndex,e.rowIndex];
				var source:Object=e.currentTarget.itemEditorInstance;
                var myEditor:TextInput = TextInput(e.currentTarget.itemEditorInstance);
                var newVal:String = myEditor.text;
                var oldVal:String = e.currentTarget.editedItemRenderer.data[e.dataField]; 
               	newVal=StringUtil.trim(newVal);
               	myEditor.text=newVal;
                oldVal=StringUtil.trim(oldVal);
               	if(newVal!=oldVal){
               		var validate:Validator=DatagridValidateFactory.getCharacterValidater(dataField,source);
               		if(validate!=null){
               			datagridValidate=validate;
	               		var val:*=validate.validate();
	               		if(val.type=="valid"){
	               			playerDataGrid.selectable=false;
	               			this.player.isChange=1;
	               			var array:Array=new Array();
	               			array.push(dataField);
	               			callLater(maintainFocus1,array);
	               			
	               		}else{
	               			e.preventDefault();
	               			fCell.push(source);
	               			callLater(maintainEdit,fCell);
	               		}
               		}else{
               			callLater(maintainFocus);
               		}
               	}else{
               		callLater(maintainFocus);
               	}
               	
		 	}
		 	private function maintainEdit(colIndex:int,rowIndex:int,source:Object):void
			{
				var editCell:Object = {columnIndex:colIndex, rowIndex: rowIndex};
				if(playerDataGrid.editedItemPosition==null)
				{
	   				playerDataGrid.editedItemPosition = editCell;
					callLater(validateCurrentEditor);
	   			}
			}
			private function validateCurrentEditor():void{
				datagridValidate.source=playerDataGrid.itemEditorInstance;
				datagridValidate.validate();
			}
			private function maintainFocus1(str:String):void
			{
				if(str=="exp"){
					getRo.getPlayerTitle(this.player.exp);
				}
				if(str=="rank"){
					getRo.getPlayerExp(this.player.rank);
				}	
			}
			private function maintainFocus():void
			{
	   			playerDataGrid.editedItemPosition = null;
			}
			private function getPlayerTitleHandler(evt:ResultEvent):void{
				var title:int=evt.result as int;
				this.player.rank=title;
				playerDataGrid.selectable=true;
				playerDataGrid.editedItemPosition = null;
			
			}
			private function getPlayerExpHandler(evt:ResultEvent):void{
				var exp:int=evt.result as int;
				this.player.exp=exp;
				if(player.id != 0){
					var updateList:ArrayCollection = new ArrayCollection();
					updateList.addItem(player);
					updateRo.updatePlayer(model.gmUser,updateList);
				}
			
			}
			private function changList(e:BoxClickEvent):void{
				getRo.getSysItemList(e._data);
			}
			private var sysItemNameView:SysItemNameList2;
			private function getSysItemListHandler(evt:ResultEvent):void{
			 this.weapons=evt.result as ArrayCollection;
			 if(sysItemNameView==null){
				 sysItemNameView=SysItemNameList2(PopUpManager.createPopUp(this,SysItemNameList2,true));
				 PopUpManager.centerPopUp(sysItemNameView);
				 sysItemNameView.sysItemNameDatagrid.columns=ColumnFactory.getSysItemName2(false);
				
				 sysItemNameView.save.addEventListener(MouseEvent.CLICK,presentGift);
				 sysItemNameView.addEventListener(BoxClickEvent.BOX_CLICK,changList);
				 sysItemNameView.addEventListener(CloseEvent.CLOSE,function():void{
				 	PopUpManager.removePopUp(sysItemNameView);
				 	sysItemNameView=null;});
				 sysItemNameView.cancel.addEventListener(MouseEvent.CLICK,function():void{
				 	PopUpManager.removePopUp(sysItemNameView);
				 	sysItemNameView=null;});
			 }
			  sysItemNameView.sysItemList=this.weapons;
			}
			private function presentGift(e:MouseEvent):void{
				var list:ArrayCollection=sysItemNameView.sysItemList;
				var selectedList:ArrayCollection=new ArrayCollection();
				for each(var si:SysItem in list){
					if(si.selected){
						selectedList.addItem(si);
					}
				}
				if(selectedList.length!=0){
					createRo.presentToPlayer(model.gmUser,selectedList,this.player.userName,this.player.id);
				}
			}
			private function defaultHandler(event:ResultEvent):void{
			}
			private function onShowPlayerItemView(e:Event):void{
				var btn:Button = e.currentTarget as Button;
				if(playerItemView.visible){
					playerItemView.visible = false;
					playerItemView.height  = 0;
					btn.label 		= "Show";
				}else{
					playerItemView.visible = true;
					playerItemView.height = 208;
					btn.label 		= "Hide";
				}
			}
			private function onRefreshBtnClick():void{
				initBtn();
				this.player = new Player();
				if(StringUtil.trim(playerId.text)){
					getRo.getPlayerById(StringUtil.trim(playerId.text));
					playerName.text="";
				}/*else if(StringUtil.trim(playerName.text) == "*"){
					getRo.fuzzySelectByName(StringUtil.trim(""));
				}*/else if(StringUtil.trim(playerName.text)){
					getRo.fuzzySelectByName(StringUtil.trim(playerName.text));
				} else {
					player = new Player();
					playerItemView.playerId = 0;
					playerItemView.playerItemList = new ArrayCollection();
					playerList = new ArrayCollection();
				}
			}
			
			private function onKickPlayerBtnClick():void{
				var tempPlayer:Player = playerDataGrid.selectedItem as Player;
				if(null != tempPlayer && tempPlayer.id != 0){
					var tempId:int = tempPlayer.id
					createRo.kickPlayer(model.gmUser,tempId);
				}else {
					Alert.show("Choose one player!");
				}
			}
			private function onResetPlayerWeapon():void{
				var tempPlayer:Player = playerDataGrid.selectedItem as Player;
				if(null != tempPlayer && tempPlayer.id != 0){
					var tempId:int = tempPlayer.id
					updateRo.resetPlayerWeapon(model.gmUser,tempId);
				}else {
					Alert.show("Choose one player!");
				}
			}
			private function onCheckPlayerData():void{
				var tempPlayer:Player = playerDataGrid.selectedItem as Player;
				if(null != tempPlayer && tempPlayer.id != 0){
					var tempId:int = tempPlayer.id
					getRo.checkPlayerData(model.gmUser,tempId);
				}else {
					Alert.show("Choose one player!");
				}
			}
			
			private function saveChange():void{
				var numValidte:NumberValidator=new NumberValidator();
				numValidte.property="text";
				numValidte.domain = "int";
				if(numValidte.validate(StringUtil.trim(credit.text)).type=="invalid"){
					Alert.show("Credit is int");
				}else if(numValidte.validate(StringUtil.trim(credit.text)).type=="valid"){
					var tutoStr:String=StringUtil.trim(tutorial.text);
					if(tutoStr.length!=8){
						Alert.show("功能状态长度应为8");
						tutorial.getFocus();
						return;
					}else{
						for(var i:int=0;i<7;i++){
							trace(tutoStr.charAt(i));
							if(tutoStr.charAt(i)!="0" && tutoStr.charAt(i)!="1" && tutoStr.charAt(i)!="2"){
								Alert.show("功能状态含无效字符");
								tutorial.getFocus();
								return;
							}
						}
					}
					player.credit = parseInt(this.credit.text);
					//player.exp = parseInt(this.exp.text);
					player.GPoint = parseInt(this.GPoint.text);
					player.GScore = parseInt(this.GScore.text);
					player.credit = parseInt(this.credit.text);
					player.voucher = parseInt(this.voucher.text);
					player.tutorial = tutoStr;
					player.unusableResource=parseInt(this.unusableResource.text);
					player.usableResource=parseInt(this.usableResource.text);
					//zlm2015-10-9-匹配-gm后台-开始 
					var matchWinStr:String=StringUtil.trim(this.matchWin.text);
					if(matchWinStr.length!=10){
						Alert.show("功能状态长度应为10");
						this.matchWin.getFocus();
						return;
					}else{
						for(var i:int=0;i<9;i++){
							trace(matchWinStr.charAt(i));
							if(matchWinStr.charAt(i)!="0" && matchWinStr.charAt(i)!="1"){
								Alert.show("功能状态含无效字符");
								this.matchWin.getFocus();
								return;
							}
						}
					}
					player.matchWin = this.matchWin.text;
					var pvalue:int=parseInt(this.pvalue.text);
					player.pvalue=pvalue;
					
					var mvalue:int=parseInt(this.mvalue.text);
					player.mvalue=mvalue;
					//zlm2015-10-9-匹配-gm后台-结束 
					if(player.rank != parseInt(this.rank.text) || player.isVip !=parseInt(this.isVip.text)){
						var rank:int = parseInt(this.rank.text);
						var vipRank:int =parseInt(this.isVip.text);
						if(rank > 80){
							Alert.show("等级不能超过80级");
						} else {
							player.rank = rank;
							getRo.getPlayerExp(this.player.rank);
						}
						
						if(vipRank>9){
							Alert.show("Max Vip rank is 9!");
						}else{
							player.isVip=vipRank;
							player.vipExp=parseInt(this.vipExp.text);
						}
					} 

						if(player.id != 0){
						var updateList:ArrayCollection = new ArrayCollection();
						updateList.addItem(player);
						updateRo.updatePlayer(model.gmUser,updateList);
						}
					

				}
			}
			
			private function getPlayerByIdHandler(evt:ResultEvent):void{
				this.playerList=evt.result as ArrayCollection;
				if(this.playerList != null && playerList.length > 0){
					this.player = (evt.result as ArrayCollection).getItemAt(0) as Player;
					/* playerItemView.playerId=player.id;
		 			playerItemView.init(); */
		 			saveChangeBtn.enabled=true;
		 		} else {
		 			this.player = new Player();
		 			this.playerList = new ArrayCollection();
		 		}
		 		if(null == this.playerList){
		 			this.playerListPanel.title = "Player list(tatol 0)";
		 		} else {
		 			this.playerListPanel.title = "Player list(tatol" + this.playerList.length + ")";
		 		}
			}
			
			private function getPlayerByIdHandler1(evt:ResultEvent):void{
				this.player = (evt.result as ArrayCollection).getItemAt(0) as Player;
				if(this.player.isOnline==1){
					this.pp.title="Info[Online]";
				}else{
					this.pp.title="Info(Offline)";
				}
				if(player != null && player.id != 0){
					
					playerItemView.playerId=player.id;
					playerItemView.init();
					playerItemView.fatherWindow = this;
					
		 			saveChangeBtn.enabled=true;
		 		}
			}
			private function checkPlayerDataHandler(evt:ResultEvent):void{
				var a:Alert = Alert.show(evt.result.toString(),"玩家数据检测",4);
				a.setStyle("backgroundColor", 0xffffff);
				a.setStyle("backgroundAlpha", 0.50);
				a.setStyle("color", 0x000000);
				
			}
			private function changeTab(e:ItemClickEvent):void{
				
				if(e.index==1){
					playerDefaultItemView.playerId=player.id;
					playerDefaultItemView.init();
					playerDefaultItemView.fatherWindow = this;
				}else if(e.index==0){
					playerItemView.playerId=player.id;
					playerItemView.init();
					playerItemView.fatherWindow = this;
				}else{
					Alert.show("exception happen: e.index="+e.index);
				}
			}
			
			[Bindable]
			private var tutorialTip:String="代表玩家的功能模块的状态，共8位数字，每位有三种值。"+"\n"+
											"第一位标识任务系统功能"+"\n"+ 
											"第二位标识每日任务功能"+"\n"+ 
											"第三位标识合成功能"+"\n"+ 
											"第四位标识在线时长功能"+"\n"+ 
											"第五位标识博彩功能"+"\n"+ 
											"第六位标识每日签到功能"+"\n"+ 
											"第七位标识免费兑换区功能"+"\n"+ 
											"第八位标识靶场功能"+"\n"+ 
											"状态值：CLOSE('0'), FLASH('1'), OPEN('2')";
		]]>
	</mx:Script>
	<mx:RemoteObject id="getRo" destination="ro.get" showBusyCursor="true">
		<mx:method name="fuzzySelectByName" result="fuzzySelectByNameHandler(event)" fault="defaultFaultHandle(event)"/>
		<mx:method name="getPlayerList" result="getPlayerListHandler(event)" fault="defaultFaultHandle(event)"/>
		<mx:method name="getPlayerById" result="getPlayerByIdHandler(event)" fault=""/>
		<mx:method name="getPlayerById1" result="getPlayerByIdHandler1(event)" fault="defaultFaultHandle(event)"/>
		<mx:method name="getPlayerTitle" result="getPlayerTitleHandler(event)" fault="defaultFaultHandle(event)"/>
		<mx:method name="getPlayerExp" result="getPlayerExpHandler(event)" fault="defaultFaultHandle(event)"/>
		<mx:method name="getSysItemList" result="getSysItemListHandler(event)"/>
		<mx:method name="checkPlayerData" result="checkPlayerDataHandler(event)"/>
	</mx:RemoteObject>
	<mx:RemoteObject id="createRo" destination="ro.create" showBusyCursor="true">
		<mx:method name="presentToPlayer" result="defaultHandler(event)" />
	</mx:RemoteObject>
	<mx:RemoteObject id="updateRo" destination="ro.update" showBusyCursor="true">
		<mx:method name="updatePlayer" result="updatePlayerListHandler(event)" fault="defaultFaultHandle(event)"/>
		<mx:method name="resetPlayerWeapon" result="updatePlayerListHandler(event)" fault="defaultFaultHandle(event)"/>
	</mx:RemoteObject>
	<mx:HBox height="100%" width="100%">
	<mx:VBox  height="100%" width="100%">
		<mx:HBox width="100%">
			<mx:ApplicationControlBar width="100%" >	
					<mx:Label text="Player ID"/>
					<mx:TextInput id="playerId" />
					<mx:Label text="{resourceManager.getString('Language','label.CharacterName')}"/>
					<mx:TextInput id="playerName" />
					<mx:Button id="searchBtn"  label="{resourceManager.getString('Language','button.Search')}"  click="onSearchBtnClick()"/>	
					<!--<mx:Button id="showPlayerItemView" click="onShowPlayerItemView(event)" label="隐藏仓库"/>	-->	
		        	<mx:Button id="refreshBtn"  label="{resourceManager.getString('Language','button.Refresh')}"  click="onRefreshBtnClick()"/>
		        	<mx:Button id="kickPlayer"  label="{resourceManager.getString('Language','button.KickPlayer')}"  click="onKickPlayerBtnClick()"/>
		        	<mx:Button id="resetPlayerWeapon"  label="{resourceManager.getString('Language','button.ResetPlayerItem')}"  click="onResetPlayerWeapon()" width="135"/>
		        	<mx:Button id="checkPlayerData"  label="{resourceManager.getString('Language','button.CheckPlayerData')}"  click="onCheckPlayerData()" width="135"/>
		     </mx:ApplicationControlBar>
		</mx:HBox>
		<mx:HBox height="100%" width="100%">
			<mx:Panel title="{resourceManager.getString('Language','playerList')}" width="362" height="100%" id="playerListPanel">
				<component:MyDataGrid id="playerDataGrid" dataProvider="{playerList}" itemClick="selectHandler()" lockedColumnCount="3" 
				  width="100%" height="100%" editable="false" change="checkIt(event)" itemEditEnd="endEdit(event)">
				</component:MyDataGrid>
			</mx:Panel>
			<mx:VBox width="1215" height="762">
			<mx:HBox width="1196" height="448">
				<mx:Panel title="{resourceManager.getString('Language','label.PlayerInfo')}" height="430" width="405" id="pp">
						<!--<mx:Form>
							<mx:FormItem label="玩家ID:">
								<mx:Label id="pid" text="{player.id}"/>
							</mx:FormItem>
						</mx:Form>-->
						<mx:Form width="372" height="382">
							<mx:FormItem label="{resourceManager.getString('Language','label.PlayerExp')}:" >
								<mx:TextInput id="exp" text="{player.exp}" editable="false"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.Grade')}:">
								<mx:TextInput id="rank" text="{player.rank}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.GamePoint')}:">
								<mx:TextInput id="GPoint" text="{player.GPoint}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.Score')}:">
								<mx:TextInput id="GScore" text="{player.GScore}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.FCPoint')}:">
								<mx:TextInput id="credit" text="{player.credit}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.Voucher')}:">
								<mx:TextInput id="voucher" text="{player.voucher}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.isVip')}:">
								<mx:TextInput id="isVip" text="{player.isVip}"/>
							</mx:FormItem><mx:FormItem label="{resourceManager.getString('Language','label.vipExp')}:">
								<mx:TextInput id="vipExp" text="{player.vipExp}" />
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.FuncSign')}:">
								<mx:TextInput id="tutorial" text="{player.tutorial}" toolTip="{tutorialTip}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.UnusableResource')}:">
								<mx:TextInput id="unusableResource" text="{player.unusableResource}" />
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.UsableResource')}:">
								<mx:TextInput id="usableResource" text="{player.usableResource}"/>
							</mx:FormItem>		
							<!--//zlm2015-10-9-匹配-gm后台-开始 -->
							<mx:FormItem label="匹配:">
								<mx:TextInput id="matchWin" text="{player.matchWin}" toolTip="{'保存最近十场匹配的胜负。\n0为负，1为胜。'}"/>
							</mx:FormItem>
							<!--//zlm2015-10-9-匹配-gm后台-结束 -->
							<!--//zlm2016-07-15-匹配-gm后台-开始 -->
							<mx:FormItem label="P值">
								<mx:TextInput id="pvalue" text="{player.pvalue}" toolTip="{'P值'}"/>
							</mx:FormItem>
							<mx:FormItem label="m值">
								<mx:TextInput id="mvalue" text="{player.mvalue}" toolTip="{'m值'}"/>
							</mx:FormItem>
							<!--//zlm2016-07-15-匹配-gm后台-结束 -->
							<mx:FormItem label="{resourceManager.getString('Language','label.Profession')}:">
								<mx:Label text="{player.characters}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.LastLogin')}:">
								<mx:Label text="{player.lastLogin}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.LastLogout')}:">
								<mx:Label text="{player.lastLogout}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.CreateTime')}:">
								<mx:Label text="{player.createTime}"/>
							</mx:FormItem>
							<mx:Button id="saveChangeBtn" verticalCenter="true" label="{resourceManager.getString('Language','button.Save')}" click="saveChange();" enabled="false" textAlign="center"/>
						</mx:Form>					
						
					</mx:Panel>
					<mx:Panel title="{resourceManager.getString('Language','label.WearedItem')}" height="421" width="745">
						<mx:Form height="338" width="698">
							<mx:FormItem label="{resourceManager.getString('Language','label.RocketSoldier')}:">
								<mx:Text fontWeight="bold" text="{player.character1W}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.HeavyGun')}:">
								<mx:Text fontWeight="bold" text="{player.character2W}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.SharpShooter')}:">
								<mx:Text fontWeight="bold" text="{player.character3W}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.ShockWorker')}:">
								<mx:Text fontWeight="bold" text="{player.character4W}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.FireSoldier')}:">
								<mx:Text fontWeight="bold" text="{player.character5W}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.Nurse')}:">
								<mx:Text fontWeight="bold" text="{player.character6W}"/>
							</mx:FormItem>
							<mx:FormItem label="{resourceManager.getString('Language','label.Engineer')}:">
								<mx:Text fontWeight="bold" text="{player.character7W}"/>
							</mx:FormItem>
						</mx:Form>
					</mx:Panel>	
				</mx:HBox>
			<mx:VBox width="100%" height="100%">
				<mx:TabBar dataProvider="{subTab}" itemClick="changeTab(event)" id="tabType"/>
				<mx:ViewStack id="subTab" width="100%" height="100%" >
						<mx:Panel label="{resourceManager.getString('Language','label.PlayerStorage')}" title="{resourceManager.getString('Language','label.NotDefaultItemList')}" height="100%" width="100%" id="playerItemList">
							<view:PlayerItemView id="playerItemView" visible="true" height="232" width="1089"/>
						</mx:Panel>
						<mx:Panel label="{resourceManager.getString('Language','label.DefaultItem')}" title="{resourceManager.getString('Language','label.DefaultItemList')}"  id="defaultPlayerItemList" height="100%" width="100%">
							<view:PlayerDefaultItemView id="playerDefaultItemView" visible="true"/>
						</mx:Panel>
				</mx:ViewStack>
			</mx:VBox>
			</mx:VBox>
		</mx:HBox>
	 </mx:VBox>
	 </mx:HBox>
</mx:VBox>
